"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@wagmi";
exports.ids = ["vendor-chunks/@wagmi"];
exports.modules = {

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/esm/coinbaseWallet.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/esm/coinbaseWallet.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coinbaseWallet: () => (/* binding */ coinbaseWallet)\n/* harmony export */ });\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\ncoinbaseWallet.type = \"coinbaseWallet\";\nfunction coinbaseWallet(parameters = {}) {\n    if (parameters.version === \"3\" || parameters.headlessMode) return version3(parameters);\n    return version4(parameters);\n}\nfunction version4(parameters) {\n    let walletProvider;\n    let accountsChanged;\n    let chainChanged;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"coinbaseWalletSDK\",\n            name: \"Coinbase Wallet\",\n            rdns: \"com.coinbase.wallet\",\n            type: coinbaseWallet.type,\n            async connect ({ chainId, ...rest } = {}) {\n                try {\n                    const provider = await this.getProvider();\n                    const accounts = (await provider.request({\n                        method: \"eth_requestAccounts\",\n                        params: \"instantOnboarding\" in rest && rest.instantOnboarding ? [\n                            {\n                                onboarding: \"instant\"\n                            }\n                        ] : []\n                    })).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    // Switch to chain if provided\n                    let currentChainId = await this.getChainId();\n                    if (chainId && currentChainId !== chainId) {\n                        const chain = await this.switchChain({\n                            chainId\n                        }).catch((error)=>{\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code) throw error;\n                            return {\n                                id: currentChainId\n                            };\n                        });\n                        currentChainId = chain?.id ?? currentChainId;\n                    }\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (error) {\n                    if (/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(error.message)) throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                provider.disconnect();\n                provider.close?.();\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                return (await provider.request({\n                    method: \"eth_accounts\"\n                })).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                const chainId = await provider.request({\n                    method: \"eth_chainId\"\n                });\n                return Number(chainId);\n            },\n            async getProvider () {\n                if (!walletProvider) {\n                    const preference = (()=>{\n                        if (typeof parameters.preference === \"string\") return {\n                            options: parameters.preference\n                        };\n                        return {\n                            ...parameters.preference,\n                            options: parameters.preference?.options ?? \"all\"\n                        };\n                    })();\n                    const { createCoinbaseWalletSDK } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/viem\"), __webpack_require__.e(\"vendor-chunks/preact\"), __webpack_require__.e(\"vendor-chunks/idb-keyval\"), __webpack_require__.e(\"vendor-chunks/@coinbase\"), __webpack_require__.e(\"vendor-chunks/zustand\")]).then(__webpack_require__.bind(__webpack_require__, /*! @coinbase/wallet-sdk */ \"(ssr)/./node_modules/@coinbase/wallet-sdk/dist/index.js\"));\n                    const sdk = createCoinbaseWalletSDK({\n                        ...parameters,\n                        appChainIds: config.chains.map((x)=>x.id),\n                        preference\n                    });\n                    walletProvider = sdk.getProvider();\n                }\n                return walletProvider;\n            },\n            async isAuthorized () {\n                try {\n                    const accounts = await this.getAccounts();\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const chain = config.chains.find((chain)=>chain.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(new _wagmi_core__WEBPACK_IMPORTED_MODULE_3__.ChainNotConfiguredError());\n                const provider = await this.getProvider();\n                try {\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [\n                            {\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chain.id)\n                            }\n                        ]\n                    });\n                    return chain;\n                } catch (error) {\n                    // Indicates chain is not added to provider\n                    if (error.code === 4902) {\n                        try {\n                            let blockExplorerUrls;\n                            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                            else blockExplorerUrls = chain.blockExplorers?.default.url ? [\n                                chain.blockExplorers?.default.url\n                            ] : [];\n                            let rpcUrls;\n                            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                            else rpcUrls = [\n                                chain.rpcUrls.default?.http[0] ?? \"\"\n                            ];\n                            const addEthereumChain = {\n                                blockExplorerUrls,\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chainId),\n                                chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                                iconUrls: addEthereumChainParameter?.iconUrls,\n                                nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                                rpcUrls\n                            };\n                            await provider.request({\n                                method: \"wallet_addEthereumChain\",\n                                params: [\n                                    addEthereumChain\n                                ]\n                            });\n                            return chain;\n                        } catch (error) {\n                            throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                        }\n                    }\n                    throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(error);\n                }\n            },\n            onAccountsChanged (accounts) {\n                if (accounts.length === 0) this.onDisconnect();\n                else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onDisconnect (_error) {\n                config.emitter.emit(\"disconnect\");\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n            }\n        }));\n}\nfunction version3(parameters) {\n    const reloadOnDisconnect = false;\n    let sdk;\n    let walletProvider;\n    let accountsChanged;\n    let chainChanged;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"coinbaseWalletSDK\",\n            name: \"Coinbase Wallet\",\n            rdns: \"com.coinbase.wallet\",\n            type: coinbaseWallet.type,\n            async connect ({ chainId } = {}) {\n                try {\n                    const provider = await this.getProvider();\n                    const accounts = (await provider.request({\n                        method: \"eth_requestAccounts\"\n                    })).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    // Switch to chain if provided\n                    let currentChainId = await this.getChainId();\n                    if (chainId && currentChainId !== chainId) {\n                        const chain = await this.switchChain({\n                            chainId\n                        }).catch((error)=>{\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code) throw error;\n                            return {\n                                id: currentChainId\n                            };\n                        });\n                        currentChainId = chain?.id ?? currentChainId;\n                    }\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (error) {\n                    if (/(user closed modal|accounts received is empty|user denied account)/i.test(error.message)) throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                provider.disconnect();\n                provider.close();\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                return (await provider.request({\n                    method: \"eth_accounts\"\n                })).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                const chainId = await provider.request({\n                    method: \"eth_chainId\"\n                });\n                return Number(chainId);\n            },\n            async getProvider () {\n                if (!walletProvider) {\n                    // Unwrapping import for Vite compatibility.\n                    // See: https://github.com/vitejs/vite/issues/9703\n                    const CoinbaseWalletSDK = await (async ()=>{\n                        const { default: SDK } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@metamask\"), __webpack_require__.e(\"vendor-chunks/preact\"), __webpack_require__.e(\"vendor-chunks/debug\"), __webpack_require__.e(\"vendor-chunks/ms\"), __webpack_require__.e(\"vendor-chunks/supports-color\"), __webpack_require__.e(\"vendor-chunks/has-flag\"), __webpack_require__.e(\"vendor-chunks/cbw-sdk\"), __webpack_require__.e(\"vendor-chunks/semver\"), __webpack_require__.e(\"vendor-chunks/eth-block-tracker\"), __webpack_require__.e(\"vendor-chunks/readable-stream\"), __webpack_require__.e(\"vendor-chunks/eth-json-rpc-filters\"), __webpack_require__.e(\"vendor-chunks/sha.js\"), __webpack_require__.e(\"vendor-chunks/math-intrinsics\"), __webpack_require__.e(\"vendor-chunks/json-rpc-engine\"), __webpack_require__.e(\"vendor-chunks/es-errors\"), __webpack_require__.e(\"vendor-chunks/keccak\"), __webpack_require__.e(\"vendor-chunks/call-bind-apply-helpers\"), __webpack_require__.e(\"vendor-chunks/eth-rpc-errors\"), __webpack_require__.e(\"vendor-chunks/async-mutex\"), __webpack_require__.e(\"vendor-chunks/get-proto\"), __webpack_require__.e(\"vendor-chunks/inherits\"), __webpack_require__.e(\"vendor-chunks/has-symbols\"), __webpack_require__.e(\"vendor-chunks/gopd\"), __webpack_require__.e(\"vendor-chunks/function-bind\"), __webpack_require__.e(\"vendor-chunks/superstruct\"), __webpack_require__.e(\"vendor-chunks/available-typed-arrays\"), __webpack_require__.e(\"vendor-chunks/xtend\"), __webpack_require__.e(\"vendor-chunks/which-typed-array\"), __webpack_require__.e(\"vendor-chunks/util-deprecate\"), __webpack_require__.e(\"vendor-chunks/typed-array-buffer\"), __webpack_require__.e(\"vendor-chunks/to-buffer\"), __webpack_require__.e(\"vendor-chunks/string_decoder\"), __webpack_require__.e(\"vendor-chunks/set-function-length\"), __webpack_require__.e(\"vendor-chunks/safe-buffer\"), __webpack_require__.e(\"vendor-chunks/possible-typed-array-names\"), __webpack_require__.e(\"vendor-chunks/json-rpc-random-id\"), __webpack_require__.e(\"vendor-chunks/isarray\"), __webpack_require__.e(\"vendor-chunks/is-typed-array\"), __webpack_require__.e(\"vendor-chunks/is-callable\"), __webpack_require__.e(\"vendor-chunks/hasown\"), __webpack_require__.e(\"vendor-chunks/has-tostringtag\"), __webpack_require__.e(\"vendor-chunks/has-property-descriptors\"), __webpack_require__.e(\"vendor-chunks/get-intrinsic\"), __webpack_require__.e(\"vendor-chunks/for-each\"), __webpack_require__.e(\"vendor-chunks/fast-safe-stringify\"), __webpack_require__.e(\"vendor-chunks/eth-query\"), __webpack_require__.e(\"vendor-chunks/es-object-atoms\"), __webpack_require__.e(\"vendor-chunks/es-define-property\"), __webpack_require__.e(\"vendor-chunks/dunder-proto\"), __webpack_require__.e(\"vendor-chunks/define-data-property\"), __webpack_require__.e(\"vendor-chunks/call-bound\"), __webpack_require__.e(\"vendor-chunks/call-bind\"), __webpack_require__.e(\"vendor-chunks/bn.js\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! cbw-sdk */ \"(ssr)/./node_modules/cbw-sdk/dist/index.js\", 19));\n                        if (typeof SDK !== \"function\" && typeof SDK.default === \"function\") return SDK.default;\n                        return SDK;\n                    })();\n                    sdk = new CoinbaseWalletSDK({\n                        ...parameters,\n                        reloadOnDisconnect\n                    });\n                    // Force types to retrieve private `walletExtension` method from the Coinbase Wallet SDK.\n                    const walletExtensionChainId = sdk.walletExtension?.getChainId();\n                    const chain = config.chains.find((chain)=>parameters.chainId ? chain.id === parameters.chainId : chain.id === walletExtensionChainId) || config.chains[0];\n                    const chainId = parameters.chainId || chain?.id;\n                    const jsonRpcUrl = parameters.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n                    walletProvider = sdk.makeWeb3Provider(jsonRpcUrl, chainId);\n                }\n                return walletProvider;\n            },\n            async isAuthorized () {\n                try {\n                    const accounts = await this.getAccounts();\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const chain = config.chains.find((chain)=>chain.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(new _wagmi_core__WEBPACK_IMPORTED_MODULE_3__.ChainNotConfiguredError());\n                const provider = await this.getProvider();\n                try {\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [\n                            {\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chain.id)\n                            }\n                        ]\n                    });\n                    return chain;\n                } catch (error) {\n                    // Indicates chain is not added to provider\n                    if (error.code === 4902) {\n                        try {\n                            let blockExplorerUrls;\n                            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                            else blockExplorerUrls = chain.blockExplorers?.default.url ? [\n                                chain.blockExplorers?.default.url\n                            ] : [];\n                            let rpcUrls;\n                            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                            else rpcUrls = [\n                                chain.rpcUrls.default?.http[0] ?? \"\"\n                            ];\n                            const addEthereumChain = {\n                                blockExplorerUrls,\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chainId),\n                                chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                                iconUrls: addEthereumChainParameter?.iconUrls,\n                                nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                                rpcUrls\n                            };\n                            await provider.request({\n                                method: \"wallet_addEthereumChain\",\n                                params: [\n                                    addEthereumChain\n                                ]\n                            });\n                            return chain;\n                        } catch (error) {\n                            throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                        }\n                    }\n                    throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(error);\n                }\n            },\n            onAccountsChanged (accounts) {\n                if (accounts.length === 0) this.onDisconnect();\n                else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onDisconnect (_error) {\n                config.emitter.emit(\"disconnect\");\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n            }\n        }));\n} //# sourceMappingURL=coinbaseWallet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/esm/coinbaseWallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/esm/metaMask.js":
/*!*************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/esm/metaMask.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   metaMask: () => (/* binding */ metaMask)\n/* harmony export */ });\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/extractRpcUrls.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withRetry.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withTimeout.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromHex.js\");\n\n\nmetaMask.type = \"metaMask\";\nfunction metaMask(parameters = {}) {\n    let sdk;\n    let provider;\n    let providerPromise;\n    let accountsChanged;\n    let chainChanged;\n    let connect;\n    let displayUri;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"metaMaskSDK\",\n            name: \"MetaMask\",\n            rdns: [\n                \"io.metamask\",\n                \"io.metamask.mobile\"\n            ],\n            type: metaMask.type,\n            async setup () {\n                const provider = await this.getProvider();\n                if (provider?.on) {\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider.on(\"connect\", connect);\n                    }\n                    // We shouldn't need to listen for `'accountsChanged'` here since the `'connect'` event should suffice (and wallet shouldn't be connected yet).\n                    // Some wallets, like MetaMask, do not implement the `'connect'` event and overload `'accountsChanged'` instead.\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                }\n            },\n            async connect ({ chainId, isReconnecting } = {}) {\n                const provider = await this.getProvider();\n                if (!displayUri) {\n                    displayUri = this.onDisplayUri;\n                    provider.on(\"display_uri\", displayUri);\n                }\n                let accounts = [];\n                if (isReconnecting) accounts = await this.getAccounts().catch(()=>[]);\n                try {\n                    let signResponse;\n                    let connectWithResponse;\n                    if (!accounts?.length) {\n                        if (parameters.connectAndSign || parameters.connectWith) {\n                            if (parameters.connectAndSign) signResponse = await sdk.connectAndSign({\n                                msg: parameters.connectAndSign\n                            });\n                            else if (parameters.connectWith) connectWithResponse = await sdk.connectWith({\n                                method: parameters.connectWith.method,\n                                params: parameters.connectWith.params\n                            });\n                            accounts = await this.getAccounts();\n                        } else {\n                            const requestedAccounts = await sdk.connect();\n                            accounts = requestedAccounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n                        }\n                    }\n                    // Switch to chain if provided\n                    let currentChainId = await this.getChainId();\n                    if (chainId && currentChainId !== chainId) {\n                        const chain = await this.switchChain({\n                            chainId\n                        }).catch((error)=>{\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code) throw error;\n                            return {\n                                id: currentChainId\n                            };\n                        });\n                        currentChainId = chain?.id ?? currentChainId;\n                    }\n                    if (displayUri) {\n                        provider.removeListener(\"display_uri\", displayUri);\n                        displayUri = undefined;\n                    }\n                    if (signResponse) provider.emit(\"connectAndSign\", {\n                        accounts,\n                        chainId: currentChainId,\n                        signResponse\n                    });\n                    else if (connectWithResponse) provider.emit(\"connectWith\", {\n                        accounts,\n                        chainId: currentChainId,\n                        connectWithResponse\n                    });\n                    // Manage EIP-1193 event listeners\n                    // https://eips.ethereum.org/EIPS/eip-1193#events\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (err) {\n                    const error = err;\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.ResourceUnavailableRpcError.code) throw new viem__WEBPACK_IMPORTED_MODULE_2__.ResourceUnavailableRpcError(error);\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                // Manage EIP-1193 event listeners\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n                await sdk.terminate();\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                const accounts = await provider.request({\n                    method: \"eth_accounts\"\n                });\n                return accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                const chainId = provider.getChainId() || await provider?.request({\n                    method: \"eth_chainId\"\n                });\n                return Number(chainId);\n            },\n            async getProvider () {\n                async function initProvider() {\n                    // Unwrapping import for Vite compatibility.\n                    // See: https://github.com/vitejs/vite/issues/9703\n                    const MetaMaskSDK = await (async ()=>{\n                        const { default: SDK } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/node-gyp-build\"), __webpack_require__.e(\"vendor-chunks/utf-8-validate\"), __webpack_require__.e(\"vendor-chunks/bufferutil\"), __webpack_require__.e(\"vendor-chunks/@metamask\"), __webpack_require__.e(\"vendor-chunks/tr46\"), __webpack_require__.e(\"vendor-chunks/ws\"), __webpack_require__.e(\"vendor-chunks/node-fetch\"), __webpack_require__.e(\"vendor-chunks/whatwg-url\"), __webpack_require__.e(\"vendor-chunks/debug\"), __webpack_require__.e(\"vendor-chunks/webidl-conversions\"), __webpack_require__.e(\"vendor-chunks/ms\"), __webpack_require__.e(\"vendor-chunks/supports-color\"), __webpack_require__.e(\"vendor-chunks/has-flag\"), __webpack_require__.e(\"vendor-chunks/engine.io-client\"), __webpack_require__.e(\"vendor-chunks/socket.io-client\"), __webpack_require__.e(\"vendor-chunks/socket.io-parser\"), __webpack_require__.e(\"vendor-chunks/uuid\"), __webpack_require__.e(\"vendor-chunks/engine.io-parser\"), __webpack_require__.e(\"vendor-chunks/@socket.io\"), __webpack_require__.e(\"vendor-chunks/xmlhttprequest-ssl\"), __webpack_require__.e(\"vendor-chunks/eventemitter2\"), __webpack_require__.e(\"vendor-chunks/cross-fetch\")]).then(__webpack_require__.bind(__webpack_require__, /*! @metamask/sdk */ \"(ssr)/./node_modules/@metamask/sdk/dist/browser/es/metamask-sdk.js\"));\n                        if (typeof SDK !== \"function\" && typeof SDK.default === \"function\") return SDK.default;\n                        return SDK;\n                    })();\n                    const readonlyRPCMap = {};\n                    for (const chain of config.chains)readonlyRPCMap[(0,viem__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(chain.id)] = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_4__.extractRpcUrls)({\n                        chain,\n                        transports: config.transports\n                    })?.[0];\n                    sdk = new MetaMaskSDK({\n                        _source: \"wagmi\",\n                        forceDeleteProvider: false,\n                        forceInjectProvider: false,\n                        injectProvider: false,\n                        // Workaround cast since MetaMask SDK does not support `'exactOptionalPropertyTypes'`\n                        ...parameters,\n                        readonlyRPCMap,\n                        dappMetadata: {\n                            ...parameters.dappMetadata,\n                            // Test if name and url are set AND not empty\n                            name: parameters.dappMetadata?.name ? parameters.dappMetadata?.name : \"wagmi\",\n                            url: parameters.dappMetadata?.url ? parameters.dappMetadata?.url :  false ? 0 : \"https://wagmi.sh\"\n                        },\n                        useDeeplink: parameters.useDeeplink ?? true\n                    });\n                    const result = await sdk.init();\n                    // On initial load, sometimes `sdk.getProvider` does not return provider.\n                    // https://github.com/wevm/wagmi/issues/4367\n                    // Use result of `init` call if available.\n                    const provider = (()=>{\n                        if (result?.activeProvider) return result.activeProvider;\n                        return sdk.getProvider();\n                    })();\n                    if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_5__.ProviderNotFoundError();\n                    return provider;\n                }\n                if (!provider) {\n                    if (!providerPromise) providerPromise = initProvider();\n                    provider = await providerPromise;\n                }\n                return provider;\n            },\n            async isAuthorized () {\n                try {\n                    // MetaMask mobile provider sometimes fails to immediately resolve\n                    // JSON-RPC requests on page load\n                    const timeout = 200;\n                    const accounts = await (0,viem__WEBPACK_IMPORTED_MODULE_6__.withRetry)(()=>(0,viem__WEBPACK_IMPORTED_MODULE_7__.withTimeout)(()=>this.getAccounts(), {\n                            timeout\n                        }), {\n                        delay: timeout + 1,\n                        retryCount: 3\n                    });\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const provider = await this.getProvider();\n                const chain = config.chains.find((x)=>x.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(new _wagmi_core__WEBPACK_IMPORTED_MODULE_8__.ChainNotConfiguredError());\n                try {\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [\n                            {\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(chainId)\n                            }\n                        ]\n                    });\n                    // During `'wallet_switchEthereumChain'`, MetaMask makes a `'net_version'` RPC call to the target chain.\n                    // If this request fails, MetaMask does not emit the `'chainChanged'` event, but will still switch the chain.\n                    // To counter this behavior, we request and emit the current chain ID to confirm the chain switch either via\n                    // this callback or an externally emitted `'chainChanged'` event.\n                    // https://github.com/MetaMask/metamask-extension/issues/24247\n                    await waitForChainIdToSync();\n                    await sendAndWaitForChangeEvent(chainId);\n                    return chain;\n                } catch (err) {\n                    const error = err;\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                    // Indicates chain is not added to provider\n                    if (error.code === 4902 || // Unwrapping for MetaMask Mobile\n                    // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n                    error?.data?.originalError?.code === 4902) {\n                        try {\n                            await provider.request({\n                                method: \"wallet_addEthereumChain\",\n                                params: [\n                                    {\n                                        blockExplorerUrls: (()=>{\n                                            const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};\n                                            if (addEthereumChainParameter?.blockExplorerUrls) return addEthereumChainParameter.blockExplorerUrls;\n                                            if (blockExplorer) return [\n                                                blockExplorer.url,\n                                                ...Object.values(blockExplorers).map((x)=>x.url)\n                                            ];\n                                            return;\n                                        })(),\n                                        chainId: (0,viem__WEBPACK_IMPORTED_MODULE_3__.numberToHex)(chainId),\n                                        chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                                        iconUrls: addEthereumChainParameter?.iconUrls,\n                                        nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                                        rpcUrls: (()=>{\n                                            if (addEthereumChainParameter?.rpcUrls?.length) return addEthereumChainParameter.rpcUrls;\n                                            return [\n                                                chain.rpcUrls.default?.http[0] ?? \"\"\n                                            ];\n                                        })()\n                                    }\n                                ]\n                            });\n                            await waitForChainIdToSync();\n                            await sendAndWaitForChangeEvent(chainId);\n                            return chain;\n                        } catch (err) {\n                            const error = err;\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                            throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(error);\n                        }\n                    }\n                    throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(error);\n                }\n                async function waitForChainIdToSync() {\n                    // On mobile, there is a race condition between the result of `'wallet_addEthereumChain'` and `'eth_chainId'`.\n                    // To avoid this, we wait for `'eth_chainId'` to return the expected chain ID with a retry loop.\n                    await (0,viem__WEBPACK_IMPORTED_MODULE_6__.withRetry)(async ()=>{\n                        const value = (0,viem__WEBPACK_IMPORTED_MODULE_9__.hexToNumber)(// `'eth_chainId'` is cached by the MetaMask SDK side to avoid unnecessary deeplinks\n                        await provider.request({\n                            method: \"eth_chainId\"\n                        }));\n                        // `value` doesn't match expected `chainId`, throw to trigger retry\n                        if (value !== chainId) throw new Error(\"User rejected switch after adding network.\");\n                        return value;\n                    }, {\n                        delay: 50,\n                        retryCount: 20\n                    });\n                }\n                async function sendAndWaitForChangeEvent(chainId) {\n                    await new Promise((resolve)=>{\n                        const listener = (data)=>{\n                            if (\"chainId\" in data && data.chainId === chainId) {\n                                config.emitter.off(\"change\", listener);\n                                resolve();\n                            }\n                        };\n                        config.emitter.on(\"change\", listener);\n                        config.emitter.emit(\"change\", {\n                            chainId\n                        });\n                    });\n                }\n            },\n            async onAccountsChanged (accounts) {\n                // Disconnect if there are no accounts\n                if (accounts.length === 0) {\n                    // ... and using browser extension\n                    if (sdk.isExtensionActive()) this.onDisconnect();\n                    else return;\n                } else if (config.emitter.listenerCount(\"connect\")) {\n                    const chainId = (await this.getChainId()).toString();\n                    this.onConnect({\n                        chainId\n                    });\n                } else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onConnect (connectInfo) {\n                const accounts = await this.getAccounts();\n                if (accounts.length === 0) return;\n                const chainId = Number(connectInfo.chainId);\n                config.emitter.emit(\"connect\", {\n                    accounts,\n                    chainId\n                });\n                const provider = await this.getProvider();\n                if (connect) {\n                    provider.removeListener(\"connect\", connect);\n                    connect = undefined;\n                }\n                if (!accountsChanged) {\n                    accountsChanged = this.onAccountsChanged.bind(this);\n                    provider.on(\"accountsChanged\", accountsChanged);\n                }\n                if (!chainChanged) {\n                    chainChanged = this.onChainChanged.bind(this);\n                    provider.on(\"chainChanged\", chainChanged);\n                }\n                if (!disconnect) {\n                    disconnect = this.onDisconnect.bind(this);\n                    provider.on(\"disconnect\", disconnect);\n                }\n            },\n            async onDisconnect (error) {\n                const provider = await this.getProvider();\n                // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n                // https://github.com/MetaMask/providers/pull/120\n                if (error && error.code === 1013) {\n                    if (provider && !!(await this.getAccounts()).length) return;\n                }\n                config.emitter.emit(\"disconnect\");\n                // Manage EIP-1193 event listeners\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n            },\n            onDisplayUri (uri) {\n                config.emitter.emit(\"message\", {\n                    type: \"display_uri\",\n                    data: uri\n                });\n            }\n        }));\n} //# sourceMappingURL=metaMask.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/esm/metaMask.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/esm/safe.js":
/*!*********************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/esm/safe.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safe: () => (/* binding */ safe)\n/* harmony export */ });\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withTimeout.js\");\n\n\nsafe.type = \"safe\";\nfunction safe(parameters = {}) {\n    const { shimDisconnect = false } = parameters;\n    let provider_;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"safe\",\n            name: \"Safe\",\n            type: safe.type,\n            async connect () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const accounts = await this.getAccounts();\n                const chainId = await this.getChainId();\n                if (!disconnect) {\n                    disconnect = this.onDisconnect.bind(this);\n                    provider.on(\"disconnect\", disconnect);\n                }\n                // Remove disconnected shim if it exists\n                if (shimDisconnect) await config.storage?.removeItem(\"safe.disconnected\");\n                return {\n                    accounts,\n                    chainId\n                };\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                // Add shim signalling connector is disconnected\n                if (shimDisconnect) await config.storage?.setItem(\"safe.disconnected\", true);\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                return (await provider.request({\n                    method: \"eth_accounts\"\n                })).map(viem__WEBPACK_IMPORTED_MODULE_2__.getAddress);\n            },\n            async getProvider () {\n                // Only allowed in iframe context\n                const isIframe =  false && 0;\n                if (!isIframe) return;\n                if (!provider_) {\n                    const { default: SDK } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/@safe-global\").then(__webpack_require__.bind(__webpack_require__, /*! @safe-global/safe-apps-sdk */ \"(ssr)/./node_modules/@safe-global/safe-apps-sdk/dist/esm/index.js\"));\n                    const sdk = new SDK(parameters);\n                    // `getInfo` hangs when not used in Safe App iFrame\n                    // https://github.com/safe-global/safe-apps-sdk/issues/263#issuecomment-1029835840\n                    const safe = await (0,viem__WEBPACK_IMPORTED_MODULE_3__.withTimeout)(()=>sdk.safe.getInfo(), {\n                        timeout: parameters.unstable_getInfoTimeout ?? 10\n                    });\n                    if (!safe) throw new Error(\"Could not load Safe information\");\n                    // Unwrapping import for Vite compatibility.\n                    // See: https://github.com/vitejs/vite/issues/9703\n                    const SafeAppProvider = await (async ()=>{\n                        const Provider = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/viem\"), __webpack_require__.e(\"vendor-chunks/node-gyp-build\"), __webpack_require__.e(\"vendor-chunks/utf-8-validate\"), __webpack_require__.e(\"vendor-chunks/bufferutil\"), __webpack_require__.e(\"vendor-chunks/ox\"), __webpack_require__.e(\"vendor-chunks/ws\"), __webpack_require__.e(\"vendor-chunks/@safe-global\"), __webpack_require__.e(\"vendor-chunks/abitype\"), __webpack_require__.e(\"vendor-chunks/isows\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @safe-global/safe-apps-provider */ \"(ssr)/./node_modules/@safe-global/safe-apps-provider/dist/index.js\", 19));\n                        if (typeof Provider.SafeAppProvider !== \"function\" && typeof Provider.default.SafeAppProvider === \"function\") return Provider.default.SafeAppProvider;\n                        return Provider.SafeAppProvider;\n                    })();\n                    provider_ = new SafeAppProvider(safe, sdk);\n                }\n                return provider_;\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                return Number(provider.chainId);\n            },\n            async isAuthorized () {\n                try {\n                    const isDisconnected = shimDisconnect && // If shim exists in storage, connector is disconnected\n                    await config.storage?.getItem(\"safe.disconnected\");\n                    if (isDisconnected) return false;\n                    const accounts = await this.getAccounts();\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            onAccountsChanged () {\n            // Not relevant for Safe because changing account requires app reload.\n            },\n            onChainChanged () {\n            // Not relevant for Safe because Safe smart contract wallets only exist on single chain.\n            },\n            onDisconnect () {\n                config.emitter.emit(\"disconnect\");\n            }\n        }));\n} //# sourceMappingURL=safe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/esm/safe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/esm/walletConnect.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/esm/walletConnect.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   walletConnect: () => (/* binding */ walletConnect)\n/* harmony export */ });\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/extractRpcUrls.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\nwalletConnect.type = \"walletConnect\";\nfunction walletConnect(parameters) {\n    const isNewChainsStale = parameters.isNewChainsStale ?? true;\n    let provider_;\n    let providerPromise;\n    const NAMESPACE = \"eip155\";\n    let accountsChanged;\n    let chainChanged;\n    let connect;\n    let displayUri;\n    let sessionDelete;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"walletConnect\",\n            name: \"WalletConnect\",\n            type: walletConnect.type,\n            async setup () {\n                const provider = await this.getProvider().catch(()=>null);\n                if (!provider) return;\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n                if (!sessionDelete) {\n                    sessionDelete = this.onSessionDelete.bind(this);\n                    provider.on(\"session_delete\", sessionDelete);\n                }\n            },\n            async connect ({ chainId, ...rest } = {}) {\n                try {\n                    const provider = await this.getProvider();\n                    if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                    if (!displayUri) {\n                        displayUri = this.onDisplayUri;\n                        provider.on(\"display_uri\", displayUri);\n                    }\n                    let targetChainId = chainId;\n                    if (!targetChainId) {\n                        const state = await config.storage?.getItem(\"state\") ?? {};\n                        const isChainSupported = config.chains.some((x)=>x.id === state.chainId);\n                        if (isChainSupported) targetChainId = state.chainId;\n                        else targetChainId = config.chains[0]?.id;\n                    }\n                    if (!targetChainId) throw new Error(\"No chains found on connector.\");\n                    const isChainsStale = await this.isChainsStale();\n                    // If there is an active session with stale chains, disconnect current session.\n                    if (provider.session && isChainsStale) await provider.disconnect();\n                    // If there isn't an active session or chains are stale, connect.\n                    if (!provider.session || isChainsStale) {\n                        const optionalChains = config.chains.filter((chain)=>chain.id !== targetChainId).map((optionalChain)=>optionalChain.id);\n                        await provider.connect({\n                            optionalChains: [\n                                targetChainId,\n                                ...optionalChains\n                            ],\n                            ...\"pairingTopic\" in rest ? {\n                                pairingTopic: rest.pairingTopic\n                            } : {}\n                        });\n                        this.setRequestedChainsIds(config.chains.map((x)=>x.id));\n                    }\n                    // If session exists and chains are authorized, enable provider for required chain\n                    const accounts = (await provider.enable()).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n                    const currentChainId = await this.getChainId();\n                    if (displayUri) {\n                        provider.removeListener(\"display_uri\", displayUri);\n                        displayUri = undefined;\n                    }\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    if (!sessionDelete) {\n                        sessionDelete = this.onSessionDelete.bind(this);\n                        provider.on(\"session_delete\", sessionDelete);\n                    }\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (error) {\n                    if (/(user rejected|connection request reset)/i.test(error?.message)) {\n                        throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    }\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                try {\n                    await provider?.disconnect();\n                } catch (error) {\n                    if (!/No matching key/i.test(error.message)) throw error;\n                } finally{\n                    if (chainChanged) {\n                        provider?.removeListener(\"chainChanged\", chainChanged);\n                        chainChanged = undefined;\n                    }\n                    if (disconnect) {\n                        provider?.removeListener(\"disconnect\", disconnect);\n                        disconnect = undefined;\n                    }\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider?.on(\"connect\", connect);\n                    }\n                    if (accountsChanged) {\n                        provider?.removeListener(\"accountsChanged\", accountsChanged);\n                        accountsChanged = undefined;\n                    }\n                    if (sessionDelete) {\n                        provider?.removeListener(\"session_delete\", sessionDelete);\n                        sessionDelete = undefined;\n                    }\n                    this.setRequestedChainsIds([]);\n                }\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                return provider.accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n            },\n            async getProvider ({ chainId } = {}) {\n                async function initProvider() {\n                    const optionalChains = config.chains.map((x)=>x.id);\n                    if (!optionalChains.length) return;\n                    const { EthereumProvider } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/node-gyp-build\"), __webpack_require__.e(\"vendor-chunks/utf-8-validate\"), __webpack_require__.e(\"vendor-chunks/bufferutil\"), __webpack_require__.e(\"vendor-chunks/@walletconnect\"), __webpack_require__.e(\"vendor-chunks/tr46\"), __webpack_require__.e(\"vendor-chunks/node-fetch\"), __webpack_require__.e(\"vendor-chunks/whatwg-url\"), __webpack_require__.e(\"vendor-chunks/idb-keyval\"), __webpack_require__.e(\"vendor-chunks/webidl-conversions\"), __webpack_require__.e(\"vendor-chunks/multiformats\"), __webpack_require__.e(\"vendor-chunks/pino\"), __webpack_require__.e(\"vendor-chunks/uint8arrays\"), __webpack_require__.e(\"vendor-chunks/fast-redact\"), __webpack_require__.e(\"vendor-chunks/pino-std-serializers\"), __webpack_require__.e(\"vendor-chunks/thread-stream\"), __webpack_require__.e(\"vendor-chunks/destr\"), __webpack_require__.e(\"vendor-chunks/bs58\"), __webpack_require__.e(\"vendor-chunks/base-x\"), __webpack_require__.e(\"vendor-chunks/sonic-boom\"), __webpack_require__.e(\"vendor-chunks/safe-stable-stringify\"), __webpack_require__.e(\"vendor-chunks/quick-format-unescaped\"), __webpack_require__.e(\"vendor-chunks/process-warning\"), __webpack_require__.e(\"vendor-chunks/on-exit-leak-free\"), __webpack_require__.e(\"vendor-chunks/detect-browser\"), __webpack_require__.e(\"vendor-chunks/atomic-sleep\")]).then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/ethereum-provider */ \"(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js\"));\n                    return await EthereumProvider.init({\n                        ...parameters,\n                        disableProviderPing: true,\n                        optionalChains,\n                        projectId: parameters.projectId,\n                        rpcMap: Object.fromEntries(config.chains.map((chain)=>{\n                            const [url] = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_4__.extractRpcUrls)({\n                                chain,\n                                transports: config.transports\n                            });\n                            return [\n                                chain.id,\n                                url\n                            ];\n                        })),\n                        showQrModal: parameters.showQrModal ?? true\n                    });\n                }\n                if (!provider_) {\n                    if (!providerPromise) providerPromise = initProvider();\n                    provider_ = await providerPromise;\n                    provider_?.events.setMaxListeners(Number.POSITIVE_INFINITY);\n                }\n                if (chainId) await this.switchChain?.({\n                    chainId\n                });\n                return provider_;\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                return provider.chainId;\n            },\n            async isAuthorized () {\n                try {\n                    const [accounts, provider] = await Promise.all([\n                        this.getAccounts(),\n                        this.getProvider()\n                    ]);\n                    // If an account does not exist on the session, then the connector is unauthorized.\n                    if (!accounts.length) return false;\n                    // If the chains are stale on the session, then the connector is unauthorized.\n                    const isChainsStale = await this.isChainsStale();\n                    if (isChainsStale && provider.session) {\n                        await provider.disconnect().catch(()=>{});\n                        return false;\n                    }\n                    return true;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const chain = config.chains.find((x)=>x.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(new _wagmi_core__WEBPACK_IMPORTED_MODULE_5__.ChainNotConfiguredError());\n                try {\n                    await Promise.all([\n                        new Promise((resolve)=>{\n                            const listener = ({ chainId: currentChainId })=>{\n                                if (currentChainId === chainId) {\n                                    config.emitter.off(\"change\", listener);\n                                    resolve();\n                                }\n                            };\n                            config.emitter.on(\"change\", listener);\n                        }),\n                        provider.request({\n                            method: \"wallet_switchEthereumChain\",\n                            params: [\n                                {\n                                    chainId: (0,viem__WEBPACK_IMPORTED_MODULE_6__.numberToHex)(chainId)\n                                }\n                            ]\n                        })\n                    ]);\n                    const requestedChains = await this.getRequestedChainsIds();\n                    this.setRequestedChainsIds([\n                        ...requestedChains,\n                        chainId\n                    ]);\n                    return chain;\n                } catch (err) {\n                    const error = err;\n                    if (/(user rejected)/i.test(error.message)) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    // Indicates chain is not added to provider\n                    try {\n                        let blockExplorerUrls;\n                        if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                        else blockExplorerUrls = chain.blockExplorers?.default.url ? [\n                            chain.blockExplorers?.default.url\n                        ] : [];\n                        let rpcUrls;\n                        if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                        else rpcUrls = [\n                            ...chain.rpcUrls.default.http\n                        ];\n                        const addEthereumChain = {\n                            blockExplorerUrls,\n                            chainId: (0,viem__WEBPACK_IMPORTED_MODULE_6__.numberToHex)(chainId),\n                            chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                            iconUrls: addEthereumChainParameter?.iconUrls,\n                            nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                            rpcUrls\n                        };\n                        await provider.request({\n                            method: \"wallet_addEthereumChain\",\n                            params: [\n                                addEthereumChain\n                            ]\n                        });\n                        const requestedChains = await this.getRequestedChainsIds();\n                        this.setRequestedChainsIds([\n                            ...requestedChains,\n                            chainId\n                        ]);\n                        return chain;\n                    } catch (error) {\n                        throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    }\n                }\n            },\n            onAccountsChanged (accounts) {\n                if (accounts.length === 0) this.onDisconnect();\n                else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onConnect (connectInfo) {\n                const chainId = Number(connectInfo.chainId);\n                const accounts = await this.getAccounts();\n                config.emitter.emit(\"connect\", {\n                    accounts,\n                    chainId\n                });\n            },\n            async onDisconnect (_error) {\n                this.setRequestedChainsIds([]);\n                config.emitter.emit(\"disconnect\");\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                if (sessionDelete) {\n                    provider.removeListener(\"session_delete\", sessionDelete);\n                    sessionDelete = undefined;\n                }\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n            },\n            onDisplayUri (uri) {\n                config.emitter.emit(\"message\", {\n                    type: \"display_uri\",\n                    data: uri\n                });\n            },\n            onSessionDelete () {\n                this.onDisconnect();\n            },\n            getNamespaceChainsIds () {\n                if (!provider_) return [];\n                const chainIds = provider_.session?.namespaces[NAMESPACE]?.accounts?.map((account)=>Number.parseInt(account.split(\":\")[1] || \"\"));\n                return chainIds ?? [];\n            },\n            async getRequestedChainsIds () {\n                return await config.storage?.getItem(this.requestedChainsStorageKey) ?? [];\n            },\n            /**\n         * Checks if the target chains match the chains that were\n         * initially requested by the connector for the WalletConnect session.\n         * If there is a mismatch, this means that the chains on the connector\n         * are considered stale, and need to be revalidated at a later point (via\n         * connection).\n         *\n         * There may be a scenario where a dapp adds a chain to the\n         * connector later on, however, this chain will not have been approved or rejected\n         * by the wallet. In this case, the chain is considered stale.\n         */ async isChainsStale () {\n                if (!isNewChainsStale) return false;\n                const connectorChains = config.chains.map((x)=>x.id);\n                const namespaceChains = this.getNamespaceChainsIds();\n                if (namespaceChains.length && !namespaceChains.some((id)=>connectorChains.includes(id))) return false;\n                const requestedChains = await this.getRequestedChainsIds();\n                return !connectorChains.every((id)=>requestedChains.includes(id));\n            },\n            async setRequestedChainsIds (chains) {\n                await config.storage?.setItem(this.requestedChainsStorageKey, chains);\n            },\n            get requestedChainsStorageKey () {\n                return `${this.id}.requestedChains`;\n            }\n        }));\n} //# sourceMappingURL=walletConnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/esm/walletConnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/connect.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/connect.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connect: () => (/* binding */ connect)\n/* harmony export */ });\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n\n/** https://wagmi.sh/core/api/actions/connect */ async function connect(config, parameters) {\n    // \"Register\" connector if not already created\n    let connector;\n    if (typeof parameters.connector === \"function\") {\n        connector = config._internal.connectors.setup(parameters.connector);\n    } else connector = parameters.connector;\n    // Check if connector is already connected\n    if (connector.uid === config.state.current) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorAlreadyConnectedError();\n    try {\n        config.setState((x)=>({\n                ...x,\n                status: \"connecting\"\n            }));\n        connector.emitter.emit(\"message\", {\n            type: \"connecting\"\n        });\n        const { connector: _, ...rest } = parameters;\n        const data = await connector.connect(rest);\n        const accounts = data.accounts;\n        connector.emitter.off(\"connect\", config._internal.events.connect);\n        connector.emitter.on(\"change\", config._internal.events.change);\n        connector.emitter.on(\"disconnect\", config._internal.events.disconnect);\n        await config.storage?.setItem(\"recentConnectorId\", connector.id);\n        config.setState((x)=>({\n                ...x,\n                connections: new Map(x.connections).set(connector.uid, {\n                    accounts,\n                    chainId: data.chainId,\n                    connector: connector\n                }),\n                current: connector.uid,\n                status: \"connected\"\n            }));\n        return {\n            accounts,\n            chainId: data.chainId\n        };\n    } catch (error) {\n        config.setState((x)=>({\n                ...x,\n                // Keep existing connector connected in case of error\n                status: x.current ? \"connected\" : \"disconnected\"\n            }));\n        throw error;\n    }\n} //# sourceMappingURL=connect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9jb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNFO0FBQ3RFLDhDQUE4QyxHQUN2QyxlQUFlQyxRQUFRQyxNQUFNLEVBQUVDLFVBQVU7SUFDNUMsOENBQThDO0lBQzlDLElBQUlDO0lBQ0osSUFBSSxPQUFPRCxXQUFXQyxTQUFTLEtBQUssWUFBWTtRQUM1Q0EsWUFBWUYsT0FBT0csU0FBUyxDQUFDQyxVQUFVLENBQUNDLEtBQUssQ0FBQ0osV0FBV0MsU0FBUztJQUN0RSxPQUVJQSxZQUFZRCxXQUFXQyxTQUFTO0lBQ3BDLDBDQUEwQztJQUMxQyxJQUFJQSxVQUFVSSxHQUFHLEtBQUtOLE9BQU9PLEtBQUssQ0FBQ0MsT0FBTyxFQUN0QyxNQUFNLElBQUlWLDZFQUE4QkE7SUFDNUMsSUFBSTtRQUNBRSxPQUFPUyxRQUFRLENBQUMsQ0FBQ0MsSUFBTztnQkFBRSxHQUFHQSxDQUFDO2dCQUFFQyxRQUFRO1lBQWE7UUFDckRULFVBQVVVLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLFdBQVc7WUFBRUMsTUFBTTtRQUFhO1FBQ3ZELE1BQU0sRUFBRVosV0FBV2EsQ0FBQyxFQUFFLEdBQUdDLE1BQU0sR0FBR2Y7UUFDbEMsTUFBTWdCLE9BQU8sTUFBTWYsVUFBVUgsT0FBTyxDQUFDaUI7UUFDckMsTUFBTUUsV0FBV0QsS0FBS0MsUUFBUTtRQUM5QmhCLFVBQVVVLE9BQU8sQ0FBQ08sR0FBRyxDQUFDLFdBQVduQixPQUFPRyxTQUFTLENBQUNpQixNQUFNLENBQUNyQixPQUFPO1FBQ2hFRyxVQUFVVSxPQUFPLENBQUNTLEVBQUUsQ0FBQyxVQUFVckIsT0FBT0csU0FBUyxDQUFDaUIsTUFBTSxDQUFDRSxNQUFNO1FBQzdEcEIsVUFBVVUsT0FBTyxDQUFDUyxFQUFFLENBQUMsY0FBY3JCLE9BQU9HLFNBQVMsQ0FBQ2lCLE1BQU0sQ0FBQ0csVUFBVTtRQUNyRSxNQUFNdkIsT0FBT3dCLE9BQU8sRUFBRUMsUUFBUSxxQkFBcUJ2QixVQUFVd0IsRUFBRTtRQUMvRDFCLE9BQU9TLFFBQVEsQ0FBQyxDQUFDQyxJQUFPO2dCQUNwQixHQUFHQSxDQUFDO2dCQUNKaUIsYUFBYSxJQUFJQyxJQUFJbEIsRUFBRWlCLFdBQVcsRUFBRUUsR0FBRyxDQUFDM0IsVUFBVUksR0FBRyxFQUFFO29CQUNuRFk7b0JBQ0FZLFNBQVNiLEtBQUthLE9BQU87b0JBQ3JCNUIsV0FBV0E7Z0JBQ2Y7Z0JBQ0FNLFNBQVNOLFVBQVVJLEdBQUc7Z0JBQ3RCSyxRQUFRO1lBQ1o7UUFDQSxPQUFPO1lBQUVPO1lBQVVZLFNBQVNiLEtBQUthLE9BQU87UUFBQztJQUM3QyxFQUNBLE9BQU9DLE9BQU87UUFDVi9CLE9BQU9TLFFBQVEsQ0FBQyxDQUFDQyxJQUFPO2dCQUNwQixHQUFHQSxDQUFDO2dCQUNKLHFEQUFxRDtnQkFDckRDLFFBQVFELEVBQUVGLE9BQU8sR0FBRyxjQUFjO1lBQ3RDO1FBQ0EsTUFBTXVCO0lBQ1Y7QUFDSixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvY29ubmVjdC5qcz81NTNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbm5lY3RvckFscmVhZHlDb25uZWN0ZWRFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMvY29uZmlnLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvY29ubmVjdCAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbm5lY3QoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgLy8gXCJSZWdpc3RlclwiIGNvbm5lY3RvciBpZiBub3QgYWxyZWFkeSBjcmVhdGVkXG4gICAgbGV0IGNvbm5lY3RvcjtcbiAgICBpZiAodHlwZW9mIHBhcmFtZXRlcnMuY29ubmVjdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNvbm5lY3RvciA9IGNvbmZpZy5faW50ZXJuYWwuY29ubmVjdG9ycy5zZXR1cChwYXJhbWV0ZXJzLmNvbm5lY3Rvcik7XG4gICAgfVxuICAgIGVsc2VcbiAgICAgICAgY29ubmVjdG9yID0gcGFyYW1ldGVycy5jb25uZWN0b3I7XG4gICAgLy8gQ2hlY2sgaWYgY29ubmVjdG9yIGlzIGFscmVhZHkgY29ubmVjdGVkXG4gICAgaWYgKGNvbm5lY3Rvci51aWQgPT09IGNvbmZpZy5zdGF0ZS5jdXJyZW50KVxuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdG9yQWxyZWFkeUNvbm5lY3RlZEVycm9yKCk7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uZmlnLnNldFN0YXRlKCh4KSA9PiAoeyAuLi54LCBzdGF0dXM6ICdjb25uZWN0aW5nJyB9KSk7XG4gICAgICAgIGNvbm5lY3Rvci5lbWl0dGVyLmVtaXQoJ21lc3NhZ2UnLCB7IHR5cGU6ICdjb25uZWN0aW5nJyB9KTtcbiAgICAgICAgY29uc3QgeyBjb25uZWN0b3I6IF8sIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBjb25uZWN0b3IuY29ubmVjdChyZXN0KTtcbiAgICAgICAgY29uc3QgYWNjb3VudHMgPSBkYXRhLmFjY291bnRzO1xuICAgICAgICBjb25uZWN0b3IuZW1pdHRlci5vZmYoJ2Nvbm5lY3QnLCBjb25maWcuX2ludGVybmFsLmV2ZW50cy5jb25uZWN0KTtcbiAgICAgICAgY29ubmVjdG9yLmVtaXR0ZXIub24oJ2NoYW5nZScsIGNvbmZpZy5faW50ZXJuYWwuZXZlbnRzLmNoYW5nZSk7XG4gICAgICAgIGNvbm5lY3Rvci5lbWl0dGVyLm9uKCdkaXNjb25uZWN0JywgY29uZmlnLl9pbnRlcm5hbC5ldmVudHMuZGlzY29ubmVjdCk7XG4gICAgICAgIGF3YWl0IGNvbmZpZy5zdG9yYWdlPy5zZXRJdGVtKCdyZWNlbnRDb25uZWN0b3JJZCcsIGNvbm5lY3Rvci5pZCk7XG4gICAgICAgIGNvbmZpZy5zZXRTdGF0ZSgoeCkgPT4gKHtcbiAgICAgICAgICAgIC4uLngsXG4gICAgICAgICAgICBjb25uZWN0aW9uczogbmV3IE1hcCh4LmNvbm5lY3Rpb25zKS5zZXQoY29ubmVjdG9yLnVpZCwge1xuICAgICAgICAgICAgICAgIGFjY291bnRzLFxuICAgICAgICAgICAgICAgIGNoYWluSWQ6IGRhdGEuY2hhaW5JZCxcbiAgICAgICAgICAgICAgICBjb25uZWN0b3I6IGNvbm5lY3RvcixcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgY3VycmVudDogY29ubmVjdG9yLnVpZCxcbiAgICAgICAgICAgIHN0YXR1czogJ2Nvbm5lY3RlZCcsXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHsgYWNjb3VudHMsIGNoYWluSWQ6IGRhdGEuY2hhaW5JZCB9O1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uZmlnLnNldFN0YXRlKCh4KSA9PiAoe1xuICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgIC8vIEtlZXAgZXhpc3RpbmcgY29ubmVjdG9yIGNvbm5lY3RlZCBpbiBjYXNlIG9mIGVycm9yXG4gICAgICAgICAgICBzdGF0dXM6IHguY3VycmVudCA/ICdjb25uZWN0ZWQnIDogJ2Rpc2Nvbm5lY3RlZCcsXG4gICAgICAgIH0pKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdC5qcy5tYXAiXSwibmFtZXMiOlsiQ29ubmVjdG9yQWxyZWFkeUNvbm5lY3RlZEVycm9yIiwiY29ubmVjdCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjb25uZWN0b3IiLCJfaW50ZXJuYWwiLCJjb25uZWN0b3JzIiwic2V0dXAiLCJ1aWQiLCJzdGF0ZSIsImN1cnJlbnQiLCJzZXRTdGF0ZSIsIngiLCJzdGF0dXMiLCJlbWl0dGVyIiwiZW1pdCIsInR5cGUiLCJfIiwicmVzdCIsImRhdGEiLCJhY2NvdW50cyIsIm9mZiIsImV2ZW50cyIsIm9uIiwiY2hhbmdlIiwiZGlzY29ubmVjdCIsInN0b3JhZ2UiLCJzZXRJdGVtIiwiaWQiLCJjb25uZWN0aW9ucyIsIk1hcCIsInNldCIsImNoYWluSWQiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/connect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/disconnect.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/disconnect.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disconnect: () => (/* binding */ disconnect)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/disconnect */ async function disconnect(config, parameters = {}) {\n    let connector;\n    if (parameters.connector) connector = parameters.connector;\n    else {\n        const { connections, current } = config.state;\n        const connection = connections.get(current);\n        connector = connection?.connector;\n    }\n    const connections = config.state.connections;\n    if (connector) {\n        await connector.disconnect();\n        connector.emitter.off(\"change\", config._internal.events.change);\n        connector.emitter.off(\"disconnect\", config._internal.events.disconnect);\n        connector.emitter.on(\"connect\", config._internal.events.connect);\n        connections.delete(connector.uid);\n    }\n    config.setState((x)=>{\n        // if no connections exist, move to disconnected state\n        if (connections.size === 0) return {\n            ...x,\n            connections: new Map(),\n            current: null,\n            status: \"disconnected\"\n        };\n        // switch over to another connection\n        const nextConnection = connections.values().next().value;\n        return {\n            ...x,\n            connections: new Map(connections),\n            current: nextConnection.connector.uid\n        };\n    });\n    // Set recent connector if exists\n    {\n        const current = config.state.current;\n        if (!current) return;\n        const connector = config.state.connections.get(current)?.connector;\n        if (!connector) return;\n        await config.storage?.setItem(\"recentConnectorId\", connector.id);\n    }\n} //# sourceMappingURL=disconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9kaXNjb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpREFBaUQsR0FDMUMsZUFBZUEsV0FBV0MsTUFBTSxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUNwRCxJQUFJQztJQUNKLElBQUlELFdBQVdDLFNBQVMsRUFDcEJBLFlBQVlELFdBQVdDLFNBQVM7U0FDL0I7UUFDRCxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsT0FBTyxFQUFFLEdBQUdKLE9BQU9LLEtBQUs7UUFDN0MsTUFBTUMsYUFBYUgsWUFBWUksR0FBRyxDQUFDSDtRQUNuQ0YsWUFBWUksWUFBWUo7SUFDNUI7SUFDQSxNQUFNQyxjQUFjSCxPQUFPSyxLQUFLLENBQUNGLFdBQVc7SUFDNUMsSUFBSUQsV0FBVztRQUNYLE1BQU1BLFVBQVVILFVBQVU7UUFDMUJHLFVBQVVNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFVBQVVULE9BQU9VLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDQyxNQUFNO1FBQzlEVixVQUFVTSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxjQUFjVCxPQUFPVSxTQUFTLENBQUNDLE1BQU0sQ0FBQ1osVUFBVTtRQUN0RUcsVUFBVU0sT0FBTyxDQUFDSyxFQUFFLENBQUMsV0FBV2IsT0FBT1UsU0FBUyxDQUFDQyxNQUFNLENBQUNHLE9BQU87UUFDL0RYLFlBQVlZLE1BQU0sQ0FBQ2IsVUFBVWMsR0FBRztJQUNwQztJQUNBaEIsT0FBT2lCLFFBQVEsQ0FBQyxDQUFDQztRQUNiLHNEQUFzRDtRQUN0RCxJQUFJZixZQUFZZ0IsSUFBSSxLQUFLLEdBQ3JCLE9BQU87WUFDSCxHQUFHRCxDQUFDO1lBQ0pmLGFBQWEsSUFBSWlCO1lBQ2pCaEIsU0FBUztZQUNUaUIsUUFBUTtRQUNaO1FBQ0osb0NBQW9DO1FBQ3BDLE1BQU1DLGlCQUFpQm5CLFlBQVlvQixNQUFNLEdBQUdDLElBQUksR0FBR0MsS0FBSztRQUN4RCxPQUFPO1lBQ0gsR0FBR1AsQ0FBQztZQUNKZixhQUFhLElBQUlpQixJQUFJakI7WUFDckJDLFNBQVNrQixlQUFlcEIsU0FBUyxDQUFDYyxHQUFHO1FBQ3pDO0lBQ0o7SUFDQSxpQ0FBaUM7SUFDakM7UUFDSSxNQUFNWixVQUFVSixPQUFPSyxLQUFLLENBQUNELE9BQU87UUFDcEMsSUFBSSxDQUFDQSxTQUNEO1FBQ0osTUFBTUYsWUFBWUYsT0FBT0ssS0FBSyxDQUFDRixXQUFXLENBQUNJLEdBQUcsQ0FBQ0gsVUFBVUY7UUFDekQsSUFBSSxDQUFDQSxXQUNEO1FBQ0osTUFBTUYsT0FBTzBCLE9BQU8sRUFBRUMsUUFBUSxxQkFBcUJ6QixVQUFVMEIsRUFBRTtJQUNuRTtBQUNKLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9kaXNjb25uZWN0LmpzP2Y4YTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9kaXNjb25uZWN0ICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGlzY29ubmVjdChjb25maWcsIHBhcmFtZXRlcnMgPSB7fSkge1xuICAgIGxldCBjb25uZWN0b3I7XG4gICAgaWYgKHBhcmFtZXRlcnMuY29ubmVjdG9yKVxuICAgICAgICBjb25uZWN0b3IgPSBwYXJhbWV0ZXJzLmNvbm5lY3RvcjtcbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgeyBjb25uZWN0aW9ucywgY3VycmVudCB9ID0gY29uZmlnLnN0YXRlO1xuICAgICAgICBjb25zdCBjb25uZWN0aW9uID0gY29ubmVjdGlvbnMuZ2V0KGN1cnJlbnQpO1xuICAgICAgICBjb25uZWN0b3IgPSBjb25uZWN0aW9uPy5jb25uZWN0b3I7XG4gICAgfVxuICAgIGNvbnN0IGNvbm5lY3Rpb25zID0gY29uZmlnLnN0YXRlLmNvbm5lY3Rpb25zO1xuICAgIGlmIChjb25uZWN0b3IpIHtcbiAgICAgICAgYXdhaXQgY29ubmVjdG9yLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgY29ubmVjdG9yLmVtaXR0ZXIub2ZmKCdjaGFuZ2UnLCBjb25maWcuX2ludGVybmFsLmV2ZW50cy5jaGFuZ2UpO1xuICAgICAgICBjb25uZWN0b3IuZW1pdHRlci5vZmYoJ2Rpc2Nvbm5lY3QnLCBjb25maWcuX2ludGVybmFsLmV2ZW50cy5kaXNjb25uZWN0KTtcbiAgICAgICAgY29ubmVjdG9yLmVtaXR0ZXIub24oJ2Nvbm5lY3QnLCBjb25maWcuX2ludGVybmFsLmV2ZW50cy5jb25uZWN0KTtcbiAgICAgICAgY29ubmVjdGlvbnMuZGVsZXRlKGNvbm5lY3Rvci51aWQpO1xuICAgIH1cbiAgICBjb25maWcuc2V0U3RhdGUoKHgpID0+IHtcbiAgICAgICAgLy8gaWYgbm8gY29ubmVjdGlvbnMgZXhpc3QsIG1vdmUgdG8gZGlzY29ubmVjdGVkIHN0YXRlXG4gICAgICAgIGlmIChjb25uZWN0aW9ucy5zaXplID09PSAwKVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi54LFxuICAgICAgICAgICAgICAgIGNvbm5lY3Rpb25zOiBuZXcgTWFwKCksXG4gICAgICAgICAgICAgICAgY3VycmVudDogbnVsbCxcbiAgICAgICAgICAgICAgICBzdGF0dXM6ICdkaXNjb25uZWN0ZWQnLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgLy8gc3dpdGNoIG92ZXIgdG8gYW5vdGhlciBjb25uZWN0aW9uXG4gICAgICAgIGNvbnN0IG5leHRDb25uZWN0aW9uID0gY29ubmVjdGlvbnMudmFsdWVzKCkubmV4dCgpLnZhbHVlO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgIGNvbm5lY3Rpb25zOiBuZXcgTWFwKGNvbm5lY3Rpb25zKSxcbiAgICAgICAgICAgIGN1cnJlbnQ6IG5leHRDb25uZWN0aW9uLmNvbm5lY3Rvci51aWQsXG4gICAgICAgIH07XG4gICAgfSk7XG4gICAgLy8gU2V0IHJlY2VudCBjb25uZWN0b3IgaWYgZXhpc3RzXG4gICAge1xuICAgICAgICBjb25zdCBjdXJyZW50ID0gY29uZmlnLnN0YXRlLmN1cnJlbnQ7XG4gICAgICAgIGlmICghY3VycmVudClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgY29ubmVjdG9yID0gY29uZmlnLnN0YXRlLmNvbm5lY3Rpb25zLmdldChjdXJyZW50KT8uY29ubmVjdG9yO1xuICAgICAgICBpZiAoIWNvbm5lY3RvcilcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgYXdhaXQgY29uZmlnLnN0b3JhZ2U/LnNldEl0ZW0oJ3JlY2VudENvbm5lY3RvcklkJywgY29ubmVjdG9yLmlkKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaXNjb25uZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJkaXNjb25uZWN0IiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNvbm5lY3RvciIsImNvbm5lY3Rpb25zIiwiY3VycmVudCIsInN0YXRlIiwiY29ubmVjdGlvbiIsImdldCIsImVtaXR0ZXIiLCJvZmYiLCJfaW50ZXJuYWwiLCJldmVudHMiLCJjaGFuZ2UiLCJvbiIsImNvbm5lY3QiLCJkZWxldGUiLCJ1aWQiLCJzZXRTdGF0ZSIsIngiLCJzaXplIiwiTWFwIiwic3RhdHVzIiwibmV4dENvbm5lY3Rpb24iLCJ2YWx1ZXMiLCJuZXh0IiwidmFsdWUiLCJzdG9yYWdlIiwic2V0SXRlbSIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/disconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getAccount.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccount: () => (/* binding */ getAccount)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/getAccount */ function getAccount(config) {\n    const uid = config.state.current;\n    const connection = config.state.connections.get(uid);\n    const addresses = connection?.accounts;\n    const address = addresses?.[0];\n    const chain = config.chains.find((chain)=>chain.id === connection?.chainId);\n    const status = config.state.status;\n    switch(status){\n        case \"connected\":\n            return {\n                address: address,\n                addresses: addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: true,\n                isConnecting: false,\n                isDisconnected: false,\n                isReconnecting: false,\n                status\n            };\n        case \"reconnecting\":\n            return {\n                address,\n                addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: !!address,\n                isConnecting: false,\n                isDisconnected: false,\n                isReconnecting: true,\n                status\n            };\n        case \"connecting\":\n            return {\n                address,\n                addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: false,\n                isConnecting: true,\n                isDisconnected: false,\n                isReconnecting: false,\n                status\n            };\n        case \"disconnected\":\n            return {\n                address: undefined,\n                addresses: undefined,\n                chain: undefined,\n                chainId: undefined,\n                connector: undefined,\n                isConnected: false,\n                isConnecting: false,\n                isDisconnected: true,\n                isReconnecting: false,\n                status\n            };\n    }\n} //# sourceMappingURL=getAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRBY2NvdW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpREFBaUQsR0FDMUMsU0FBU0EsV0FBV0MsTUFBTTtJQUM3QixNQUFNQyxNQUFNRCxPQUFPRSxLQUFLLENBQUNDLE9BQU87SUFDaEMsTUFBTUMsYUFBYUosT0FBT0UsS0FBSyxDQUFDRyxXQUFXLENBQUNDLEdBQUcsQ0FBQ0w7SUFDaEQsTUFBTU0sWUFBWUgsWUFBWUk7SUFDOUIsTUFBTUMsVUFBVUYsV0FBVyxDQUFDLEVBQUU7SUFDOUIsTUFBTUcsUUFBUVYsT0FBT1csTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQ0YsUUFBVUEsTUFBTUcsRUFBRSxLQUFLVCxZQUFZVTtJQUNyRSxNQUFNQyxTQUFTZixPQUFPRSxLQUFLLENBQUNhLE1BQU07SUFDbEMsT0FBUUE7UUFDSixLQUFLO1lBQ0QsT0FBTztnQkFDSE4sU0FBU0E7Z0JBQ1RGLFdBQVdBO2dCQUNYRztnQkFDQUksU0FBU1YsWUFBWVU7Z0JBQ3JCRSxXQUFXWixZQUFZWTtnQkFDdkJDLGFBQWE7Z0JBQ2JDLGNBQWM7Z0JBQ2RDLGdCQUFnQjtnQkFDaEJDLGdCQUFnQjtnQkFDaEJMO1lBQ0o7UUFDSixLQUFLO1lBQ0QsT0FBTztnQkFDSE47Z0JBQ0FGO2dCQUNBRztnQkFDQUksU0FBU1YsWUFBWVU7Z0JBQ3JCRSxXQUFXWixZQUFZWTtnQkFDdkJDLGFBQWEsQ0FBQyxDQUFDUjtnQkFDZlMsY0FBYztnQkFDZEMsZ0JBQWdCO2dCQUNoQkMsZ0JBQWdCO2dCQUNoQkw7WUFDSjtRQUNKLEtBQUs7WUFDRCxPQUFPO2dCQUNITjtnQkFDQUY7Z0JBQ0FHO2dCQUNBSSxTQUFTVixZQUFZVTtnQkFDckJFLFdBQVdaLFlBQVlZO2dCQUN2QkMsYUFBYTtnQkFDYkMsY0FBYztnQkFDZEMsZ0JBQWdCO2dCQUNoQkMsZ0JBQWdCO2dCQUNoQkw7WUFDSjtRQUNKLEtBQUs7WUFDRCxPQUFPO2dCQUNITixTQUFTWTtnQkFDVGQsV0FBV2M7Z0JBQ1hYLE9BQU9XO2dCQUNQUCxTQUFTTztnQkFDVEwsV0FBV0s7Z0JBQ1hKLGFBQWE7Z0JBQ2JDLGNBQWM7Z0JBQ2RDLGdCQUFnQjtnQkFDaEJDLGdCQUFnQjtnQkFDaEJMO1lBQ0o7SUFDUjtBQUNKLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRBY2NvdW50LmpzP2FiMTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9nZXRBY2NvdW50ICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWNjb3VudChjb25maWcpIHtcbiAgICBjb25zdCB1aWQgPSBjb25maWcuc3RhdGUuY3VycmVudDtcbiAgICBjb25zdCBjb25uZWN0aW9uID0gY29uZmlnLnN0YXRlLmNvbm5lY3Rpb25zLmdldCh1aWQpO1xuICAgIGNvbnN0IGFkZHJlc3NlcyA9IGNvbm5lY3Rpb24/LmFjY291bnRzO1xuICAgIGNvbnN0IGFkZHJlc3MgPSBhZGRyZXNzZXM/LlswXTtcbiAgICBjb25zdCBjaGFpbiA9IGNvbmZpZy5jaGFpbnMuZmluZCgoY2hhaW4pID0+IGNoYWluLmlkID09PSBjb25uZWN0aW9uPy5jaGFpbklkKTtcbiAgICBjb25zdCBzdGF0dXMgPSBjb25maWcuc3RhdGUuc3RhdHVzO1xuICAgIHN3aXRjaCAoc3RhdHVzKSB7XG4gICAgICAgIGNhc2UgJ2Nvbm5lY3RlZCc6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgYWRkcmVzc2VzOiBhZGRyZXNzZXMsXG4gICAgICAgICAgICAgICAgY2hhaW4sXG4gICAgICAgICAgICAgICAgY2hhaW5JZDogY29ubmVjdGlvbj8uY2hhaW5JZCxcbiAgICAgICAgICAgICAgICBjb25uZWN0b3I6IGNvbm5lY3Rpb24/LmNvbm5lY3RvcixcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3Rpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzRGlzY29ubmVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc1JlY29ubmVjdGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgc3RhdHVzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSAncmVjb25uZWN0aW5nJzpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBhZGRyZXNzZXMsXG4gICAgICAgICAgICAgICAgY2hhaW4sXG4gICAgICAgICAgICAgICAgY2hhaW5JZDogY29ubmVjdGlvbj8uY2hhaW5JZCxcbiAgICAgICAgICAgICAgICBjb25uZWN0b3I6IGNvbm5lY3Rpb24/LmNvbm5lY3RvcixcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogISFhZGRyZXNzLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNEaXNjb25uZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzUmVjb25uZWN0aW5nOiB0cnVlLFxuICAgICAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgJ2Nvbm5lY3RpbmcnOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgICAgICAgIGFkZHJlc3NlcyxcbiAgICAgICAgICAgICAgICBjaGFpbixcbiAgICAgICAgICAgICAgICBjaGFpbklkOiBjb25uZWN0aW9uPy5jaGFpbklkLFxuICAgICAgICAgICAgICAgIGNvbm5lY3RvcjogY29ubmVjdGlvbj8uY29ubmVjdG9yLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3Rpbmc6IHRydWUsXG4gICAgICAgICAgICAgICAgaXNEaXNjb25uZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzUmVjb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgICAgICB9O1xuICAgICAgICBjYXNlICdkaXNjb25uZWN0ZWQnOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgYWRkcmVzc2VzOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgY2hhaW46IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBjaGFpbklkOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgY29ubmVjdG9yOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgaXNDb25uZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNEaXNjb25uZWN0ZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgaXNSZWNvbm5lY3Rpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0QWNjb3VudCIsImNvbmZpZyIsInVpZCIsInN0YXRlIiwiY3VycmVudCIsImNvbm5lY3Rpb24iLCJjb25uZWN0aW9ucyIsImdldCIsImFkZHJlc3NlcyIsImFjY291bnRzIiwiYWRkcmVzcyIsImNoYWluIiwiY2hhaW5zIiwiZmluZCIsImlkIiwiY2hhaW5JZCIsInN0YXR1cyIsImNvbm5lY3RvciIsImlzQ29ubmVjdGVkIiwiaXNDb25uZWN0aW5nIiwiaXNEaXNjb25uZWN0ZWQiLCJpc1JlY29ubmVjdGluZyIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBalance.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getBalance.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBalance: () => (/* binding */ getBalance)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/data/trim.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/unit/formatUnits.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/getBalance.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _utils_getUnit_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/getUnit.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js\");\n/* harmony import */ var _readContracts_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./readContracts.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js\");\n\n\n\n\n\n/** https://wagmi.sh/core/api/actions/getBalance */ async function getBalance(config, parameters) {\n    const { address, blockNumber, blockTag, chainId, token: tokenAddress, unit = \"ether\" } = parameters;\n    if (tokenAddress) {\n        try {\n            return await getTokenBalance(config, {\n                balanceAddress: address,\n                chainId,\n                symbolType: \"string\",\n                tokenAddress\n            });\n        } catch (error) {\n            // In the chance that there is an error upon decoding the contract result,\n            // it could be likely that the contract data is represented as bytes32 instead\n            // of a string.\n            if (error.name === \"ContractFunctionExecutionError\") {\n                const balance = await getTokenBalance(config, {\n                    balanceAddress: address,\n                    chainId,\n                    symbolType: \"bytes32\",\n                    tokenAddress\n                });\n                const symbol = (0,viem__WEBPACK_IMPORTED_MODULE_0__.hexToString)((0,viem__WEBPACK_IMPORTED_MODULE_1__.trim)(balance.symbol, {\n                    dir: \"right\"\n                }));\n                return {\n                    ...balance,\n                    symbol\n                };\n            }\n            throw error;\n        }\n    }\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_3__.getBalance, \"getBalance\");\n    const value = await action(blockNumber ? {\n        address,\n        blockNumber\n    } : {\n        address,\n        blockTag\n    });\n    const chain = config.chains.find((x)=>x.id === chainId) ?? client.chain;\n    return {\n        decimals: chain.nativeCurrency.decimals,\n        formatted: (0,viem__WEBPACK_IMPORTED_MODULE_4__.formatUnits)(value, (0,_utils_getUnit_js__WEBPACK_IMPORTED_MODULE_5__.getUnit)(unit)),\n        symbol: chain.nativeCurrency.symbol,\n        value\n    };\n}\nasync function getTokenBalance(config, parameters) {\n    const { balanceAddress, chainId, symbolType, tokenAddress, unit } = parameters;\n    const contract = {\n        abi: [\n            {\n                type: \"function\",\n                name: \"balanceOf\",\n                stateMutability: \"view\",\n                inputs: [\n                    {\n                        type: \"address\"\n                    }\n                ],\n                outputs: [\n                    {\n                        type: \"uint256\"\n                    }\n                ]\n            },\n            {\n                type: \"function\",\n                name: \"decimals\",\n                stateMutability: \"view\",\n                inputs: [],\n                outputs: [\n                    {\n                        type: \"uint8\"\n                    }\n                ]\n            },\n            {\n                type: \"function\",\n                name: \"symbol\",\n                stateMutability: \"view\",\n                inputs: [],\n                outputs: [\n                    {\n                        type: symbolType\n                    }\n                ]\n            }\n        ],\n        address: tokenAddress\n    };\n    const [value, decimals, symbol] = await (0,_readContracts_js__WEBPACK_IMPORTED_MODULE_6__.readContracts)(config, {\n        allowFailure: false,\n        contracts: [\n            {\n                ...contract,\n                functionName: \"balanceOf\",\n                args: [\n                    balanceAddress\n                ],\n                chainId\n            },\n            {\n                ...contract,\n                functionName: \"decimals\",\n                chainId\n            },\n            {\n                ...contract,\n                functionName: \"symbol\",\n                chainId\n            }\n        ]\n    });\n    const formatted = (0,viem__WEBPACK_IMPORTED_MODULE_4__.formatUnits)(value ?? \"0\", (0,_utils_getUnit_js__WEBPACK_IMPORTED_MODULE_5__.getUnit)(unit ?? decimals));\n    return {\n        decimals,\n        formatted,\n        symbol,\n        value\n    };\n} //# sourceMappingURL=getBalance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBalance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getChainId.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getChainId.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChainId: () => (/* binding */ getChainId)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/getChainId */ function getChainId(config) {\n    return config.state.chainId;\n} //# sourceMappingURL=getChainId.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDaGFpbklkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpREFBaUQsR0FDMUMsU0FBU0EsV0FBV0MsTUFBTTtJQUM3QixPQUFPQSxPQUFPQyxLQUFLLENBQUNDLE9BQU87QUFDL0IsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldENoYWluSWQuanM/MTFlOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL2dldENoYWluSWQgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDaGFpbklkKGNvbmZpZykge1xuICAgIHJldHVybiBjb25maWcuc3RhdGUuY2hhaW5JZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENoYWluSWQuanMubWFwIl0sIm5hbWVzIjpbImdldENoYWluSWQiLCJjb25maWciLCJzdGF0ZSIsImNoYWluSWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getChainId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getChains.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getChains.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChains: () => (/* binding */ getChains)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n\nlet previousChains = [];\n/** https://wagmi.sh/core/api/actions/getChains */ function getChains(config) {\n    const chains = config.chains;\n    if ((0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(previousChains, chains)) return previousChains;\n    previousChains = chains;\n    return chains;\n} //# sourceMappingURL=getChains.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDaGFpbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0Q7QUFDbEQsSUFBSUMsaUJBQWlCLEVBQUU7QUFDdkIsZ0RBQWdELEdBQ3pDLFNBQVNDLFVBQVVDLE1BQU07SUFDNUIsTUFBTUMsU0FBU0QsT0FBT0MsTUFBTTtJQUM1QixJQUFJSiw4REFBU0EsQ0FBQ0MsZ0JBQWdCRyxTQUMxQixPQUFPSDtJQUNYQSxpQkFBaUJHO0lBQ2pCLE9BQU9BO0FBQ1gsRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldENoYWlucy5qcz8xNGJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZXBFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2RlZXBFcXVhbC5qcyc7XG5sZXQgcHJldmlvdXNDaGFpbnMgPSBbXTtcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0Q2hhaW5zICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hhaW5zKGNvbmZpZykge1xuICAgIGNvbnN0IGNoYWlucyA9IGNvbmZpZy5jaGFpbnM7XG4gICAgaWYgKGRlZXBFcXVhbChwcmV2aW91c0NoYWlucywgY2hhaW5zKSlcbiAgICAgICAgcmV0dXJuIHByZXZpb3VzQ2hhaW5zO1xuICAgIHByZXZpb3VzQ2hhaW5zID0gY2hhaW5zO1xuICAgIHJldHVybiBjaGFpbnM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDaGFpbnMuanMubWFwIl0sIm5hbWVzIjpbImRlZXBFcXVhbCIsInByZXZpb3VzQ2hhaW5zIiwiZ2V0Q2hhaW5zIiwiY29uZmlnIiwiY2hhaW5zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getChains.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getClient.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getClient.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClient: () => (/* binding */ getClient)\n/* harmony export */ });\nfunction getClient(config, parameters = {}) {\n    try {\n        return config.getClient(parameters);\n    } catch  {\n        return undefined;\n    }\n} //# sourceMappingURL=getClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLFVBQVVDLE1BQU0sRUFBRUMsYUFBYSxDQUFDLENBQUM7SUFDN0MsSUFBSTtRQUNBLE9BQU9ELE9BQU9ELFNBQVMsQ0FBQ0U7SUFDNUIsRUFDQSxPQUFNO1FBQ0YsT0FBT0M7SUFDWDtBQUNKLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDbGllbnQuanM/MTMyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2V0Q2xpZW50KGNvbmZpZywgcGFyYW1ldGVycyA9IHt9KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGNvbmZpZy5nZXRDbGllbnQocGFyYW1ldGVycyk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbImdldENsaWVudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnections.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getConnections.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConnections: () => (/* binding */ getConnections)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n\nlet previousConnections = [];\n/** https://wagmi.sh/core/api/actions/getConnections */ function getConnections(config) {\n    const connections = [\n        ...config.state.connections.values()\n    ];\n    if (config.state.status === \"reconnecting\") return previousConnections;\n    if ((0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(previousConnections, connections)) return previousConnections;\n    previousConnections = connections;\n    return connections;\n} //# sourceMappingURL=getConnections.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUNsRCxJQUFJQyxzQkFBc0IsRUFBRTtBQUM1QixxREFBcUQsR0FDOUMsU0FBU0MsZUFBZUMsTUFBTTtJQUNqQyxNQUFNQyxjQUFjO1dBQUlELE9BQU9FLEtBQUssQ0FBQ0QsV0FBVyxDQUFDRSxNQUFNO0tBQUc7SUFDMUQsSUFBSUgsT0FBT0UsS0FBSyxDQUFDRSxNQUFNLEtBQUssZ0JBQ3hCLE9BQU9OO0lBQ1gsSUFBSUQsOERBQVNBLENBQUNDLHFCQUFxQkcsY0FDL0IsT0FBT0g7SUFDWEEsc0JBQXNCRztJQUN0QixPQUFPQTtBQUNYLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0aW9ucy5qcz9hMzQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZXBFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2RlZXBFcXVhbC5qcyc7XG5sZXQgcHJldmlvdXNDb25uZWN0aW9ucyA9IFtdO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9nZXRDb25uZWN0aW9ucyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbm5lY3Rpb25zKGNvbmZpZykge1xuICAgIGNvbnN0IGNvbm5lY3Rpb25zID0gWy4uLmNvbmZpZy5zdGF0ZS5jb25uZWN0aW9ucy52YWx1ZXMoKV07XG4gICAgaWYgKGNvbmZpZy5zdGF0ZS5zdGF0dXMgPT09ICdyZWNvbm5lY3RpbmcnKVxuICAgICAgICByZXR1cm4gcHJldmlvdXNDb25uZWN0aW9ucztcbiAgICBpZiAoZGVlcEVxdWFsKHByZXZpb3VzQ29ubmVjdGlvbnMsIGNvbm5lY3Rpb25zKSlcbiAgICAgICAgcmV0dXJuIHByZXZpb3VzQ29ubmVjdGlvbnM7XG4gICAgcHJldmlvdXNDb25uZWN0aW9ucyA9IGNvbm5lY3Rpb25zO1xuICAgIHJldHVybiBjb25uZWN0aW9ucztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENvbm5lY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWVwRXF1YWwiLCJwcmV2aW91c0Nvbm5lY3Rpb25zIiwiZ2V0Q29ubmVjdGlvbnMiLCJjb25maWciLCJjb25uZWN0aW9ucyIsInN0YXRlIiwidmFsdWVzIiwic3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnections.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConnectorClient: () => (/* binding */ getConnectorClient)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/custom.js\");\n/* harmony import */ var viem_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/utils */ \"(ssr)/./node_modules/viem/_esm/accounts/utils/parseAccount.js\");\n/* harmony import */ var viem_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/utils */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/getConnectorClient */ async function getConnectorClient(config, parameters = {}) {\n    // Get connection\n    let connection;\n    if (parameters.connector) {\n        const { connector } = parameters;\n        if (config.state.status === \"reconnecting\" && !connector.getAccounts && !connector.getChainId) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorUnavailableReconnectingError({\n            connector\n        });\n        const [accounts, chainId] = await Promise.all([\n            connector.getAccounts().catch((e)=>{\n                if (parameters.account === null) return [];\n                throw e;\n            }),\n            connector.getChainId()\n        ]);\n        connection = {\n            accounts: accounts,\n            chainId,\n            connector\n        };\n    } else connection = config.state.connections.get(config.state.current);\n    if (!connection) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorNotConnectedError();\n    const chainId = parameters.chainId ?? connection.chainId;\n    // Check connector using same chainId as connection\n    const connectorChainId = await connection.connector.getChainId();\n    if (connectorChainId !== connection.chainId) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorChainMismatchError({\n        connectionChainId: connection.chainId,\n        connectorChainId\n    });\n    const connector = connection.connector;\n    if (connector.getClient) return connector.getClient({\n        chainId\n    });\n    // Default using `custom` transport\n    const account = (0,viem_utils__WEBPACK_IMPORTED_MODULE_1__.parseAccount)(parameters.account ?? connection.accounts[0]);\n    if (account) account.address = (0,viem_utils__WEBPACK_IMPORTED_MODULE_2__.getAddress)(account.address); // TODO: Checksum address as part of `parseAccount`?\n    // If account was provided, check that it exists on the connector\n    if (parameters.account && !connection.accounts.some((x)=>x.toLowerCase() === account.address.toLowerCase())) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorAccountNotFoundError({\n        address: account.address,\n        connector\n    });\n    const chain = config.chains.find((chain)=>chain.id === chainId);\n    const provider = await connection.connector.getProvider({\n        chainId\n    });\n    return (0,viem__WEBPACK_IMPORTED_MODULE_3__.createClient)({\n        account,\n        chain,\n        name: \"Connector Client\",\n        transport: (opts)=>(0,viem__WEBPACK_IMPORTED_MODULE_4__.custom)(provider)({\n                ...opts,\n                retryCount: 0\n            })\n    });\n} //# sourceMappingURL=getConnectorClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0b3JDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBQ1M7QUFDK0c7QUFDcksseURBQXlELEdBQ2xELGVBQWVRLG1CQUFtQkMsTUFBTSxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUM1RCxpQkFBaUI7SUFDakIsSUFBSUM7SUFDSixJQUFJRCxXQUFXRSxTQUFTLEVBQUU7UUFDdEIsTUFBTSxFQUFFQSxTQUFTLEVBQUUsR0FBR0Y7UUFDdEIsSUFBSUQsT0FBT0ksS0FBSyxDQUFDQyxNQUFNLEtBQUssa0JBQ3hCLENBQUNGLFVBQVVHLFdBQVcsSUFDdEIsQ0FBQ0gsVUFBVUksVUFBVSxFQUNyQixNQUFNLElBQUlULG9GQUFxQ0EsQ0FBQztZQUFFSztRQUFVO1FBQ2hFLE1BQU0sQ0FBQ0ssVUFBVUMsUUFBUSxHQUFHLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQztZQUMxQ1IsVUFBVUcsV0FBVyxHQUFHTSxLQUFLLENBQUMsQ0FBQ0M7Z0JBQzNCLElBQUlaLFdBQVdhLE9BQU8sS0FBSyxNQUN2QixPQUFPLEVBQUU7Z0JBQ2IsTUFBTUQ7WUFDVjtZQUNBVixVQUFVSSxVQUFVO1NBQ3ZCO1FBQ0RMLGFBQWE7WUFDVE0sVUFBVUE7WUFDVkM7WUFDQU47UUFDSjtJQUNKLE9BRUlELGFBQWFGLE9BQU9JLEtBQUssQ0FBQ1csV0FBVyxDQUFDQyxHQUFHLENBQUNoQixPQUFPSSxLQUFLLENBQUNhLE9BQU87SUFDbEUsSUFBSSxDQUFDZixZQUNELE1BQU0sSUFBSUwseUVBQTBCQTtJQUN4QyxNQUFNWSxVQUFVUixXQUFXUSxPQUFPLElBQUlQLFdBQVdPLE9BQU87SUFDeEQsbURBQW1EO0lBQ25ELE1BQU1TLG1CQUFtQixNQUFNaEIsV0FBV0MsU0FBUyxDQUFDSSxVQUFVO0lBQzlELElBQUlXLHFCQUFxQmhCLFdBQVdPLE9BQU8sRUFDdkMsTUFBTSxJQUFJYiwwRUFBMkJBLENBQUM7UUFDbEN1QixtQkFBbUJqQixXQUFXTyxPQUFPO1FBQ3JDUztJQUNKO0lBQ0osTUFBTWYsWUFBWUQsV0FBV0MsU0FBUztJQUN0QyxJQUFJQSxVQUFVaUIsU0FBUyxFQUNuQixPQUFPakIsVUFBVWlCLFNBQVMsQ0FBQztRQUFFWDtJQUFRO0lBQ3pDLG1DQUFtQztJQUNuQyxNQUFNSyxVQUFVcEIsd0RBQVlBLENBQUNPLFdBQVdhLE9BQU8sSUFBSVosV0FBV00sUUFBUSxDQUFDLEVBQUU7SUFDekUsSUFBSU0sU0FDQUEsUUFBUU8sT0FBTyxHQUFHNUIsc0RBQVVBLENBQUNxQixRQUFRTyxPQUFPLEdBQUcsb0RBQW9EO0lBQ3ZHLGlFQUFpRTtJQUNqRSxJQUFJcEIsV0FBV2EsT0FBTyxJQUNsQixDQUFDWixXQUFXTSxRQUFRLENBQUNjLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxXQUFXLE9BQU9WLFFBQVFPLE9BQU8sQ0FBQ0csV0FBVyxLQUNoRixNQUFNLElBQUk3Qiw0RUFBNkJBLENBQUM7UUFDcEMwQixTQUFTUCxRQUFRTyxPQUFPO1FBQ3hCbEI7SUFDSjtJQUNKLE1BQU1zQixRQUFRekIsT0FBTzBCLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUNGLFFBQVVBLE1BQU1HLEVBQUUsS0FBS25CO0lBQ3pELE1BQU1vQixXQUFZLE1BQU0zQixXQUFXQyxTQUFTLENBQUMyQixXQUFXLENBQUM7UUFBRXJCO0lBQVE7SUFDbkUsT0FBT2xCLGtEQUFZQSxDQUFDO1FBQ2hCdUI7UUFDQVc7UUFDQU0sTUFBTTtRQUNOQyxXQUFXLENBQUNDLE9BQVN6Qyw0Q0FBTUEsQ0FBQ3FDLFVBQVU7Z0JBQUUsR0FBR0ksSUFBSTtnQkFBRUMsWUFBWTtZQUFFO0lBQ25FO0FBQ0osRUFDQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldENvbm5lY3RvckNsaWVudC5qcz83YjM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCwgY3VzdG9tLCB9IGZyb20gJ3ZpZW0nO1xuaW1wb3J0IHsgZ2V0QWRkcmVzcywgcGFyc2VBY2NvdW50IH0gZnJvbSAndmllbS91dGlscyc7XG5pbXBvcnQgeyBDb25uZWN0b3JBY2NvdW50Tm90Rm91bmRFcnJvciwgQ29ubmVjdG9yQ2hhaW5NaXNtYXRjaEVycm9yLCBDb25uZWN0b3JOb3RDb25uZWN0ZWRFcnJvciwgQ29ubmVjdG9yVW5hdmFpbGFibGVSZWNvbm5lY3RpbmdFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMvY29uZmlnLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0Q29ubmVjdG9yQ2xpZW50ICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q29ubmVjdG9yQ2xpZW50KGNvbmZpZywgcGFyYW1ldGVycyA9IHt9KSB7XG4gICAgLy8gR2V0IGNvbm5lY3Rpb25cbiAgICBsZXQgY29ubmVjdGlvbjtcbiAgICBpZiAocGFyYW1ldGVycy5jb25uZWN0b3IpIHtcbiAgICAgICAgY29uc3QgeyBjb25uZWN0b3IgfSA9IHBhcmFtZXRlcnM7XG4gICAgICAgIGlmIChjb25maWcuc3RhdGUuc3RhdHVzID09PSAncmVjb25uZWN0aW5nJyAmJlxuICAgICAgICAgICAgIWNvbm5lY3Rvci5nZXRBY2NvdW50cyAmJlxuICAgICAgICAgICAgIWNvbm5lY3Rvci5nZXRDaGFpbklkKVxuICAgICAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RvclVuYXZhaWxhYmxlUmVjb25uZWN0aW5nRXJyb3IoeyBjb25uZWN0b3IgfSk7XG4gICAgICAgIGNvbnN0IFthY2NvdW50cywgY2hhaW5JZF0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICBjb25uZWN0b3IuZ2V0QWNjb3VudHMoKS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChwYXJhbWV0ZXJzLmFjY291bnQgPT09IG51bGwpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBjb25uZWN0b3IuZ2V0Q2hhaW5JZCgpLFxuICAgICAgICBdKTtcbiAgICAgICAgY29ubmVjdGlvbiA9IHtcbiAgICAgICAgICAgIGFjY291bnRzOiBhY2NvdW50cyxcbiAgICAgICAgICAgIGNoYWluSWQsXG4gICAgICAgICAgICBjb25uZWN0b3IsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2VcbiAgICAgICAgY29ubmVjdGlvbiA9IGNvbmZpZy5zdGF0ZS5jb25uZWN0aW9ucy5nZXQoY29uZmlnLnN0YXRlLmN1cnJlbnQpO1xuICAgIGlmICghY29ubmVjdGlvbilcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3Rvck5vdENvbm5lY3RlZEVycm9yKCk7XG4gICAgY29uc3QgY2hhaW5JZCA9IHBhcmFtZXRlcnMuY2hhaW5JZCA/PyBjb25uZWN0aW9uLmNoYWluSWQ7XG4gICAgLy8gQ2hlY2sgY29ubmVjdG9yIHVzaW5nIHNhbWUgY2hhaW5JZCBhcyBjb25uZWN0aW9uXG4gICAgY29uc3QgY29ubmVjdG9yQ2hhaW5JZCA9IGF3YWl0IGNvbm5lY3Rpb24uY29ubmVjdG9yLmdldENoYWluSWQoKTtcbiAgICBpZiAoY29ubmVjdG9yQ2hhaW5JZCAhPT0gY29ubmVjdGlvbi5jaGFpbklkKVxuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdG9yQ2hhaW5NaXNtYXRjaEVycm9yKHtcbiAgICAgICAgICAgIGNvbm5lY3Rpb25DaGFpbklkOiBjb25uZWN0aW9uLmNoYWluSWQsXG4gICAgICAgICAgICBjb25uZWN0b3JDaGFpbklkLFxuICAgICAgICB9KTtcbiAgICBjb25zdCBjb25uZWN0b3IgPSBjb25uZWN0aW9uLmNvbm5lY3RvcjtcbiAgICBpZiAoY29ubmVjdG9yLmdldENsaWVudClcbiAgICAgICAgcmV0dXJuIGNvbm5lY3Rvci5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIC8vIERlZmF1bHQgdXNpbmcgYGN1c3RvbWAgdHJhbnNwb3J0XG4gICAgY29uc3QgYWNjb3VudCA9IHBhcnNlQWNjb3VudChwYXJhbWV0ZXJzLmFjY291bnQgPz8gY29ubmVjdGlvbi5hY2NvdW50c1swXSk7XG4gICAgaWYgKGFjY291bnQpXG4gICAgICAgIGFjY291bnQuYWRkcmVzcyA9IGdldEFkZHJlc3MoYWNjb3VudC5hZGRyZXNzKTsgLy8gVE9ETzogQ2hlY2tzdW0gYWRkcmVzcyBhcyBwYXJ0IG9mIGBwYXJzZUFjY291bnRgP1xuICAgIC8vIElmIGFjY291bnQgd2FzIHByb3ZpZGVkLCBjaGVjayB0aGF0IGl0IGV4aXN0cyBvbiB0aGUgY29ubmVjdG9yXG4gICAgaWYgKHBhcmFtZXRlcnMuYWNjb3VudCAmJlxuICAgICAgICAhY29ubmVjdGlvbi5hY2NvdW50cy5zb21lKCh4KSA9PiB4LnRvTG93ZXJDYXNlKCkgPT09IGFjY291bnQuYWRkcmVzcy50b0xvd2VyQ2FzZSgpKSlcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RvckFjY291bnROb3RGb3VuZEVycm9yKHtcbiAgICAgICAgICAgIGFkZHJlc3M6IGFjY291bnQuYWRkcmVzcyxcbiAgICAgICAgICAgIGNvbm5lY3RvcixcbiAgICAgICAgfSk7XG4gICAgY29uc3QgY2hhaW4gPSBjb25maWcuY2hhaW5zLmZpbmQoKGNoYWluKSA9PiBjaGFpbi5pZCA9PT0gY2hhaW5JZCk7XG4gICAgY29uc3QgcHJvdmlkZXIgPSAoYXdhaXQgY29ubmVjdGlvbi5jb25uZWN0b3IuZ2V0UHJvdmlkZXIoeyBjaGFpbklkIH0pKTtcbiAgICByZXR1cm4gY3JlYXRlQ2xpZW50KHtcbiAgICAgICAgYWNjb3VudCxcbiAgICAgICAgY2hhaW4sXG4gICAgICAgIG5hbWU6ICdDb25uZWN0b3IgQ2xpZW50JyxcbiAgICAgICAgdHJhbnNwb3J0OiAob3B0cykgPT4gY3VzdG9tKHByb3ZpZGVyKSh7IC4uLm9wdHMsIHJldHJ5Q291bnQ6IDAgfSksXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDb25uZWN0b3JDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsImN1c3RvbSIsImdldEFkZHJlc3MiLCJwYXJzZUFjY291bnQiLCJDb25uZWN0b3JBY2NvdW50Tm90Rm91bmRFcnJvciIsIkNvbm5lY3RvckNoYWluTWlzbWF0Y2hFcnJvciIsIkNvbm5lY3Rvck5vdENvbm5lY3RlZEVycm9yIiwiQ29ubmVjdG9yVW5hdmFpbGFibGVSZWNvbm5lY3RpbmdFcnJvciIsImdldENvbm5lY3RvckNsaWVudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjb25uZWN0aW9uIiwiY29ubmVjdG9yIiwic3RhdGUiLCJzdGF0dXMiLCJnZXRBY2NvdW50cyIsImdldENoYWluSWQiLCJhY2NvdW50cyIsImNoYWluSWQiLCJQcm9taXNlIiwiYWxsIiwiY2F0Y2giLCJlIiwiYWNjb3VudCIsImNvbm5lY3Rpb25zIiwiZ2V0IiwiY3VycmVudCIsImNvbm5lY3RvckNoYWluSWQiLCJjb25uZWN0aW9uQ2hhaW5JZCIsImdldENsaWVudCIsImFkZHJlc3MiLCJzb21lIiwieCIsInRvTG93ZXJDYXNlIiwiY2hhaW4iLCJjaGFpbnMiLCJmaW5kIiwiaWQiLCJwcm92aWRlciIsImdldFByb3ZpZGVyIiwibmFtZSIsInRyYW5zcG9ydCIsIm9wdHMiLCJyZXRyeUNvdW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getConnectors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConnectors: () => (/* binding */ getConnectors)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n\nlet previousConnectors = [];\n/** https://wagmi.sh/core/api/actions/getConnectors */ function getConnectors(config) {\n    const connectors = config.connectors;\n    if ((0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(previousConnectors, connectors)) return previousConnectors;\n    previousConnectors = connectors;\n    return connectors;\n} //# sourceMappingURL=getConnectors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQ2xELElBQUlDLHFCQUFxQixFQUFFO0FBQzNCLG9EQUFvRCxHQUM3QyxTQUFTQyxjQUFjQyxNQUFNO0lBQ2hDLE1BQU1DLGFBQWFELE9BQU9DLFVBQVU7SUFDcEMsSUFBSUosOERBQVNBLENBQUNDLG9CQUFvQkcsYUFDOUIsT0FBT0g7SUFDWEEscUJBQXFCRztJQUNyQixPQUFPQTtBQUNYLEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0b3JzLmpzP2MxY2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVlcEVxdWFsIH0gZnJvbSAnLi4vdXRpbHMvZGVlcEVxdWFsLmpzJztcbmxldCBwcmV2aW91c0Nvbm5lY3RvcnMgPSBbXTtcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0Q29ubmVjdG9ycyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbm5lY3RvcnMoY29uZmlnKSB7XG4gICAgY29uc3QgY29ubmVjdG9ycyA9IGNvbmZpZy5jb25uZWN0b3JzO1xuICAgIGlmIChkZWVwRXF1YWwocHJldmlvdXNDb25uZWN0b3JzLCBjb25uZWN0b3JzKSlcbiAgICAgICAgcmV0dXJuIHByZXZpb3VzQ29ubmVjdG9ycztcbiAgICBwcmV2aW91c0Nvbm5lY3RvcnMgPSBjb25uZWN0b3JzO1xuICAgIHJldHVybiBjb25uZWN0b3JzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0Q29ubmVjdG9ycy5qcy5tYXAiXSwibmFtZXMiOlsiZGVlcEVxdWFsIiwicHJldmlvdXNDb25uZWN0b3JzIiwiZ2V0Q29ubmVjdG9ycyIsImNvbmZpZyIsImNvbm5lY3RvcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsAvatar: () => (/* binding */ getEnsAvatar)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/ens/getEnsAvatar.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getEnsAvatar */ function getEnsAvatar(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getEnsAvatar, \"getEnsAvatar\");\n    return action(rest);\n} //# sourceMappingURL=getEnsAvatar.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNBdmF0YXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ2hCO0FBQ2xELG1EQUFtRCxHQUM1QyxTQUFTQSxhQUFhRyxNQUFNLEVBQUVDLFVBQVU7SUFDM0MsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sc0RBQWlCQSxFQUFFO0lBQ3BELE9BQU9RLE9BQU9IO0FBQ2xCLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNBdmF0YXIuanM/YTA3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFbnNBdmF0YXIgYXMgdmllbV9nZXRFbnNBdmF0YXIsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL2dldEVuc0F2YXRhciAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVuc0F2YXRhcihjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGNoYWluSWQsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV9nZXRFbnNBdmF0YXIsICdnZXRFbnNBdmF0YXInKTtcbiAgICByZXR1cm4gYWN0aW9uKHJlc3QpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RW5zQXZhdGFyLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRFbnNBdmF0YXIiLCJ2aWVtX2dldEVuc0F2YXRhciIsImdldEFjdGlvbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjaGFpbklkIiwicmVzdCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsName: () => (/* binding */ getEnsName)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/ens/getEnsName.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getEnsName */ function getEnsName(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getEnsName, \"getEnsName\");\n    return action(rest);\n} //# sourceMappingURL=getEnsName.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNOYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4RDtBQUNaO0FBQ2xELGlEQUFpRCxHQUMxQyxTQUFTQSxXQUFXRyxNQUFNLEVBQUVDLFVBQVU7SUFDekMsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sb0RBQWVBLEVBQUU7SUFDbEQsT0FBT1EsT0FBT0g7QUFDbEIsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldEVuc05hbWUuanM/YjdhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFbnNOYW1lIGFzIHZpZW1fZ2V0RW5zTmFtZSwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0RW5zTmFtZSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVuc05hbWUoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBjaGFpbklkLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fZ2V0RW5zTmFtZSwgJ2dldEVuc05hbWUnKTtcbiAgICByZXR1cm4gYWN0aW9uKHJlc3QpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RW5zTmFtZS5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0RW5zTmFtZSIsInZpZW1fZ2V0RW5zTmFtZSIsImdldEFjdGlvbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjaGFpbklkIiwicmVzdCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getPublicClient.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getPublicClient.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPublicClient: () => (/* binding */ getPublicClient)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/decorators/public.js\");\n/* harmony import */ var _getClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getClient.js\");\n\n\nfunction getPublicClient(config, parameters = {}) {\n    const client = (0,_getClient_js__WEBPACK_IMPORTED_MODULE_0__.getClient)(config, parameters);\n    return client?.extend(viem__WEBPACK_IMPORTED_MODULE_1__.publicActions);\n} //# sourceMappingURL=getPublicClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRQdWJsaWNDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ007QUFDcEMsU0FBU0UsZ0JBQWdCQyxNQUFNLEVBQUVDLGFBQWEsQ0FBQyxDQUFDO0lBQ25ELE1BQU1DLFNBQVNKLHdEQUFTQSxDQUFDRSxRQUFRQztJQUNqQyxPQUFPQyxRQUFRQyxPQUFPTiwrQ0FBYUE7QUFDdkMsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldFB1YmxpY0NsaWVudC5qcz85ZTYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHB1YmxpY0FjdGlvbnMgfSBmcm9tICd2aWVtJztcbmltcG9ydCB7IGdldENsaWVudCB9IGZyb20gJy4vZ2V0Q2xpZW50LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRQdWJsaWNDbGllbnQoY29uZmlnLCBwYXJhbWV0ZXJzID0ge30pIHtcbiAgICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoY29uZmlnLCBwYXJhbWV0ZXJzKTtcbiAgICByZXR1cm4gY2xpZW50Py5leHRlbmQocHVibGljQWN0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRQdWJsaWNDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbInB1YmxpY0FjdGlvbnMiLCJnZXRDbGllbnQiLCJnZXRQdWJsaWNDbGllbnQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiY2xpZW50IiwiZXh0ZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getPublicClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getWalletClient.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getWalletClient.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getWalletClient: () => (/* binding */ getWalletClient)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/decorators/wallet.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\nasync function getWalletClient(config, parameters = {}) {\n    const client = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, parameters);\n    // @ts-ignore\n    return client.extend(viem__WEBPACK_IMPORTED_MODULE_1__.walletActions);\n} //# sourceMappingURL=getWalletClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRXYWxsZXRDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ3lCO0FBQ3ZELGVBQWVFLGdCQUFnQkMsTUFBTSxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUN6RCxNQUFNQyxTQUFTLE1BQU1KLDBFQUFrQkEsQ0FBQ0UsUUFBUUM7SUFDaEQsYUFBYTtJQUNiLE9BQU9DLE9BQU9DLE1BQU0sQ0FBQ04sK0NBQWFBO0FBQ3RDLEVBQ0EsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRXYWxsZXRDbGllbnQuanM/N2IxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3YWxsZXRBY3Rpb25zIH0gZnJvbSAndmllbSc7XG5pbXBvcnQgeyBnZXRDb25uZWN0b3JDbGllbnQsIH0gZnJvbSAnLi9nZXRDb25uZWN0b3JDbGllbnQuanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFdhbGxldENsaWVudChjb25maWcsIHBhcmFtZXRlcnMgPSB7fSkge1xuICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IGdldENvbm5lY3RvckNsaWVudChjb25maWcsIHBhcmFtZXRlcnMpO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICByZXR1cm4gY2xpZW50LmV4dGVuZCh3YWxsZXRBY3Rpb25zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFdhbGxldENsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsid2FsbGV0QWN0aW9ucyIsImdldENvbm5lY3RvckNsaWVudCIsImdldFdhbGxldENsaWVudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjbGllbnQiLCJleHRlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getWalletClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/multicall.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multicall: () => (/* binding */ multicall)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/multicall.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\nasync function multicall(config, parameters) {\n    const { allowFailure = true, chainId, contracts, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.multicall, \"multicall\");\n    return action({\n        allowFailure,\n        contracts,\n        ...rest\n    });\n} //# sourceMappingURL=multicall.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9tdWx0aWNhbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQ1Q7QUFDM0MsZUFBZUEsVUFBVUcsTUFBTSxFQUFFQyxVQUFVO0lBQzlDLE1BQU0sRUFBRUMsZUFBZSxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE1BQU0sR0FBR0o7SUFDN0QsTUFBTUssU0FBU04sT0FBT08sU0FBUyxDQUFDO1FBQUVKO0lBQVE7SUFDMUMsTUFBTUssU0FBU1QsOERBQVNBLENBQUNPLFFBQVFSLG1EQUFjQSxFQUFFO0lBQ2pELE9BQU9VLE9BQU87UUFDVk47UUFDQUU7UUFDQSxHQUFHQyxJQUFJO0lBQ1g7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvbXVsdGljYWxsLmpzPzdhMmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbXVsdGljYWxsIGFzIHZpZW1fbXVsdGljYWxsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbXVsdGljYWxsKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgYWxsb3dGYWlsdXJlID0gdHJ1ZSwgY2hhaW5JZCwgY29udHJhY3RzLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fbXVsdGljYWxsLCAnbXVsdGljYWxsJyk7XG4gICAgcmV0dXJuIGFjdGlvbih7XG4gICAgICAgIGFsbG93RmFpbHVyZSxcbiAgICAgICAgY29udHJhY3RzLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXVsdGljYWxsLmpzLm1hcCJdLCJuYW1lcyI6WyJtdWx0aWNhbGwiLCJ2aWVtX211bHRpY2FsbCIsImdldEFjdGlvbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJhbGxvd0ZhaWx1cmUiLCJjaGFpbklkIiwiY29udHJhY3RzIiwicmVzdCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/readContract.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readContract: () => (/* binding */ readContract)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/readContract.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/readContract */ function readContract(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.readContract, \"readContract\");\n    return action(rest);\n} //# sourceMappingURL=readContract.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9yZWFkQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ2hCO0FBQ2xELG1EQUFtRCxHQUM1QyxTQUFTQSxhQUFhRyxNQUFNLEVBQUVDLFVBQVU7SUFDM0MsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sc0RBQWlCQSxFQUFFO0lBQ3BELE9BQU9RLE9BQU9IO0FBQ2xCLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9yZWFkQ29udHJhY3QuanM/ZDNhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWFkQ29udHJhY3QgYXMgdmllbV9yZWFkQ29udHJhY3QsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3JlYWRDb250cmFjdCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlYWRDb250cmFjdChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGNoYWluSWQsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV9yZWFkQ29udHJhY3QsICdyZWFkQ29udHJhY3QnKTtcbiAgICByZXR1cm4gYWN0aW9uKHJlc3QpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhZENvbnRyYWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJyZWFkQ29udHJhY3QiLCJ2aWVtX3JlYWRDb250cmFjdCIsImdldEFjdGlvbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjaGFpbklkIiwicmVzdCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/readContracts.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readContracts: () => (/* binding */ readContracts)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/contract.js\");\n/* harmony import */ var _multicall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multicall.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js\");\n/* harmony import */ var _readContract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./readContract.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js\");\n\n\n\nasync function readContracts(config, parameters) {\n    const { allowFailure = true, blockNumber, blockTag, ...rest } = parameters;\n    const contracts = parameters.contracts;\n    try {\n        const contractsByChainId = {};\n        for (const [index, contract] of contracts.entries()){\n            const chainId = contract.chainId ?? config.state.chainId;\n            if (!contractsByChainId[chainId]) contractsByChainId[chainId] = [];\n            contractsByChainId[chainId]?.push({\n                contract,\n                index\n            });\n        }\n        const promises = ()=>Object.entries(contractsByChainId).map(([chainId, contracts])=>(0,_multicall_js__WEBPACK_IMPORTED_MODULE_0__.multicall)(config, {\n                    ...rest,\n                    allowFailure,\n                    blockNumber,\n                    blockTag,\n                    chainId: Number.parseInt(chainId),\n                    contracts: contracts.map(({ contract })=>contract)\n                }));\n        const multicallResults = (await Promise.all(promises())).flat();\n        // Reorder the contract results back to the order they were\n        // provided in.\n        const resultIndexes = Object.values(contractsByChainId).flatMap((contracts)=>contracts.map(({ index })=>index));\n        return multicallResults.reduce((results, result, index)=>{\n            if (results) results[resultIndexes[index]] = result;\n            return results;\n        }, []);\n    } catch (error) {\n        if (error instanceof viem__WEBPACK_IMPORTED_MODULE_1__.ContractFunctionExecutionError) throw error;\n        const promises = ()=>contracts.map((contract)=>(0,_readContract_js__WEBPACK_IMPORTED_MODULE_2__.readContract)(config, {\n                    ...contract,\n                    blockNumber,\n                    blockTag\n                }));\n        if (allowFailure) return (await Promise.allSettled(promises())).map((result)=>{\n            if (result.status === \"fulfilled\") return {\n                result: result.value,\n                status: \"success\"\n            };\n            return {\n                error: result.reason,\n                result: undefined,\n                status: \"failure\"\n            };\n        });\n        return await Promise.all(promises());\n    }\n} //# sourceMappingURL=readContracts.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9yZWFkQ29udHJhY3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0Q7QUFDWDtBQUNNO0FBQzFDLGVBQWVHLGNBQWNDLE1BQU0sRUFBRUMsVUFBVTtJQUNsRCxNQUFNLEVBQUVDLGVBQWUsSUFBSSxFQUFFQyxXQUFXLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxNQUFNLEdBQUdKO0lBQ2hFLE1BQU1LLFlBQVlMLFdBQVdLLFNBQVM7SUFDdEMsSUFBSTtRQUNBLE1BQU1DLHFCQUFxQixDQUFDO1FBQzVCLEtBQUssTUFBTSxDQUFDQyxPQUFPQyxTQUFTLElBQUlILFVBQVVJLE9BQU8sR0FBSTtZQUNqRCxNQUFNQyxVQUFVRixTQUFTRSxPQUFPLElBQUlYLE9BQU9ZLEtBQUssQ0FBQ0QsT0FBTztZQUN4RCxJQUFJLENBQUNKLGtCQUFrQixDQUFDSSxRQUFRLEVBQzVCSixrQkFBa0IsQ0FBQ0ksUUFBUSxHQUFHLEVBQUU7WUFDcENKLGtCQUFrQixDQUFDSSxRQUFRLEVBQUVFLEtBQUs7Z0JBQUVKO2dCQUFVRDtZQUFNO1FBQ3hEO1FBQ0EsTUFBTU0sV0FBVyxJQUFNQyxPQUFPTCxPQUFPLENBQUNILG9CQUFvQlMsR0FBRyxDQUFDLENBQUMsQ0FBQ0wsU0FBU0wsVUFBVSxHQUFLVCx3REFBU0EsQ0FBQ0csUUFBUTtvQkFDdEcsR0FBR0ssSUFBSTtvQkFDUEg7b0JBQ0FDO29CQUNBQztvQkFDQU8sU0FBU00sT0FBT0MsUUFBUSxDQUFDUDtvQkFDekJMLFdBQVdBLFVBQVVVLEdBQUcsQ0FBQyxDQUFDLEVBQUVQLFFBQVEsRUFBRSxHQUFLQTtnQkFDL0M7UUFDQSxNQUFNVSxtQkFBbUIsQ0FBQyxNQUFNQyxRQUFRQyxHQUFHLENBQUNQLFdBQVUsRUFBR1EsSUFBSTtRQUM3RCwyREFBMkQ7UUFDM0QsZUFBZTtRQUNmLE1BQU1DLGdCQUFnQlIsT0FBT1MsTUFBTSxDQUFDakIsb0JBQW9Ca0IsT0FBTyxDQUFDLENBQUNuQixZQUFjQSxVQUFVVSxHQUFHLENBQUMsQ0FBQyxFQUFFUixLQUFLLEVBQUUsR0FBS0E7UUFDNUcsT0FBT1csaUJBQWlCTyxNQUFNLENBQUMsQ0FBQ0MsU0FBU0MsUUFBUXBCO1lBQzdDLElBQUltQixTQUNBQSxPQUFPLENBQUNKLGFBQWEsQ0FBQ2YsTUFBTSxDQUFDLEdBQUdvQjtZQUNwQyxPQUFPRDtRQUNYLEdBQUcsRUFBRTtJQUNULEVBQ0EsT0FBT0UsT0FBTztRQUNWLElBQUlBLGlCQUFpQmpDLGdFQUE4QkEsRUFDL0MsTUFBTWlDO1FBQ1YsTUFBTWYsV0FBVyxJQUFNUixVQUFVVSxHQUFHLENBQUMsQ0FBQ1AsV0FBYVgsOERBQVlBLENBQUNFLFFBQVE7b0JBQUUsR0FBR1MsUUFBUTtvQkFBRU47b0JBQWFDO2dCQUFTO1FBQzdHLElBQUlGLGNBQ0EsT0FBTyxDQUFDLE1BQU1rQixRQUFRVSxVQUFVLENBQUNoQixXQUFVLEVBQUdFLEdBQUcsQ0FBQyxDQUFDWTtZQUMvQyxJQUFJQSxPQUFPRyxNQUFNLEtBQUssYUFDbEIsT0FBTztnQkFBRUgsUUFBUUEsT0FBT0ksS0FBSztnQkFBRUQsUUFBUTtZQUFVO1lBQ3JELE9BQU87Z0JBQUVGLE9BQU9ELE9BQU9LLE1BQU07Z0JBQUVMLFFBQVFNO2dCQUFXSCxRQUFRO1lBQVU7UUFDeEU7UUFDSixPQUFRLE1BQU1YLFFBQVFDLEdBQUcsQ0FBQ1A7SUFDOUI7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvcmVhZENvbnRyYWN0cy5qcz9mNTA0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRyYWN0RnVuY3Rpb25FeGVjdXRpb25FcnJvciB9IGZyb20gJ3ZpZW0nO1xuaW1wb3J0IHsgbXVsdGljYWxsIH0gZnJvbSAnLi9tdWx0aWNhbGwuanMnO1xuaW1wb3J0IHsgcmVhZENvbnRyYWN0IH0gZnJvbSAnLi9yZWFkQ29udHJhY3QuanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlYWRDb250cmFjdHMoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBhbGxvd0ZhaWx1cmUgPSB0cnVlLCBibG9ja051bWJlciwgYmxvY2tUYWcsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY29udHJhY3RzID0gcGFyYW1ldGVycy5jb250cmFjdHM7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgY29udHJhY3RzQnlDaGFpbklkID0ge307XG4gICAgICAgIGZvciAoY29uc3QgW2luZGV4LCBjb250cmFjdF0gb2YgY29udHJhY3RzLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgY29uc3QgY2hhaW5JZCA9IGNvbnRyYWN0LmNoYWluSWQgPz8gY29uZmlnLnN0YXRlLmNoYWluSWQ7XG4gICAgICAgICAgICBpZiAoIWNvbnRyYWN0c0J5Q2hhaW5JZFtjaGFpbklkXSlcbiAgICAgICAgICAgICAgICBjb250cmFjdHNCeUNoYWluSWRbY2hhaW5JZF0gPSBbXTtcbiAgICAgICAgICAgIGNvbnRyYWN0c0J5Q2hhaW5JZFtjaGFpbklkXT8ucHVzaCh7IGNvbnRyYWN0LCBpbmRleCB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9taXNlcyA9ICgpID0+IE9iamVjdC5lbnRyaWVzKGNvbnRyYWN0c0J5Q2hhaW5JZCkubWFwKChbY2hhaW5JZCwgY29udHJhY3RzXSkgPT4gbXVsdGljYWxsKGNvbmZpZywge1xuICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgIGFsbG93RmFpbHVyZSxcbiAgICAgICAgICAgIGJsb2NrTnVtYmVyLFxuICAgICAgICAgICAgYmxvY2tUYWcsXG4gICAgICAgICAgICBjaGFpbklkOiBOdW1iZXIucGFyc2VJbnQoY2hhaW5JZCksXG4gICAgICAgICAgICBjb250cmFjdHM6IGNvbnRyYWN0cy5tYXAoKHsgY29udHJhY3QgfSkgPT4gY29udHJhY3QpLFxuICAgICAgICB9KSk7XG4gICAgICAgIGNvbnN0IG11bHRpY2FsbFJlc3VsdHMgPSAoYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMoKSkpLmZsYXQoKTtcbiAgICAgICAgLy8gUmVvcmRlciB0aGUgY29udHJhY3QgcmVzdWx0cyBiYWNrIHRvIHRoZSBvcmRlciB0aGV5IHdlcmVcbiAgICAgICAgLy8gcHJvdmlkZWQgaW4uXG4gICAgICAgIGNvbnN0IHJlc3VsdEluZGV4ZXMgPSBPYmplY3QudmFsdWVzKGNvbnRyYWN0c0J5Q2hhaW5JZCkuZmxhdE1hcCgoY29udHJhY3RzKSA9PiBjb250cmFjdHMubWFwKCh7IGluZGV4IH0pID0+IGluZGV4KSk7XG4gICAgICAgIHJldHVybiBtdWx0aWNhbGxSZXN1bHRzLnJlZHVjZSgocmVzdWx0cywgcmVzdWx0LCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3VsdHMpXG4gICAgICAgICAgICAgICAgcmVzdWx0c1tyZXN1bHRJbmRleGVzW2luZGV4XV0gPSByZXN1bHQ7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgICAgfSwgW10pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQ29udHJhY3RGdW5jdGlvbkV4ZWN1dGlvbkVycm9yKVxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIGNvbnN0IHByb21pc2VzID0gKCkgPT4gY29udHJhY3RzLm1hcCgoY29udHJhY3QpID0+IHJlYWRDb250cmFjdChjb25maWcsIHsgLi4uY29udHJhY3QsIGJsb2NrTnVtYmVyLCBibG9ja1RhZyB9KSk7XG4gICAgICAgIGlmIChhbGxvd0ZhaWx1cmUpXG4gICAgICAgICAgICByZXR1cm4gKGF3YWl0IFByb21pc2UuYWxsU2V0dGxlZChwcm9taXNlcygpKSkubWFwKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gJ2Z1bGZpbGxlZCcpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHJlc3VsdDogcmVzdWx0LnZhbHVlLCBzdGF0dXM6ICdzdWNjZXNzJyB9O1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGVycm9yOiByZXN1bHQucmVhc29uLCByZXN1bHQ6IHVuZGVmaW5lZCwgc3RhdHVzOiAnZmFpbHVyZScgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKCkpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFkQ29udHJhY3RzLmpzLm1hcCJdLCJuYW1lcyI6WyJDb250cmFjdEZ1bmN0aW9uRXhlY3V0aW9uRXJyb3IiLCJtdWx0aWNhbGwiLCJyZWFkQ29udHJhY3QiLCJyZWFkQ29udHJhY3RzIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImFsbG93RmFpbHVyZSIsImJsb2NrTnVtYmVyIiwiYmxvY2tUYWciLCJyZXN0IiwiY29udHJhY3RzIiwiY29udHJhY3RzQnlDaGFpbklkIiwiaW5kZXgiLCJjb250cmFjdCIsImVudHJpZXMiLCJjaGFpbklkIiwic3RhdGUiLCJwdXNoIiwicHJvbWlzZXMiLCJPYmplY3QiLCJtYXAiLCJOdW1iZXIiLCJwYXJzZUludCIsIm11bHRpY2FsbFJlc3VsdHMiLCJQcm9taXNlIiwiYWxsIiwiZmxhdCIsInJlc3VsdEluZGV4ZXMiLCJ2YWx1ZXMiLCJmbGF0TWFwIiwicmVkdWNlIiwicmVzdWx0cyIsInJlc3VsdCIsImVycm9yIiwiYWxsU2V0dGxlZCIsInN0YXR1cyIsInZhbHVlIiwicmVhc29uIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/reconnect.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reconnect: () => (/* binding */ reconnect)\n/* harmony export */ });\nlet isReconnecting = false;\n/** https://wagmi.sh/core/api/actions/reconnect */ async function reconnect(config, parameters = {}) {\n    // If already reconnecting, do nothing\n    if (isReconnecting) return [];\n    isReconnecting = true;\n    config.setState((x)=>({\n            ...x,\n            status: x.current ? \"reconnecting\" : \"connecting\"\n        }));\n    const connectors = [];\n    if (parameters.connectors?.length) {\n        for (const connector_ of parameters.connectors){\n            let connector;\n            // \"Register\" connector if not already created\n            if (typeof connector_ === \"function\") connector = config._internal.connectors.setup(connector_);\n            else connector = connector_;\n            connectors.push(connector);\n        }\n    } else connectors.push(...config.connectors);\n    // Try recently-used connectors first\n    let recentConnectorId;\n    try {\n        recentConnectorId = await config.storage?.getItem(\"recentConnectorId\");\n    } catch  {}\n    const scores = {};\n    for (const [, connection] of config.state.connections){\n        scores[connection.connector.id] = 1;\n    }\n    if (recentConnectorId) scores[recentConnectorId] = 0;\n    const sorted = Object.keys(scores).length > 0 ? [\n        ...connectors\n    ].sort((a, b)=>(scores[a.id] ?? 10) - (scores[b.id] ?? 10)) : connectors;\n    // Iterate through each connector and try to connect\n    let connected = false;\n    const connections = [];\n    const providers = [];\n    for (const connector of sorted){\n        const provider = await connector.getProvider().catch(()=>undefined);\n        if (!provider) continue;\n        // If we already have an instance of this connector's provider,\n        // then we have already checked it (ie. injected connectors can\n        // share the same `window.ethereum` instance, so we don't want to\n        // connect to it again).\n        if (providers.some((x)=>x === provider)) continue;\n        const isAuthorized = await connector.isAuthorized();\n        if (!isAuthorized) continue;\n        const data = await connector.connect({\n            isReconnecting: true\n        }).catch(()=>null);\n        if (!data) continue;\n        connector.emitter.off(\"connect\", config._internal.events.connect);\n        connector.emitter.on(\"change\", config._internal.events.change);\n        connector.emitter.on(\"disconnect\", config._internal.events.disconnect);\n        config.setState((x)=>{\n            const connections = new Map(connected ? x.connections : new Map()).set(connector.uid, {\n                accounts: data.accounts,\n                chainId: data.chainId,\n                connector\n            });\n            return {\n                ...x,\n                current: connected ? x.current : connector.uid,\n                connections\n            };\n        });\n        connections.push({\n            accounts: data.accounts,\n            chainId: data.chainId,\n            connector\n        });\n        providers.push(provider);\n        connected = true;\n    }\n    // Prevent overwriting connected status from race condition\n    if (config.state.status === \"reconnecting\" || config.state.status === \"connecting\") {\n        // If connecting didn't succeed, set to disconnected\n        if (!connected) config.setState((x)=>({\n                ...x,\n                connections: new Map(),\n                current: null,\n                status: \"disconnected\"\n            }));\n        else config.setState((x)=>({\n                ...x,\n                status: \"connected\"\n            }));\n    }\n    isReconnecting = false;\n    return connections;\n} //# sourceMappingURL=reconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/signMessage.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/signMessage.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signMessage: () => (/* binding */ signMessage)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/wallet/signMessage.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/signMessage */ async function signMessage(config, parameters) {\n    const { account, connector, ...rest } = parameters;\n    let client;\n    if (typeof account === \"object\" && account.type === \"local\") client = config.getClient();\n    else client = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, {\n        account,\n        connector\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.signMessage, \"signMessage\");\n    return action({\n        ...rest,\n        ...account ? {\n            account\n        } : {}\n    });\n} //# sourceMappingURL=signMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zaWduTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdFO0FBQ2Q7QUFDWTtBQUM5RCxrREFBa0QsR0FDM0MsZUFBZUEsWUFBWUksTUFBTSxFQUFFQyxVQUFVO0lBQ2hELE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUUsR0FBR0MsTUFBTSxHQUFHSDtJQUN4QyxJQUFJSTtJQUNKLElBQUksT0FBT0gsWUFBWSxZQUFZQSxRQUFRSSxJQUFJLEtBQUssU0FDaERELFNBQVNMLE9BQU9PLFNBQVM7U0FFekJGLFNBQVMsTUFBTU4sMEVBQWtCQSxDQUFDQyxRQUFRO1FBQUVFO1FBQVNDO0lBQVU7SUFDbkUsTUFBTUssU0FBU1YsOERBQVNBLENBQUNPLFFBQVFSLHFEQUFnQkEsRUFBRTtJQUNuRCxPQUFPVyxPQUFPO1FBQ1YsR0FBR0osSUFBSTtRQUNQLEdBQUlGLFVBQVU7WUFBRUE7UUFBUSxJQUFJLENBQUMsQ0FBQztJQUNsQztBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zaWduTWVzc2FnZS5qcz80ZmY1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNpZ25NZXNzYWdlIGFzIHZpZW1fc2lnbk1lc3NhZ2UsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG5pbXBvcnQgeyBnZXRDb25uZWN0b3JDbGllbnQsIH0gZnJvbSAnLi9nZXRDb25uZWN0b3JDbGllbnQuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9zaWduTWVzc2FnZSAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25NZXNzYWdlKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgYWNjb3VudCwgY29ubmVjdG9yLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGxldCBjbGllbnQ7XG4gICAgaWYgKHR5cGVvZiBhY2NvdW50ID09PSAnb2JqZWN0JyAmJiBhY2NvdW50LnR5cGUgPT09ICdsb2NhbCcpXG4gICAgICAgIGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoKTtcbiAgICBlbHNlXG4gICAgICAgIGNsaWVudCA9IGF3YWl0IGdldENvbm5lY3RvckNsaWVudChjb25maWcsIHsgYWNjb3VudCwgY29ubmVjdG9yIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fc2lnbk1lc3NhZ2UsICdzaWduTWVzc2FnZScpO1xuICAgIHJldHVybiBhY3Rpb24oe1xuICAgICAgICAuLi5yZXN0LFxuICAgICAgICAuLi4oYWNjb3VudCA/IHsgYWNjb3VudCB9IDoge30pLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbk1lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbInNpZ25NZXNzYWdlIiwidmllbV9zaWduTWVzc2FnZSIsImdldEFjdGlvbiIsImdldENvbm5lY3RvckNsaWVudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJhY2NvdW50IiwiY29ubmVjdG9yIiwicmVzdCIsImNsaWVudCIsInR5cGUiLCJnZXRDbGllbnQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/signMessage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/switchChain.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/switchChain.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   switchChain: () => (/* binding */ switchChain)\n/* harmony export */ });\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _errors_connector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/connector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n\n\n/** https://wagmi.sh/core/api/actions/switchChain */ async function switchChain(config, parameters) {\n    const { addEthereumChainParameter, chainId } = parameters;\n    const connection = config.state.connections.get(parameters.connector?.uid ?? config.state.current);\n    if (connection) {\n        const connector = connection.connector;\n        if (!connector.switchChain) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_0__.SwitchChainNotSupportedError({\n            connector\n        });\n        const chain = await connector.switchChain({\n            addEthereumChainParameter,\n            chainId\n        });\n        return chain;\n    }\n    const chain = config.chains.find((x)=>x.id === chainId);\n    if (!chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_1__.ChainNotConfiguredError();\n    config.setState((x)=>({\n            ...x,\n            chainId\n        }));\n    return chain;\n} //# sourceMappingURL=switchChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zd2l0Y2hDaGFpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0Q7QUFDUTtBQUN2RSxrREFBa0QsR0FDM0MsZUFBZUUsWUFBWUMsTUFBTSxFQUFFQyxVQUFVO0lBQ2hELE1BQU0sRUFBRUMseUJBQXlCLEVBQUVDLE9BQU8sRUFBRSxHQUFHRjtJQUMvQyxNQUFNRyxhQUFhSixPQUFPSyxLQUFLLENBQUNDLFdBQVcsQ0FBQ0MsR0FBRyxDQUFDTixXQUFXTyxTQUFTLEVBQUVDLE9BQU9ULE9BQU9LLEtBQUssQ0FBQ0ssT0FBTztJQUNqRyxJQUFJTixZQUFZO1FBQ1osTUFBTUksWUFBWUosV0FBV0ksU0FBUztRQUN0QyxJQUFJLENBQUNBLFVBQVVULFdBQVcsRUFDdEIsTUFBTSxJQUFJRCw4RUFBNEJBLENBQUM7WUFBRVU7UUFBVTtRQUN2RCxNQUFNRyxRQUFRLE1BQU1ILFVBQVVULFdBQVcsQ0FBQztZQUN0Q0c7WUFDQUM7UUFDSjtRQUNBLE9BQU9RO0lBQ1g7SUFDQSxNQUFNQSxRQUFRWCxPQUFPWSxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxFQUFFLEtBQUtaO0lBQ2pELElBQUksQ0FBQ1EsT0FDRCxNQUFNLElBQUlkLHNFQUF1QkE7SUFDckNHLE9BQU9nQixRQUFRLENBQUMsQ0FBQ0YsSUFBTztZQUFFLEdBQUdBLENBQUM7WUFBRVg7UUFBUTtJQUN4QyxPQUFPUTtBQUNYLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zd2l0Y2hDaGFpbi5qcz85MTZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYWluTm90Q29uZmlndXJlZEVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy9jb25maWcuanMnO1xuaW1wb3J0IHsgU3dpdGNoQ2hhaW5Ob3RTdXBwb3J0ZWRFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMvY29ubmVjdG9yLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvc3dpdGNoQ2hhaW4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzd2l0Y2hDaGFpbihjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGFkZEV0aGVyZXVtQ2hhaW5QYXJhbWV0ZXIsIGNoYWluSWQgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY29ubmVjdGlvbiA9IGNvbmZpZy5zdGF0ZS5jb25uZWN0aW9ucy5nZXQocGFyYW1ldGVycy5jb25uZWN0b3I/LnVpZCA/PyBjb25maWcuc3RhdGUuY3VycmVudCk7XG4gICAgaWYgKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgY29uc3QgY29ubmVjdG9yID0gY29ubmVjdGlvbi5jb25uZWN0b3I7XG4gICAgICAgIGlmICghY29ubmVjdG9yLnN3aXRjaENoYWluKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFN3aXRjaENoYWluTm90U3VwcG9ydGVkRXJyb3IoeyBjb25uZWN0b3IgfSk7XG4gICAgICAgIGNvbnN0IGNoYWluID0gYXdhaXQgY29ubmVjdG9yLnN3aXRjaENoYWluKHtcbiAgICAgICAgICAgIGFkZEV0aGVyZXVtQ2hhaW5QYXJhbWV0ZXIsXG4gICAgICAgICAgICBjaGFpbklkLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGNoYWluO1xuICAgIH1cbiAgICBjb25zdCBjaGFpbiA9IGNvbmZpZy5jaGFpbnMuZmluZCgoeCkgPT4geC5pZCA9PT0gY2hhaW5JZCk7XG4gICAgaWYgKCFjaGFpbilcbiAgICAgICAgdGhyb3cgbmV3IENoYWluTm90Q29uZmlndXJlZEVycm9yKCk7XG4gICAgY29uZmlnLnNldFN0YXRlKCh4KSA9PiAoeyAuLi54LCBjaGFpbklkIH0pKTtcbiAgICByZXR1cm4gY2hhaW47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zd2l0Y2hDaGFpbi5qcy5tYXAiXSwibmFtZXMiOlsiQ2hhaW5Ob3RDb25maWd1cmVkRXJyb3IiLCJTd2l0Y2hDaGFpbk5vdFN1cHBvcnRlZEVycm9yIiwic3dpdGNoQ2hhaW4iLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiYWRkRXRoZXJldW1DaGFpblBhcmFtZXRlciIsImNoYWluSWQiLCJjb25uZWN0aW9uIiwic3RhdGUiLCJjb25uZWN0aW9ucyIsImdldCIsImNvbm5lY3RvciIsInVpZCIsImN1cnJlbnQiLCJjaGFpbiIsImNoYWlucyIsImZpbmQiLCJ4IiwiaWQiLCJzZXRTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/switchChain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   waitForTransactionReceipt: () => (/* binding */ waitForTransactionReceipt)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/getTransaction.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/call.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n\nasync function waitForTransactionReceipt(config, parameters) {\n    const { chainId, timeout = 0, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.waitForTransactionReceipt, \"waitForTransactionReceipt\");\n    const receipt = await action({\n        ...rest,\n        timeout\n    });\n    if (receipt.status === \"reverted\") {\n        const action_getTransaction = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.getTransaction, \"getTransaction\");\n        const txn = await action_getTransaction({\n            hash: receipt.transactionHash\n        });\n        const action_call = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_3__.call, \"call\");\n        const code = await action_call({\n            ...txn,\n            data: txn.input,\n            gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : undefined,\n            maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : undefined,\n            maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : undefined\n        });\n        const reason = code?.data ? (0,viem__WEBPACK_IMPORTED_MODULE_4__.hexToString)(`0x${code.data.substring(138)}`) : \"unknown reason\";\n        throw new Error(reason);\n    }\n    return {\n        ...receipt,\n        chainId: client.chain.id\n    };\n} //# sourceMappingURL=waitForTransactionReceipt.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFtQztBQUMrRTtBQUNoRTtBQUMzQyxlQUFlRywwQkFBMEJHLE1BQU0sRUFBRUMsVUFBVTtJQUM5RCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsVUFBVSxDQUFDLEVBQUUsR0FBR0MsTUFBTSxHQUFHSDtJQUMxQyxNQUFNSSxTQUFTTCxPQUFPTSxTQUFTLENBQUM7UUFBRUo7SUFBUTtJQUMxQyxNQUFNSyxTQUFTUiw4REFBU0EsQ0FBQ00sUUFBUVAsbUVBQThCQSxFQUFFO0lBQ2pFLE1BQU1VLFVBQVUsTUFBTUQsT0FBTztRQUFFLEdBQUdILElBQUk7UUFBRUQ7SUFBUTtJQUNoRCxJQUFJSyxRQUFRQyxNQUFNLEtBQUssWUFBWTtRQUMvQixNQUFNQyx3QkFBd0JYLDhEQUFTQSxDQUFDTSxRQUFRVCx3REFBY0EsRUFBRTtRQUNoRSxNQUFNZSxNQUFNLE1BQU1ELHNCQUFzQjtZQUFFRSxNQUFNSixRQUFRSyxlQUFlO1FBQUM7UUFDeEUsTUFBTUMsY0FBY2YsOERBQVNBLENBQUNNLFFBQVFWLDhDQUFJQSxFQUFFO1FBQzVDLE1BQU1vQixPQUFPLE1BQU1ELFlBQVk7WUFDM0IsR0FBR0gsR0FBRztZQUNOSyxNQUFNTCxJQUFJTSxLQUFLO1lBQ2ZDLFVBQVVQLElBQUlRLElBQUksS0FBSyxZQUFZUixJQUFJTyxRQUFRLEdBQUdFO1lBQ2xEQyxjQUFjVixJQUFJUSxJQUFJLEtBQUssWUFBWVIsSUFBSVUsWUFBWSxHQUFHRDtZQUMxREUsc0JBQXNCWCxJQUFJUSxJQUFJLEtBQUssWUFBWVIsSUFBSVcsb0JBQW9CLEdBQUdGO1FBQzlFO1FBQ0EsTUFBTUcsU0FBU1IsTUFBTUMsT0FDZnRCLGlEQUFXQSxDQUFDLENBQUMsRUFBRSxFQUFFcUIsS0FBS0MsSUFBSSxDQUFDUSxTQUFTLENBQUMsS0FBSyxDQUFDLElBQzNDO1FBQ04sTUFBTSxJQUFJQyxNQUFNRjtJQUNwQjtJQUNBLE9BQU87UUFDSCxHQUFHZixPQUFPO1FBQ1ZOLFNBQVNHLE9BQU9xQixLQUFLLENBQUNDLEVBQUU7SUFDNUI7QUFDSixFQUNBLHFEQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdC5qcz84MzVjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhleFRvU3RyaW5nIH0gZnJvbSAndmllbSc7XG5pbXBvcnQgeyBjYWxsLCBnZXRUcmFuc2FjdGlvbiwgd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCBhcyB2aWVtX3dhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHQsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGNoYWluSWQsIHRpbWVvdXQgPSAwLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCwgJ3dhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHQnKTtcbiAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgYWN0aW9uKHsgLi4ucmVzdCwgdGltZW91dCB9KTtcbiAgICBpZiAocmVjZWlwdC5zdGF0dXMgPT09ICdyZXZlcnRlZCcpIHtcbiAgICAgICAgY29uc3QgYWN0aW9uX2dldFRyYW5zYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgZ2V0VHJhbnNhY3Rpb24sICdnZXRUcmFuc2FjdGlvbicpO1xuICAgICAgICBjb25zdCB0eG4gPSBhd2FpdCBhY3Rpb25fZ2V0VHJhbnNhY3Rpb24oeyBoYXNoOiByZWNlaXB0LnRyYW5zYWN0aW9uSGFzaCB9KTtcbiAgICAgICAgY29uc3QgYWN0aW9uX2NhbGwgPSBnZXRBY3Rpb24oY2xpZW50LCBjYWxsLCAnY2FsbCcpO1xuICAgICAgICBjb25zdCBjb2RlID0gYXdhaXQgYWN0aW9uX2NhbGwoe1xuICAgICAgICAgICAgLi4udHhuLFxuICAgICAgICAgICAgZGF0YTogdHhuLmlucHV0LFxuICAgICAgICAgICAgZ2FzUHJpY2U6IHR4bi50eXBlICE9PSAnZWlwMTU1OScgPyB0eG4uZ2FzUHJpY2UgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBtYXhGZWVQZXJHYXM6IHR4bi50eXBlID09PSAnZWlwMTU1OScgPyB0eG4ubWF4RmVlUGVyR2FzIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgbWF4UHJpb3JpdHlGZWVQZXJHYXM6IHR4bi50eXBlID09PSAnZWlwMTU1OScgPyB0eG4ubWF4UHJpb3JpdHlGZWVQZXJHYXMgOiB1bmRlZmluZWQsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCByZWFzb24gPSBjb2RlPy5kYXRhXG4gICAgICAgICAgICA/IGhleFRvU3RyaW5nKGAweCR7Y29kZS5kYXRhLnN1YnN0cmluZygxMzgpfWApXG4gICAgICAgICAgICA6ICd1bmtub3duIHJlYXNvbic7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihyZWFzb24pO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5yZWNlaXB0LFxuICAgICAgICBjaGFpbklkOiBjbGllbnQuY2hhaW4uaWQsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHQuanMubWFwIl0sIm5hbWVzIjpbImhleFRvU3RyaW5nIiwiY2FsbCIsImdldFRyYW5zYWN0aW9uIiwid2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCIsInZpZW1fd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCIsImdldEFjdGlvbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjaGFpbklkIiwidGltZW91dCIsInJlc3QiLCJjbGllbnQiLCJnZXRDbGllbnQiLCJhY3Rpb24iLCJyZWNlaXB0Iiwic3RhdHVzIiwiYWN0aW9uX2dldFRyYW5zYWN0aW9uIiwidHhuIiwiaGFzaCIsInRyYW5zYWN0aW9uSGFzaCIsImFjdGlvbl9jYWxsIiwiY29kZSIsImRhdGEiLCJpbnB1dCIsImdhc1ByaWNlIiwidHlwZSIsInVuZGVmaW5lZCIsIm1heEZlZVBlckdhcyIsIm1heFByaW9yaXR5RmVlUGVyR2FzIiwicmVhc29uIiwic3Vic3RyaW5nIiwiRXJyb3IiLCJjaGFpbiIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchAccount: () => (/* binding */ watchAccount)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n/* harmony import */ var _getAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getAccount.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js\");\n\n\n/** https://wagmi.sh/core/api/actions/watchAccount */ function watchAccount(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe(()=>(0,_getAccount_js__WEBPACK_IMPORTED_MODULE_0__.getAccount)(config), onChange, {\n        equalityFn (a, b) {\n            const { connector: aConnector, ...aRest } = a;\n            const { connector: bConnector, ...bRest } = b;\n            return (0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__.deepEqual)(aRest, bRest) && // check connector separately\n            aConnector?.id === bConnector?.id && aConnector?.uid === bConnector?.uid;\n        }\n    });\n} //# sourceMappingURL=watchAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaEFjY291bnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ0w7QUFDN0MsbURBQW1ELEdBQzVDLFNBQVNFLGFBQWFDLE1BQU0sRUFBRUMsVUFBVTtJQUMzQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUMsSUFBTUwsMERBQVVBLENBQUNFLFNBQVNFLFVBQVU7UUFDeERFLFlBQVdDLENBQUMsRUFBRUMsQ0FBQztZQUNYLE1BQU0sRUFBRUMsV0FBV0MsVUFBVSxFQUFFLEdBQUdDLE9BQU8sR0FBR0o7WUFDNUMsTUFBTSxFQUFFRSxXQUFXRyxVQUFVLEVBQUUsR0FBR0MsT0FBTyxHQUFHTDtZQUM1QyxPQUFRVCw4REFBU0EsQ0FBQ1ksT0FBT0UsVUFDckIsNkJBQTZCO1lBQzdCSCxZQUFZSSxPQUFPRixZQUFZRSxNQUMvQkosWUFBWUssUUFBUUgsWUFBWUc7UUFDeEM7SUFDSjtBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaEFjY291bnQuanM/N2I0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWVwRXF1YWwgfSBmcm9tICcuLi91dGlscy9kZWVwRXF1YWwuanMnO1xuaW1wb3J0IHsgZ2V0QWNjb3VudCB9IGZyb20gJy4vZ2V0QWNjb3VudC5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3dhdGNoQWNjb3VudCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoQWNjb3VudChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IG9uQ2hhbmdlIH0gPSBwYXJhbWV0ZXJzO1xuICAgIHJldHVybiBjb25maWcuc3Vic2NyaWJlKCgpID0+IGdldEFjY291bnQoY29uZmlnKSwgb25DaGFuZ2UsIHtcbiAgICAgICAgZXF1YWxpdHlGbihhLCBiKSB7XG4gICAgICAgICAgICBjb25zdCB7IGNvbm5lY3RvcjogYUNvbm5lY3RvciwgLi4uYVJlc3QgfSA9IGE7XG4gICAgICAgICAgICBjb25zdCB7IGNvbm5lY3RvcjogYkNvbm5lY3RvciwgLi4uYlJlc3QgfSA9IGI7XG4gICAgICAgICAgICByZXR1cm4gKGRlZXBFcXVhbChhUmVzdCwgYlJlc3QpICYmXG4gICAgICAgICAgICAgICAgLy8gY2hlY2sgY29ubmVjdG9yIHNlcGFyYXRlbHlcbiAgICAgICAgICAgICAgICBhQ29ubmVjdG9yPy5pZCA9PT0gYkNvbm5lY3Rvcj8uaWQgJiZcbiAgICAgICAgICAgICAgICBhQ29ubmVjdG9yPy51aWQgPT09IGJDb25uZWN0b3I/LnVpZCk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaEFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbImRlZXBFcXVhbCIsImdldEFjY291bnQiLCJ3YXRjaEFjY291bnQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwib25DaGFuZ2UiLCJzdWJzY3JpYmUiLCJlcXVhbGl0eUZuIiwiYSIsImIiLCJjb25uZWN0b3IiLCJhQ29ubmVjdG9yIiwiYVJlc3QiLCJiQ29ubmVjdG9yIiwiYlJlc3QiLCJpZCIsInVpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchChainId.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchChainId.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchChainId: () => (/* binding */ watchChainId)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/watchChainId */ function watchChainId(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe((state)=>state.chainId, onChange);\n} //# sourceMappingURL=watchChainId.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENoYWluSWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLG1EQUFtRCxHQUM1QyxTQUFTQSxhQUFhQyxNQUFNLEVBQUVDLFVBQVU7SUFDM0MsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0Q7SUFDckIsT0FBT0QsT0FBT0csU0FBUyxDQUFDLENBQUNDLFFBQVVBLE1BQU1DLE9BQU8sRUFBRUg7QUFDdEQsRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3dhdGNoQ2hhaW5JZC5qcz9kMDU1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvd2F0Y2hDaGFpbklkICovXG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hDaGFpbklkKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHBhcmFtZXRlcnM7XG4gICAgcmV0dXJuIGNvbmZpZy5zdWJzY3JpYmUoKHN0YXRlKSA9PiBzdGF0ZS5jaGFpbklkLCBvbkNoYW5nZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaENoYWluSWQuanMubWFwIl0sIm5hbWVzIjpbIndhdGNoQ2hhaW5JZCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJvbkNoYW5nZSIsInN1YnNjcmliZSIsInN0YXRlIiwiY2hhaW5JZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchChainId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchChains.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchChains.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchChains: () => (/* binding */ watchChains)\n/* harmony export */ });\n/**\n * @internal\n * We don't expose this because as far as consumers know, you can't chainge (lol) `config.chains` at runtime.\n * Setting `config.chains` via `config._internal.chains.setState(...)` is an extremely advanced use case that's not worth documenting or supporting in the public API at this time.\n */ function watchChains(config, parameters) {\n    const { onChange } = parameters;\n    return config._internal.chains.subscribe((chains, prevChains)=>{\n        onChange(chains, prevChains);\n    });\n} //# sourceMappingURL=watchChains.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENoYWlucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUNNLFNBQVNBLFlBQVlDLE1BQU0sRUFBRUMsVUFBVTtJQUMxQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUNDLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDLENBQUNELFFBQVFFO1FBQzlDSixTQUFTRSxRQUFRRTtJQUNyQjtBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENoYWlucy5qcz82OGNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGludGVybmFsXG4gKiBXZSBkb24ndCBleHBvc2UgdGhpcyBiZWNhdXNlIGFzIGZhciBhcyBjb25zdW1lcnMga25vdywgeW91IGNhbid0IGNoYWluZ2UgKGxvbCkgYGNvbmZpZy5jaGFpbnNgIGF0IHJ1bnRpbWUuXG4gKiBTZXR0aW5nIGBjb25maWcuY2hhaW5zYCB2aWEgYGNvbmZpZy5faW50ZXJuYWwuY2hhaW5zLnNldFN0YXRlKC4uLilgIGlzIGFuIGV4dHJlbWVseSBhZHZhbmNlZCB1c2UgY2FzZSB0aGF0J3Mgbm90IHdvcnRoIGRvY3VtZW50aW5nIG9yIHN1cHBvcnRpbmcgaW4gdGhlIHB1YmxpYyBBUEkgYXQgdGhpcyB0aW1lLlxuICovXG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hDaGFpbnMoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBvbkNoYW5nZSB9ID0gcGFyYW1ldGVycztcbiAgICByZXR1cm4gY29uZmlnLl9pbnRlcm5hbC5jaGFpbnMuc3Vic2NyaWJlKChjaGFpbnMsIHByZXZDaGFpbnMpID0+IHtcbiAgICAgICAgb25DaGFuZ2UoY2hhaW5zLCBwcmV2Q2hhaW5zKTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoQ2hhaW5zLmpzLm1hcCJdLCJuYW1lcyI6WyJ3YXRjaENoYWlucyIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJvbkNoYW5nZSIsIl9pbnRlcm5hbCIsImNoYWlucyIsInN1YnNjcmliZSIsInByZXZDaGFpbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchChains.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnections.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchConnections.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchConnections: () => (/* binding */ watchConnections)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n/* harmony import */ var _getConnections_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnections.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnections.js\");\n\n\n/** https://wagmi.sh/core/api/actions/watchConnections */ function watchConnections(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe(()=>(0,_getConnections_js__WEBPACK_IMPORTED_MODULE_0__.getConnections)(config), onChange, {\n        equalityFn: _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__.deepEqual\n    });\n} //# sourceMappingURL=watchConnections.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbm5lY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRDtBQUNJO0FBQ3RELHVEQUF1RCxHQUNoRCxTQUFTRSxpQkFBaUJDLE1BQU0sRUFBRUMsVUFBVTtJQUMvQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUMsSUFBTUwsa0VBQWNBLENBQUNFLFNBQVNFLFVBQVU7UUFDNURFLFlBQVlQLDBEQUFTQTtJQUN6QjtBQUNKLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbm5lY3Rpb25zLmpzPzY5ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVlcEVxdWFsIH0gZnJvbSAnLi4vdXRpbHMvZGVlcEVxdWFsLmpzJztcbmltcG9ydCB7IGdldENvbm5lY3Rpb25zLCB9IGZyb20gJy4vZ2V0Q29ubmVjdGlvbnMuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy93YXRjaENvbm5lY3Rpb25zICovXG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hDb25uZWN0aW9ucyhjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IG9uQ2hhbmdlIH0gPSBwYXJhbWV0ZXJzO1xuICAgIHJldHVybiBjb25maWcuc3Vic2NyaWJlKCgpID0+IGdldENvbm5lY3Rpb25zKGNvbmZpZyksIG9uQ2hhbmdlLCB7XG4gICAgICAgIGVxdWFsaXR5Rm46IGRlZXBFcXVhbCxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoQ29ubmVjdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbImRlZXBFcXVhbCIsImdldENvbm5lY3Rpb25zIiwid2F0Y2hDb25uZWN0aW9ucyIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJvbkNoYW5nZSIsInN1YnNjcmliZSIsImVxdWFsaXR5Rm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnections.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchConnectors: () => (/* binding */ watchConnectors)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/watchConnectors */ function watchConnectors(config, parameters) {\n    const { onChange } = parameters;\n    return config._internal.connectors.subscribe((connectors, prevConnectors)=>{\n        onChange(Object.values(connectors), prevConnectors);\n    });\n} //# sourceMappingURL=watchConnectors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbm5lY3RvcnMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNEQUFzRCxHQUMvQyxTQUFTQSxnQkFBZ0JDLE1BQU0sRUFBRUMsVUFBVTtJQUM5QyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUNDLFVBQVUsQ0FBQ0MsU0FBUyxDQUFDLENBQUNELFlBQVlFO1FBQ3RESixTQUFTSyxPQUFPQyxNQUFNLENBQUNKLGFBQWFFO0lBQ3hDO0FBQ0osRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3dhdGNoQ29ubmVjdG9ycy5qcz8zNmUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvd2F0Y2hDb25uZWN0b3JzICovXG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hDb25uZWN0b3JzKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHBhcmFtZXRlcnM7XG4gICAgcmV0dXJuIGNvbmZpZy5faW50ZXJuYWwuY29ubmVjdG9ycy5zdWJzY3JpYmUoKGNvbm5lY3RvcnMsIHByZXZDb25uZWN0b3JzKSA9PiB7XG4gICAgICAgIG9uQ2hhbmdlKE9iamVjdC52YWx1ZXMoY29ubmVjdG9ycyksIHByZXZDb25uZWN0b3JzKTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoQ29ubmVjdG9ycy5qcy5tYXAiXSwibmFtZXMiOlsid2F0Y2hDb25uZWN0b3JzIiwiY29uZmlnIiwicGFyYW1ldGVycyIsIm9uQ2hhbmdlIiwiX2ludGVybmFsIiwiY29ubmVjdG9ycyIsInN1YnNjcmliZSIsInByZXZDb25uZWN0b3JzIiwiT2JqZWN0IiwidmFsdWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchPublicClient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchPublicClient.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchPublicClient: () => (/* binding */ watchPublicClient)\n/* harmony export */ });\n/* harmony import */ var _getPublicClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getPublicClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getPublicClient.js\");\n\n/** https://wagmi.sh/core/api/actions/watchPublicClient */ function watchPublicClient(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe(()=>(0,_getPublicClient_js__WEBPACK_IMPORTED_MODULE_0__.getPublicClient)(config), onChange, {\n        equalityFn (a, b) {\n            return a?.uid === b?.uid;\n        }\n    });\n} //# sourceMappingURL=watchPublicClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaFB1YmxpY0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RDtBQUN4RCx3REFBd0QsR0FDakQsU0FBU0Msa0JBQWtCQyxNQUFNLEVBQUVDLFVBQVU7SUFDaEQsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0Q7SUFDckIsT0FBT0QsT0FBT0csU0FBUyxDQUFDLElBQU1MLG9FQUFlQSxDQUFDRSxTQUFTRSxVQUFVO1FBQzdERSxZQUFXQyxDQUFDLEVBQUVDLENBQUM7WUFDWCxPQUFPRCxHQUFHRSxRQUFRRCxHQUFHQztRQUN6QjtJQUNKO0FBQ0osRUFDQSw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3dhdGNoUHVibGljQ2xpZW50LmpzPzFjNjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0UHVibGljQ2xpZW50LCB9IGZyb20gJy4vZ2V0UHVibGljQ2xpZW50LmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvd2F0Y2hQdWJsaWNDbGllbnQgKi9cbmV4cG9ydCBmdW5jdGlvbiB3YXRjaFB1YmxpY0NsaWVudChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IG9uQ2hhbmdlIH0gPSBwYXJhbWV0ZXJzO1xuICAgIHJldHVybiBjb25maWcuc3Vic2NyaWJlKCgpID0+IGdldFB1YmxpY0NsaWVudChjb25maWcpLCBvbkNoYW5nZSwge1xuICAgICAgICBlcXVhbGl0eUZuKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBhPy51aWQgPT09IGI/LnVpZDtcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoUHVibGljQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRQdWJsaWNDbGllbnQiLCJ3YXRjaFB1YmxpY0NsaWVudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJvbkNoYW5nZSIsInN1YnNjcmliZSIsImVxdWFsaXR5Rm4iLCJhIiwiYiIsInVpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchPublicClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnector: () => (/* binding */ createConnector)\n/* harmony export */ });\nfunction createConnector(createConnectorFn) {\n    return createConnectorFn;\n} //# sourceMappingURL=createConnector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY29ubmVjdG9ycy9jcmVhdGVDb25uZWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGdCQUFnQkMsaUJBQWlCO0lBQzdDLE9BQU9BO0FBQ1gsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9jb25uZWN0b3JzL2NyZWF0ZUNvbm5lY3Rvci5qcz8xOGU4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0b3IoY3JlYXRlQ29ubmVjdG9yRm4pIHtcbiAgICByZXR1cm4gY3JlYXRlQ29ubmVjdG9yRm47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVDb25uZWN0b3IuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUNvbm5lY3RvciIsImNyZWF0ZUNvbm5lY3RvckZuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/connectors/injected.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   injected: () => (/* binding */ injected)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withTimeout.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withRetry.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/connector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n/* harmony import */ var _createConnector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createConnector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n\n\n\n\ninjected.type = \"injected\";\nfunction injected(parameters = {}) {\n    const { shimDisconnect = true, unstable_shimAsyncInject } = parameters;\n    function getTarget() {\n        const target = parameters.target;\n        if (typeof target === \"function\") {\n            const result = target();\n            if (result) return result;\n        }\n        if (typeof target === \"object\") return target;\n        if (typeof target === \"string\") return {\n            ...targetMap[target] ?? {\n                id: target,\n                name: `${target[0].toUpperCase()}${target.slice(1)}`,\n                provider: `is${target[0].toUpperCase()}${target.slice(1)}`\n            }\n        };\n        return {\n            id: \"injected\",\n            name: \"Injected\",\n            provider (window1) {\n                return window1?.ethereum;\n            }\n        };\n    }\n    let accountsChanged;\n    let chainChanged;\n    let connect;\n    let disconnect;\n    return (0,_createConnector_js__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            get icon () {\n                return getTarget().icon;\n            },\n            get id () {\n                return getTarget().id;\n            },\n            get name () {\n                return getTarget().name;\n            },\n            /** @deprecated */ get supportsSimulation () {\n                return true;\n            },\n            type: injected.type,\n            async setup () {\n                const provider = await this.getProvider();\n                // Only start listening for events if `target` is set, otherwise `injected()` will also receive events\n                if (provider?.on && parameters.target) {\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider.on(\"connect\", connect);\n                    }\n                    // We shouldn't need to listen for `'accountsChanged'` here since the `'connect'` event should suffice (and wallet shouldn't be connected yet).\n                    // Some wallets, like MetaMask, do not implement the `'connect'` event and overload `'accountsChanged'` instead.\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                }\n            },\n            async connect ({ chainId, isReconnecting } = {}) {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                let accounts = [];\n                if (isReconnecting) accounts = await this.getAccounts().catch(()=>[]);\n                else if (shimDisconnect) {\n                    // Attempt to show another prompt for selecting account if `shimDisconnect` flag is enabled\n                    try {\n                        const permissions = await provider.request({\n                            method: \"wallet_requestPermissions\",\n                            params: [\n                                {\n                                    eth_accounts: {}\n                                }\n                            ]\n                        });\n                        accounts = permissions[0]?.caveats?.[0]?.value?.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n                        // `'wallet_requestPermissions'` can return a different order of accounts than `'eth_accounts'`\n                        // switch to `'eth_accounts'` ordering if more than one account is connected\n                        // https://github.com/wevm/wagmi/issues/4140\n                        if (accounts.length > 0) {\n                            const sortedAccounts = await this.getAccounts();\n                            accounts = sortedAccounts;\n                        }\n                    } catch (err) {\n                        const error = err;\n                        // Not all injected providers support `wallet_requestPermissions` (e.g. MetaMask iOS).\n                        // Only bubble up error if user rejects request\n                        if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                        // Or prompt is already open\n                        if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError.code) throw error;\n                    }\n                }\n                try {\n                    if (!accounts?.length && !isReconnecting) {\n                        const requestedAccounts = await provider.request({\n                            method: \"eth_requestAccounts\"\n                        });\n                        accounts = requestedAccounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n                    }\n                    // Manage EIP-1193 event listeners\n                    // https://eips.ethereum.org/EIPS/eip-1193#events\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    // Switch to chain if provided\n                    let currentChainId = await this.getChainId();\n                    if (chainId && currentChainId !== chainId) {\n                        const chain = await this.switchChain({\n                            chainId\n                        }).catch((error)=>{\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw error;\n                            return {\n                                id: currentChainId\n                            };\n                        });\n                        currentChainId = chain?.id ?? currentChainId;\n                    }\n                    // Remove disconnected shim if it exists\n                    if (shimDisconnect) await config.storage?.removeItem(`${this.id}.disconnected`);\n                    // Add connected shim if no target exists\n                    if (!parameters.target) await config.storage?.setItem(\"injected.connected\", true);\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (err) {\n                    const error = err;\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError(error);\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                // Manage EIP-1193 event listeners\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n                // Experimental support for MetaMask disconnect\n                // https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-2.md\n                try {\n                    // Adding timeout as not all wallets support this method and can hang\n                    // https://github.com/wevm/wagmi/issues/4064\n                    await (0,viem__WEBPACK_IMPORTED_MODULE_4__.withTimeout)(()=>// TODO: Remove explicit type for viem@3\n                        provider.request({\n                            // `'wallet_revokePermissions'` added in `viem@2.10.3`\n                            method: \"wallet_revokePermissions\",\n                            params: [\n                                {\n                                    eth_accounts: {}\n                                }\n                            ]\n                        }), {\n                        timeout: 100\n                    });\n                } catch  {}\n                // Add shim signalling connector is disconnected\n                if (shimDisconnect) {\n                    await config.storage?.setItem(`${this.id}.disconnected`, true);\n                }\n                if (!parameters.target) await config.storage?.removeItem(\"injected.connected\");\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const accounts = await provider.request({\n                    method: \"eth_accounts\"\n                });\n                return accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const hexChainId = await provider.request({\n                    method: \"eth_chainId\"\n                });\n                return Number(hexChainId);\n            },\n            async getProvider () {\n                if (true) return undefined;\n                let provider;\n                const target = getTarget();\n                if (typeof target.provider === \"function\") provider = target.provider(window);\n                else if (typeof target.provider === \"string\") provider = findProvider(window, target.provider);\n                else provider = target.provider;\n                // Some wallets do not conform to EIP-1193 (e.g. Trust Wallet)\n                // https://github.com/wevm/wagmi/issues/3526#issuecomment-1912683002\n                if (provider && !provider.removeListener) {\n                    // Try using `off` handler if it exists, otherwise noop\n                    if (\"off\" in provider && typeof provider.off === \"function\") provider.removeListener = provider.off;\n                    else provider.removeListener = ()=>{};\n                }\n                return provider;\n            },\n            async isAuthorized () {\n                try {\n                    const isDisconnected = shimDisconnect && // If shim exists in storage, connector is disconnected\n                    await config.storage?.getItem(`${this.id}.disconnected`);\n                    if (isDisconnected) return false;\n                    // Don't allow injected connector to connect if no target is set and it hasn't already connected\n                    // (e.g. flag in storage is not set). This prevents a targetless injected connector from connecting\n                    // automatically whenever there is a targeted connector configured.\n                    if (!parameters.target) {\n                        const connected = await config.storage?.getItem(\"injected.connected\");\n                        if (!connected) return false;\n                    }\n                    const provider = await this.getProvider();\n                    if (!provider) {\n                        if (unstable_shimAsyncInject !== undefined && unstable_shimAsyncInject !== false) {\n                            // If no provider is found, check for async injection\n                            // https://github.com/wevm/references/issues/167\n                            // https://github.com/MetaMask/detect-provider\n                            const handleEthereum = async ()=>{\n                                if (false) {}\n                                const provider = await this.getProvider();\n                                return !!provider;\n                            };\n                            const timeout = typeof unstable_shimAsyncInject === \"number\" ? unstable_shimAsyncInject : 1000;\n                            const res = await Promise.race([\n                                ... false ? 0 : [],\n                                new Promise((resolve)=>setTimeout(()=>resolve(handleEthereum()), timeout))\n                            ]);\n                            if (res) return true;\n                        }\n                        throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                    }\n                    // Use retry strategy as some injected wallets (e.g. MetaMask) fail to\n                    // immediately resolve JSON-RPC requests on page load.\n                    const accounts = await (0,viem__WEBPACK_IMPORTED_MODULE_5__.withRetry)(()=>this.getAccounts());\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const chain = config.chains.find((x)=>x.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(new _errors_config_js__WEBPACK_IMPORTED_MODULE_6__.ChainNotConfiguredError());\n                const promise = new Promise((resolve)=>{\n                    const listener = (data)=>{\n                        if (\"chainId\" in data && data.chainId === chainId) {\n                            config.emitter.off(\"change\", listener);\n                            resolve();\n                        }\n                    };\n                    config.emitter.on(\"change\", listener);\n                });\n                try {\n                    await Promise.all([\n                        provider.request({\n                            method: \"wallet_switchEthereumChain\",\n                            params: [\n                                {\n                                    chainId: (0,viem__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId)\n                                }\n                            ]\n                        })// During `'wallet_switchEthereumChain'`, MetaMask makes a `'net_version'` RPC call to the target chain.\n                        // If this request fails, MetaMask does not emit the `'chainChanged'` event, but will still switch the chain.\n                        // To counter this behavior, we request and emit the current chain ID to confirm the chain switch either via\n                        // this callback or an externally emitted `'chainChanged'` event.\n                        // https://github.com/MetaMask/metamask-extension/issues/24247\n                        .then(async ()=>{\n                            const currentChainId = await this.getChainId();\n                            if (currentChainId === chainId) config.emitter.emit(\"change\", {\n                                chainId\n                            });\n                        }),\n                        promise\n                    ]);\n                    return chain;\n                } catch (err) {\n                    const error = err;\n                    // Indicates chain is not added to provider\n                    if (error.code === 4902 || // Unwrapping for MetaMask Mobile\n                    // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n                    error?.data?.originalError?.code === 4902) {\n                        try {\n                            const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};\n                            let blockExplorerUrls;\n                            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                            else if (blockExplorer) blockExplorerUrls = [\n                                blockExplorer.url,\n                                ...Object.values(blockExplorers).map((x)=>x.url)\n                            ];\n                            let rpcUrls;\n                            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                            else rpcUrls = [\n                                chain.rpcUrls.default?.http[0] ?? \"\"\n                            ];\n                            const addEthereumChain = {\n                                blockExplorerUrls,\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId),\n                                chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                                iconUrls: addEthereumChainParameter?.iconUrls,\n                                nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                                rpcUrls\n                            };\n                            await Promise.all([\n                                provider.request({\n                                    method: \"wallet_addEthereumChain\",\n                                    params: [\n                                        addEthereumChain\n                                    ]\n                                }).then(async ()=>{\n                                    const currentChainId = await this.getChainId();\n                                    if (currentChainId === chainId) config.emitter.emit(\"change\", {\n                                        chainId\n                                    });\n                                    else throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(new Error(\"User rejected switch after adding network.\"));\n                                }),\n                                promise\n                            ]);\n                            return chain;\n                        } catch (error) {\n                            throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                        }\n                    }\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(error);\n                }\n            },\n            async onAccountsChanged (accounts) {\n                // Disconnect if there are no accounts\n                if (accounts.length === 0) this.onDisconnect();\n                else if (config.emitter.listenerCount(\"connect\")) {\n                    const chainId = (await this.getChainId()).toString();\n                    this.onConnect({\n                        chainId\n                    });\n                    // Remove disconnected shim if it exists\n                    if (shimDisconnect) await config.storage?.removeItem(`${this.id}.disconnected`);\n                } else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onConnect (connectInfo) {\n                const accounts = await this.getAccounts();\n                if (accounts.length === 0) return;\n                const chainId = Number(connectInfo.chainId);\n                config.emitter.emit(\"connect\", {\n                    accounts,\n                    chainId\n                });\n                // Manage EIP-1193 event listeners\n                const provider = await this.getProvider();\n                if (provider) {\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                }\n            },\n            async onDisconnect (error) {\n                const provider = await this.getProvider();\n                // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n                // https://github.com/MetaMask/providers/pull/120\n                if (error && error.code === 1013) {\n                    if (provider && !!(await this.getAccounts()).length) return;\n                }\n                // No need to remove `${this.id}.disconnected` from storage because `onDisconnect` is typically\n                // only called when the wallet is disconnected through the wallet's interface, meaning the wallet\n                // actually disconnected and we don't need to simulate it.\n                config.emitter.emit(\"disconnect\");\n                // Manage EIP-1193 event listeners\n                if (provider) {\n                    if (chainChanged) {\n                        provider.removeListener(\"chainChanged\", chainChanged);\n                        chainChanged = undefined;\n                    }\n                    if (disconnect) {\n                        provider.removeListener(\"disconnect\", disconnect);\n                        disconnect = undefined;\n                    }\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider.on(\"connect\", connect);\n                    }\n                }\n            }\n        }));\n}\nconst targetMap = {\n    coinbaseWallet: {\n        id: \"coinbaseWallet\",\n        name: \"Coinbase Wallet\",\n        provider (window1) {\n            if (window1?.coinbaseWalletExtension) return window1.coinbaseWalletExtension;\n            return findProvider(window1, \"isCoinbaseWallet\");\n        }\n    },\n    metaMask: {\n        id: \"metaMask\",\n        name: \"MetaMask\",\n        provider (window1) {\n            return findProvider(window1, (provider)=>{\n                if (!provider.isMetaMask) return false;\n                // Brave tries to make itself look like MetaMask\n                // Could also try RPC `web3_clientVersion` if following is unreliable\n                if (provider.isBraveWallet && !provider._events && !provider._state) return false;\n                // Other wallets that try to look like MetaMask\n                const flags = [\n                    \"isApexWallet\",\n                    \"isAvalanche\",\n                    \"isBitKeep\",\n                    \"isBlockWallet\",\n                    \"isKuCoinWallet\",\n                    \"isMathWallet\",\n                    \"isOkxWallet\",\n                    \"isOKExWallet\",\n                    \"isOneInchIOSWallet\",\n                    \"isOneInchAndroidWallet\",\n                    \"isOpera\",\n                    \"isPhantom\",\n                    \"isPortal\",\n                    \"isRabby\",\n                    \"isTokenPocket\",\n                    \"isTokenary\",\n                    \"isUniswapWallet\",\n                    \"isZerion\"\n                ];\n                for (const flag of flags)if (provider[flag]) return false;\n                return true;\n            });\n        }\n    },\n    phantom: {\n        id: \"phantom\",\n        name: \"Phantom\",\n        provider (window1) {\n            if (window1?.phantom?.ethereum) return window1.phantom?.ethereum;\n            return findProvider(window1, \"isPhantom\");\n        }\n    }\n};\nfunction findProvider(window1, select) {\n    function isProvider(provider) {\n        if (typeof select === \"function\") return select(provider);\n        if (typeof select === \"string\") return provider[select];\n        return true;\n    }\n    const ethereum = window1.ethereum;\n    if (ethereum?.providers) return ethereum.providers.find((provider)=>isProvider(provider));\n    if (ethereum && isProvider(ethereum)) return ethereum;\n    return undefined;\n} //# sourceMappingURL=injected.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createConfig.js":
/*!***********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createConfig.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConfig: () => (/* binding */ createConfig)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createClient.js\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! zustand/middleware */ \"(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/vanilla */ \"(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var _connectors_injected_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./connectors/injected.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js\");\n/* harmony import */ var _createEmitter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createEmitter.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js\");\n/* harmony import */ var _createStorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createStorage.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _utils_uid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/uid.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\");\n\n\n\n\n\n\n\n\n\n\nfunction createConfig(parameters) {\n    const { multiInjectedProviderDiscovery = true, storage = (0,_createStorage_js__WEBPACK_IMPORTED_MODULE_0__.createStorage)({\n        storage: (0,_createStorage_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultStorage)()\n    }), syncConnectedChain = true, ssr = false, ...rest } = parameters;\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Set up connectors, clients, etc.\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    const mipd =  false ? 0 : undefined;\n    const chains = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)(()=>rest.chains);\n    const connectors = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)(()=>{\n        const collection = [];\n        const rdnsSet = new Set();\n        for (const connectorFns of rest.connectors ?? []){\n            const connector = setup(connectorFns);\n            collection.push(connector);\n            if (!ssr && connector.rdns) {\n                const rdnsValues = typeof connector.rdns === \"string\" ? [\n                    connector.rdns\n                ] : connector.rdns;\n                for (const rdns of rdnsValues){\n                    rdnsSet.add(rdns);\n                }\n            }\n        }\n        if (!ssr && mipd) {\n            const providers = mipd.getProviders();\n            for (const provider of providers){\n                if (rdnsSet.has(provider.info.rdns)) continue;\n                collection.push(setup(providerDetailToConnector(provider)));\n            }\n        }\n        return collection;\n    });\n    function setup(connectorFn) {\n        // Set up emitter with uid and add to connector so they are \"linked\" together.\n        const emitter = (0,_createEmitter_js__WEBPACK_IMPORTED_MODULE_2__.createEmitter)((0,_utils_uid_js__WEBPACK_IMPORTED_MODULE_3__.uid)());\n        const connector = {\n            ...connectorFn({\n                emitter,\n                chains: chains.getState(),\n                storage,\n                transports: rest.transports\n            }),\n            emitter,\n            uid: emitter.uid\n        };\n        // Start listening for `connect` events on connector setup\n        // This allows connectors to \"connect\" themselves without user interaction (e.g. MetaMask's \"Manually connect to current site\")\n        emitter.on(\"connect\", connect);\n        connector.setup?.();\n        return connector;\n    }\n    function providerDetailToConnector(providerDetail) {\n        const { info } = providerDetail;\n        const provider = providerDetail.provider;\n        return (0,_connectors_injected_js__WEBPACK_IMPORTED_MODULE_4__.injected)({\n            target: {\n                ...info,\n                id: info.rdns,\n                provider\n            }\n        });\n    }\n    const clients = new Map();\n    function getClient(config = {}) {\n        const chainId = config.chainId ?? store.getState().chainId;\n        const chain = chains.getState().find((x)=>x.id === chainId);\n        // chainId specified and not configured\n        if (config.chainId && !chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_5__.ChainNotConfiguredError();\n        {\n            const client = clients.get(store.getState().chainId);\n            if (client && !chain) return client;\n            if (!chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_5__.ChainNotConfiguredError();\n        }\n        // If a memoized client exists for a chain id, use that.\n        {\n            const client = clients.get(chainId);\n            if (client) return client;\n        }\n        let client;\n        if (rest.client) client = rest.client({\n            chain\n        });\n        else {\n            const chainId = chain.id;\n            const chainIds = chains.getState().map((x)=>x.id);\n            // Grab all properties off `rest` and resolve for use in `createClient`\n            const properties = {};\n            const entries = Object.entries(rest);\n            for (const [key, value] of entries){\n                if (key === \"chains\" || key === \"client\" || key === \"connectors\" || key === \"transports\") continue;\n                if (typeof value === \"object\") {\n                    // check if value is chainId-specific since some values can be objects\n                    // e.g. { batch: { multicall: { batchSize: 1024 } } }\n                    if (chainId in value) properties[key] = value[chainId];\n                    else {\n                        // check if value is chainId-specific, but does not have value for current chainId\n                        const hasChainSpecificValue = chainIds.some((x)=>x in value);\n                        if (hasChainSpecificValue) continue;\n                        properties[key] = value;\n                    }\n                } else properties[key] = value;\n            }\n            client = (0,viem__WEBPACK_IMPORTED_MODULE_6__.createClient)({\n                ...properties,\n                chain,\n                batch: properties.batch ?? {\n                    multicall: true\n                },\n                transport: (parameters)=>rest.transports[chainId]({\n                        ...parameters,\n                        connectors\n                    })\n            });\n        }\n        clients.set(chainId, client);\n        return client;\n    }\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Create store\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    function getInitialState() {\n        return {\n            chainId: chains.getState()[0].id,\n            connections: new Map(),\n            current: null,\n            status: \"disconnected\"\n        };\n    }\n    let currentVersion;\n    const prefix = \"0.0.0-canary-\";\n    if (_version_js__WEBPACK_IMPORTED_MODULE_7__.version.startsWith(prefix)) currentVersion = Number.parseInt(_version_js__WEBPACK_IMPORTED_MODULE_7__.version.replace(prefix, \"\"));\n    else currentVersion = Number.parseInt(_version_js__WEBPACK_IMPORTED_MODULE_7__.version.split(\".\")[0] ?? \"0\");\n    const store = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_8__.subscribeWithSelector)(// only use persist middleware if storage exists\n    storage ? (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_8__.persist)(getInitialState, {\n        migrate (persistedState, version) {\n            if (version === currentVersion) return persistedState;\n            const initialState = getInitialState();\n            const chainId = validatePersistedChainId(persistedState, initialState.chainId);\n            return {\n                ...initialState,\n                chainId\n            };\n        },\n        name: \"store\",\n        partialize (state) {\n            // Only persist \"critical\" store properties to preserve storage size.\n            return {\n                connections: {\n                    __type: \"Map\",\n                    value: Array.from(state.connections.entries()).map(([key, connection])=>{\n                        const { id, name, type, uid } = connection.connector;\n                        const connector = {\n                            id,\n                            name,\n                            type,\n                            uid\n                        };\n                        return [\n                            key,\n                            {\n                                ...connection,\n                                connector\n                            }\n                        ];\n                    })\n                },\n                chainId: state.chainId,\n                current: state.current\n            };\n        },\n        merge (persistedState, currentState) {\n            // `status` should not be persisted as it messes with reconnection\n            if (typeof persistedState === \"object\" && persistedState && \"status\" in persistedState) delete persistedState.status;\n            // Make sure persisted `chainId` is valid\n            const chainId = validatePersistedChainId(persistedState, currentState.chainId);\n            return {\n                ...currentState,\n                ...persistedState,\n                chainId\n            };\n        },\n        skipHydration: ssr,\n        storage: storage,\n        version: currentVersion\n    }) : getInitialState));\n    store.setState(getInitialState());\n    function validatePersistedChainId(persistedState, defaultChainId) {\n        return persistedState && typeof persistedState === \"object\" && \"chainId\" in persistedState && typeof persistedState.chainId === \"number\" && chains.getState().some((x)=>x.id === persistedState.chainId) ? persistedState.chainId : defaultChainId;\n    }\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Subscribe to changes\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Update default chain when connector chain changes\n    if (syncConnectedChain) store.subscribe(({ connections, current })=>current ? connections.get(current)?.chainId : undefined, (chainId)=>{\n        // If chain is not configured, then don't switch over to it.\n        const isChainConfigured = chains.getState().some((x)=>x.id === chainId);\n        if (!isChainConfigured) return;\n        return store.setState((x)=>({\n                ...x,\n                chainId: chainId ?? x.chainId\n            }));\n    });\n    // EIP-6963 subscribe for new wallet providers\n    mipd?.subscribe((providerDetails)=>{\n        const connectorIdSet = new Set();\n        const connectorRdnsSet = new Set();\n        for (const connector of connectors.getState()){\n            connectorIdSet.add(connector.id);\n            if (connector.rdns) {\n                const rdnsValues = typeof connector.rdns === \"string\" ? [\n                    connector.rdns\n                ] : connector.rdns;\n                for (const rdns of rdnsValues){\n                    connectorRdnsSet.add(rdns);\n                }\n            }\n        }\n        const newConnectors = [];\n        for (const providerDetail of providerDetails){\n            if (connectorRdnsSet.has(providerDetail.info.rdns)) continue;\n            const connector = setup(providerDetailToConnector(providerDetail));\n            if (connectorIdSet.has(connector.id)) continue;\n            newConnectors.push(connector);\n        }\n        if (storage && !store.persist.hasHydrated()) return;\n        connectors.setState((x)=>[\n                ...x,\n                ...newConnectors\n            ], true);\n    });\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Emitter listeners\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    function change(data) {\n        store.setState((x)=>{\n            const connection = x.connections.get(data.uid);\n            if (!connection) return x;\n            return {\n                ...x,\n                connections: new Map(x.connections).set(data.uid, {\n                    accounts: data.accounts ?? connection.accounts,\n                    chainId: data.chainId ?? connection.chainId,\n                    connector: connection.connector\n                })\n            };\n        });\n    }\n    function connect(data) {\n        // Disable handling if reconnecting/connecting\n        if (store.getState().status === \"connecting\" || store.getState().status === \"reconnecting\") return;\n        store.setState((x)=>{\n            const connector = connectors.getState().find((x)=>x.uid === data.uid);\n            if (!connector) return x;\n            if (connector.emitter.listenerCount(\"connect\")) connector.emitter.off(\"connect\", change);\n            if (!connector.emitter.listenerCount(\"change\")) connector.emitter.on(\"change\", change);\n            if (!connector.emitter.listenerCount(\"disconnect\")) connector.emitter.on(\"disconnect\", disconnect);\n            return {\n                ...x,\n                connections: new Map(x.connections).set(data.uid, {\n                    accounts: data.accounts,\n                    chainId: data.chainId,\n                    connector: connector\n                }),\n                current: data.uid,\n                status: \"connected\"\n            };\n        });\n    }\n    function disconnect(data) {\n        store.setState((x)=>{\n            const connection = x.connections.get(data.uid);\n            if (connection) {\n                const connector = connection.connector;\n                if (connector.emitter.listenerCount(\"change\")) connection.connector.emitter.off(\"change\", change);\n                if (connector.emitter.listenerCount(\"disconnect\")) connection.connector.emitter.off(\"disconnect\", disconnect);\n                if (!connector.emitter.listenerCount(\"connect\")) connection.connector.emitter.on(\"connect\", connect);\n            }\n            x.connections.delete(data.uid);\n            if (x.connections.size === 0) return {\n                ...x,\n                connections: new Map(),\n                current: null,\n                status: \"disconnected\"\n            };\n            const nextConnection = x.connections.values().next().value;\n            return {\n                ...x,\n                connections: new Map(x.connections),\n                current: nextConnection.connector.uid\n            };\n        });\n    }\n    return {\n        get chains () {\n            return chains.getState();\n        },\n        get connectors () {\n            return connectors.getState();\n        },\n        storage,\n        getClient,\n        get state () {\n            return store.getState();\n        },\n        setState (value) {\n            let newState;\n            if (typeof value === \"function\") newState = value(store.getState());\n            else newState = value;\n            // Reset state if it got set to something not matching the base state\n            const initialState = getInitialState();\n            if (typeof newState !== \"object\") newState = initialState;\n            const isCorrupt = Object.keys(initialState).some((x)=>!(x in newState));\n            if (isCorrupt) newState = initialState;\n            store.setState(newState, true);\n        },\n        subscribe (selector, listener, options) {\n            return store.subscribe(selector, listener, options ? {\n                ...options,\n                fireImmediately: options.emitImmediately\n            } : undefined);\n        },\n        _internal: {\n            mipd,\n            store,\n            ssr: Boolean(ssr),\n            syncConnectedChain,\n            transports: rest.transports,\n            chains: {\n                setState (value) {\n                    const nextChains = typeof value === \"function\" ? value(chains.getState()) : value;\n                    if (nextChains.length === 0) return;\n                    return chains.setState(nextChains, true);\n                },\n                subscribe (listener) {\n                    return chains.subscribe(listener);\n                }\n            },\n            connectors: {\n                providerDetailToConnector,\n                setup: setup,\n                setState (value) {\n                    return connectors.setState(typeof value === \"function\" ? value(connectors.getState()) : value, true);\n                },\n                subscribe (listener) {\n                    return connectors.subscribe(listener);\n                }\n            },\n            events: {\n                change,\n                connect,\n                disconnect\n            }\n        }\n    };\n} //# sourceMappingURL=createConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createEmitter.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: () => (/* binding */ Emitter),\n/* harmony export */   createEmitter: () => (/* binding */ createEmitter)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.mjs\");\n\nclass Emitter {\n    constructor(uid){\n        Object.defineProperty(this, \"uid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: uid\n        });\n        Object.defineProperty(this, \"_emitter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new eventemitter3__WEBPACK_IMPORTED_MODULE_0__.EventEmitter()\n        });\n    }\n    on(eventName, fn) {\n        this._emitter.on(eventName, fn);\n    }\n    once(eventName, fn) {\n        this._emitter.once(eventName, fn);\n    }\n    off(eventName, fn) {\n        this._emitter.off(eventName, fn);\n    }\n    emit(eventName, ...params) {\n        const data = params[0];\n        this._emitter.emit(eventName, {\n            uid: this.uid,\n            ...data\n        });\n    }\n    listenerCount(eventName) {\n        return this._emitter.listenerCount(eventName);\n    }\n}\nfunction createEmitter(uid) {\n    return new Emitter(uid);\n} //# sourceMappingURL=createEmitter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlRW1pdHRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDdEMsTUFBTUM7SUFDVEMsWUFBWUMsR0FBRyxDQUFFO1FBQ2JDLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsT0FBTztZQUMvQkMsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBT047UUFDWDtRQUNBQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFlBQVk7WUFDcENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sSUFBSVQsdURBQVlBO1FBQzNCO0lBQ0o7SUFDQVUsR0FBR0MsU0FBUyxFQUFFQyxFQUFFLEVBQUU7UUFDZCxJQUFJLENBQUNDLFFBQVEsQ0FBQ0gsRUFBRSxDQUFDQyxXQUFXQztJQUNoQztJQUNBRSxLQUFLSCxTQUFTLEVBQUVDLEVBQUUsRUFBRTtRQUNoQixJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDSCxXQUFXQztJQUNsQztJQUNBRyxJQUFJSixTQUFTLEVBQUVDLEVBQUUsRUFBRTtRQUNmLElBQUksQ0FBQ0MsUUFBUSxDQUFDRSxHQUFHLENBQUNKLFdBQVdDO0lBQ2pDO0lBQ0FJLEtBQUtMLFNBQVMsRUFBRSxHQUFHTSxNQUFNLEVBQUU7UUFDdkIsTUFBTUMsT0FBT0QsTUFBTSxDQUFDLEVBQUU7UUFDdEIsSUFBSSxDQUFDSixRQUFRLENBQUNHLElBQUksQ0FBQ0wsV0FBVztZQUFFUixLQUFLLElBQUksQ0FBQ0EsR0FBRztZQUFFLEdBQUdlLElBQUk7UUFBQztJQUMzRDtJQUNBQyxjQUFjUixTQUFTLEVBQUU7UUFDckIsT0FBTyxJQUFJLENBQUNFLFFBQVEsQ0FBQ00sYUFBYSxDQUFDUjtJQUN2QztBQUNKO0FBQ08sU0FBU1MsY0FBY2pCLEdBQUc7SUFDN0IsT0FBTyxJQUFJRixRQUFRRTtBQUN2QixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2NyZWF0ZUVtaXR0ZXIuanM/ZmQ3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdldmVudGVtaXR0ZXIzJztcbmV4cG9ydCBjbGFzcyBFbWl0dGVyIHtcbiAgICBjb25zdHJ1Y3Rvcih1aWQpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidWlkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB1aWRcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9lbWl0dGVyXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBuZXcgRXZlbnRFbWl0dGVyKClcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIG9uKGV2ZW50TmFtZSwgZm4pIHtcbiAgICAgICAgdGhpcy5fZW1pdHRlci5vbihldmVudE5hbWUsIGZuKTtcbiAgICB9XG4gICAgb25jZShldmVudE5hbWUsIGZuKSB7XG4gICAgICAgIHRoaXMuX2VtaXR0ZXIub25jZShldmVudE5hbWUsIGZuKTtcbiAgICB9XG4gICAgb2ZmKGV2ZW50TmFtZSwgZm4pIHtcbiAgICAgICAgdGhpcy5fZW1pdHRlci5vZmYoZXZlbnROYW1lLCBmbik7XG4gICAgfVxuICAgIGVtaXQoZXZlbnROYW1lLCAuLi5wYXJhbXMpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IHBhcmFtc1swXTtcbiAgICAgICAgdGhpcy5fZW1pdHRlci5lbWl0KGV2ZW50TmFtZSwgeyB1aWQ6IHRoaXMudWlkLCAuLi5kYXRhIH0pO1xuICAgIH1cbiAgICBsaXN0ZW5lckNvdW50KGV2ZW50TmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZW1pdHRlci5saXN0ZW5lckNvdW50KGV2ZW50TmFtZSk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVtaXR0ZXIodWlkKSB7XG4gICAgcmV0dXJuIG5ldyBFbWl0dGVyKHVpZCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVFbWl0dGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJFbWl0dGVyIiwiY29uc3RydWN0b3IiLCJ1aWQiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInZhbHVlIiwib24iLCJldmVudE5hbWUiLCJmbiIsIl9lbWl0dGVyIiwib25jZSIsIm9mZiIsImVtaXQiLCJwYXJhbXMiLCJkYXRhIiwibGlzdGVuZXJDb3VudCIsImNyZWF0ZUVtaXR0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createStorage.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStorage: () => (/* binding */ createStorage),\n/* harmony export */   getDefaultStorage: () => (/* binding */ getDefaultStorage),\n/* harmony export */   noopStorage: () => (/* binding */ noopStorage)\n/* harmony export */ });\n/* harmony import */ var _utils_deserialize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/deserialize.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js\");\n/* harmony import */ var _utils_serialize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/serialize.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js\");\n\n\nfunction createStorage(parameters) {\n    const { deserialize = _utils_deserialize_js__WEBPACK_IMPORTED_MODULE_0__.deserialize, key: prefix = \"wagmi\", serialize = _utils_serialize_js__WEBPACK_IMPORTED_MODULE_1__.serialize, storage = noopStorage } = parameters;\n    function unwrap(value) {\n        if (value instanceof Promise) return value.then((x)=>x).catch(()=>null);\n        return value;\n    }\n    return {\n        ...storage,\n        key: prefix,\n        async getItem (key, defaultValue) {\n            const value = storage.getItem(`${prefix}.${key}`);\n            const unwrapped = await unwrap(value);\n            if (unwrapped) return deserialize(unwrapped) ?? null;\n            return defaultValue ?? null;\n        },\n        async setItem (key, value) {\n            const storageKey = `${prefix}.${key}`;\n            if (value === null) await unwrap(storage.removeItem(storageKey));\n            else await unwrap(storage.setItem(storageKey, serialize(value)));\n        },\n        async removeItem (key) {\n            await unwrap(storage.removeItem(`${prefix}.${key}`));\n        }\n    };\n}\nconst noopStorage = {\n    getItem: ()=>null,\n    setItem: ()=>{},\n    removeItem: ()=>{}\n};\nfunction getDefaultStorage() {\n    const storage = (()=>{\n        if (false) {}\n        return noopStorage;\n    })();\n    return {\n        getItem (key) {\n            return storage.getItem(key);\n        },\n        removeItem (key) {\n            storage.removeItem(key);\n        },\n        setItem (key, value) {\n            try {\n                storage.setItem(key, value);\n            // silence errors by default (QuotaExceededError, SecurityError, etc.)\n            } catch  {}\n        }\n    };\n} //# sourceMappingURL=createStorage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlU3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRTtBQUNOO0FBQ3hELFNBQVNJLGNBQWNDLFVBQVU7SUFDcEMsTUFBTSxFQUFFTCxjQUFjQyw4REFBWSxFQUFFSyxLQUFLQyxTQUFTLE9BQU8sRUFBRUwsWUFBWUMsMERBQVUsRUFBRUssVUFBVUMsV0FBVyxFQUFHLEdBQUdKO0lBQzlHLFNBQVNLLE9BQU9DLEtBQUs7UUFDakIsSUFBSUEsaUJBQWlCQyxTQUNqQixPQUFPRCxNQUFNRSxJQUFJLENBQUMsQ0FBQ0MsSUFBTUEsR0FBR0MsS0FBSyxDQUFDLElBQU07UUFDNUMsT0FBT0o7SUFDWDtJQUNBLE9BQU87UUFDSCxHQUFHSCxPQUFPO1FBQ1ZGLEtBQUtDO1FBQ0wsTUFBTVMsU0FBUVYsR0FBRyxFQUFFVyxZQUFZO1lBQzNCLE1BQU1OLFFBQVFILFFBQVFRLE9BQU8sQ0FBQyxDQUFDLEVBQUVULE9BQU8sQ0FBQyxFQUFFRCxJQUFJLENBQUM7WUFDaEQsTUFBTVksWUFBWSxNQUFNUixPQUFPQztZQUMvQixJQUFJTyxXQUNBLE9BQU9sQixZQUFZa0IsY0FBYztZQUNyQyxPQUFRRCxnQkFBZ0I7UUFDNUI7UUFDQSxNQUFNRSxTQUFRYixHQUFHLEVBQUVLLEtBQUs7WUFDcEIsTUFBTVMsYUFBYSxDQUFDLEVBQUViLE9BQU8sQ0FBQyxFQUFFRCxJQUFJLENBQUM7WUFDckMsSUFBSUssVUFBVSxNQUNWLE1BQU1ELE9BQU9GLFFBQVFhLFVBQVUsQ0FBQ0Q7aUJBRWhDLE1BQU1WLE9BQU9GLFFBQVFXLE9BQU8sQ0FBQ0MsWUFBWWxCLFVBQVVTO1FBQzNEO1FBQ0EsTUFBTVUsWUFBV2YsR0FBRztZQUNoQixNQUFNSSxPQUFPRixRQUFRYSxVQUFVLENBQUMsQ0FBQyxFQUFFZCxPQUFPLENBQUMsRUFBRUQsSUFBSSxDQUFDO1FBQ3REO0lBQ0o7QUFDSjtBQUNPLE1BQU1HLGNBQWM7SUFDdkJPLFNBQVMsSUFBTTtJQUNmRyxTQUFTLEtBQVE7SUFDakJFLFlBQVksS0FBUTtBQUN4QixFQUFFO0FBQ0ssU0FBU0M7SUFDWixNQUFNZCxVQUFVLENBQUM7UUFDYixJQUFJLEtBQW9ELEVBQ3BELEVBQTJCO1FBQy9CLE9BQU9DO0lBQ1g7SUFDQSxPQUFPO1FBQ0hPLFNBQVFWLEdBQUc7WUFDUCxPQUFPRSxRQUFRUSxPQUFPLENBQUNWO1FBQzNCO1FBQ0FlLFlBQVdmLEdBQUc7WUFDVkUsUUFBUWEsVUFBVSxDQUFDZjtRQUN2QjtRQUNBYSxTQUFRYixHQUFHLEVBQUVLLEtBQUs7WUFDZCxJQUFJO2dCQUNBSCxRQUFRVyxPQUFPLENBQUNiLEtBQUtLO1lBQ3JCLHNFQUFzRTtZQUMxRSxFQUNBLE9BQU0sQ0FBRTtRQUNaO0lBQ0o7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2NyZWF0ZVN0b3JhZ2UuanM/OTJhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXNlcmlhbGl6ZSBhcyBkZXNlcmlhbGl6ZV8gfSBmcm9tICcuL3V0aWxzL2Rlc2VyaWFsaXplLmpzJztcbmltcG9ydCB7IHNlcmlhbGl6ZSBhcyBzZXJpYWxpemVfIH0gZnJvbSAnLi91dGlscy9zZXJpYWxpemUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0b3JhZ2UocGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgZGVzZXJpYWxpemUgPSBkZXNlcmlhbGl6ZV8sIGtleTogcHJlZml4ID0gJ3dhZ21pJywgc2VyaWFsaXplID0gc2VyaWFsaXplXywgc3RvcmFnZSA9IG5vb3BTdG9yYWdlLCB9ID0gcGFyYW1ldGVycztcbiAgICBmdW5jdGlvbiB1bndyYXAodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSlcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS50aGVuKCh4KSA9PiB4KS5jYXRjaCgoKSA9PiBudWxsKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdG9yYWdlLFxuICAgICAgICBrZXk6IHByZWZpeCxcbiAgICAgICAgYXN5bmMgZ2V0SXRlbShrZXksIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzdG9yYWdlLmdldEl0ZW0oYCR7cHJlZml4fS4ke2tleX1gKTtcbiAgICAgICAgICAgIGNvbnN0IHVud3JhcHBlZCA9IGF3YWl0IHVud3JhcCh2YWx1ZSk7XG4gICAgICAgICAgICBpZiAodW53cmFwcGVkKVxuICAgICAgICAgICAgICAgIHJldHVybiBkZXNlcmlhbGl6ZSh1bndyYXBwZWQpID8/IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gKGRlZmF1bHRWYWx1ZSA/PyBudWxsKTtcbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCBzdG9yYWdlS2V5ID0gYCR7cHJlZml4fS4ke2tleX1gO1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKVxuICAgICAgICAgICAgICAgIGF3YWl0IHVud3JhcChzdG9yYWdlLnJlbW92ZUl0ZW0oc3RvcmFnZUtleSkpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIGF3YWl0IHVud3JhcChzdG9yYWdlLnNldEl0ZW0oc3RvcmFnZUtleSwgc2VyaWFsaXplKHZhbHVlKSkpO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyByZW1vdmVJdGVtKGtleSkge1xuICAgICAgICAgICAgYXdhaXQgdW53cmFwKHN0b3JhZ2UucmVtb3ZlSXRlbShgJHtwcmVmaXh9LiR7a2V5fWApKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0IGNvbnN0IG5vb3BTdG9yYWdlID0ge1xuICAgIGdldEl0ZW06ICgpID0+IG51bGwsXG4gICAgc2V0SXRlbTogKCkgPT4geyB9LFxuICAgIHJlbW92ZUl0ZW06ICgpID0+IHsgfSxcbn07XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdFN0b3JhZ2UoKSB7XG4gICAgY29uc3Qgc3RvcmFnZSA9ICgoKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cubG9jYWxTdG9yYWdlKVxuICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgICAgIHJldHVybiBub29wU3RvcmFnZTtcbiAgICB9KSgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGdldEl0ZW0oa2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gc3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgICAgIH0sXG4gICAgICAgIHJlbW92ZUl0ZW0oa2V5KSB7XG4gICAgICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0SXRlbShrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAvLyBzaWxlbmNlIGVycm9ycyBieSBkZWZhdWx0IChRdW90YUV4Y2VlZGVkRXJyb3IsIFNlY3VyaXR5RXJyb3IsIGV0Yy4pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCB7IH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlU3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOlsiZGVzZXJpYWxpemUiLCJkZXNlcmlhbGl6ZV8iLCJzZXJpYWxpemUiLCJzZXJpYWxpemVfIiwiY3JlYXRlU3RvcmFnZSIsInBhcmFtZXRlcnMiLCJrZXkiLCJwcmVmaXgiLCJzdG9yYWdlIiwibm9vcFN0b3JhZ2UiLCJ1bndyYXAiLCJ2YWx1ZSIsIlByb21pc2UiLCJ0aGVuIiwieCIsImNhdGNoIiwiZ2V0SXRlbSIsImRlZmF1bHRWYWx1ZSIsInVud3JhcHBlZCIsInNldEl0ZW0iLCJzdG9yYWdlS2V5IiwicmVtb3ZlSXRlbSIsImdldERlZmF1bHRTdG9yYWdlIiwid2luZG93IiwibG9jYWxTdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/base.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseError: () => (/* binding */ BaseError)\n/* harmony export */ });\n/* harmony import */ var _utils_getVersion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getVersion.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js\");\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BaseError_instances, _BaseError_walk;\n\nclass BaseError extends Error {\n    get docsBaseUrl() {\n        return \"https://wagmi.sh/core\";\n    }\n    get version() {\n        return (0,_utils_getVersion_js__WEBPACK_IMPORTED_MODULE_0__.getVersion)();\n    }\n    constructor(shortMessage, options = {}){\n        super();\n        _BaseError_instances.add(this);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"WagmiCoreError\"\n        });\n        const details = options.cause instanceof BaseError ? options.cause.details : options.cause?.message ? options.cause.message : options.details;\n        const docsPath = options.cause instanceof BaseError ? options.cause.docsPath || options.docsPath : options.docsPath;\n        this.message = [\n            shortMessage || \"An error occurred.\",\n            \"\",\n            ...options.metaMessages ? [\n                ...options.metaMessages,\n                \"\"\n            ] : [],\n            ...docsPath ? [\n                `Docs: ${this.docsBaseUrl}${docsPath}.html${options.docsSlug ? `#${options.docsSlug}` : \"\"}`\n            ] : [],\n            ...details ? [\n                `Details: ${details}`\n            ] : [],\n            `Version: ${this.version}`\n        ].join(\"\\n\");\n        if (options.cause) this.cause = options.cause;\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = options.metaMessages;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return __classPrivateFieldGet(this, _BaseError_instances, \"m\", _BaseError_walk).call(this, this, fn);\n    }\n}\n_BaseError_instances = new WeakSet(), _BaseError_walk = function _BaseError_walk(err, fn) {\n    if (fn?.(err)) return err;\n    if (err.cause) return __classPrivateFieldGet(this, _BaseError_instances, \"m\", _BaseError_walk).call(this, err.cause, fn);\n    return err;\n}; //# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/config.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainNotConfiguredError: () => (/* binding */ ChainNotConfiguredError),\n/* harmony export */   ConnectorAccountNotFoundError: () => (/* binding */ ConnectorAccountNotFoundError),\n/* harmony export */   ConnectorAlreadyConnectedError: () => (/* binding */ ConnectorAlreadyConnectedError),\n/* harmony export */   ConnectorChainMismatchError: () => (/* binding */ ConnectorChainMismatchError),\n/* harmony export */   ConnectorNotConnectedError: () => (/* binding */ ConnectorNotConnectedError),\n/* harmony export */   ConnectorNotFoundError: () => (/* binding */ ConnectorNotFoundError),\n/* harmony export */   ConnectorUnavailableReconnectingError: () => (/* binding */ ConnectorUnavailableReconnectingError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\");\n\nclass ChainNotConfiguredError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Chain not configured.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ChainNotConfiguredError\"\n        });\n    }\n}\nclass ConnectorAlreadyConnectedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector already connected.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorAlreadyConnectedError\"\n        });\n    }\n}\nclass ConnectorNotConnectedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector not connected.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorNotConnectedError\"\n        });\n    }\n}\nclass ConnectorNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector not found.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorNotFoundError\"\n        });\n    }\n}\nclass ConnectorAccountNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ address, connector }){\n        super(`Account \"${address}\" not found for connector \"${connector.name}\".`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorAccountNotFoundError\"\n        });\n    }\n}\nclass ConnectorChainMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ connectionChainId, connectorChainId }){\n        super(`The current chain of the connector (id: ${connectorChainId}) does not match the connection's chain (id: ${connectionChainId}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${connectorChainId}`,\n                `Expected Chain ID: ${connectionChainId}`\n            ]\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorChainMismatchError\"\n        });\n    }\n}\nclass ConnectorUnavailableReconnectingError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ connector }){\n        super(`Connector \"${connector.name}\" unavailable while reconnecting.`, {\n            details: [\n                \"During the reconnection step, the only connector methods guaranteed to be available are: `id`, `name`, `type`, `uid`.\",\n                \"All other methods are not guaranteed to be available until reconnection completes and connectors are fully restored.\",\n                \"This error commonly occurs for connectors that asynchronously inject after reconnection has already started.\"\n            ].join(\" \")\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorUnavailableReconnectingError\"\n        });\n    }\n} //# sourceMappingURL=config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vZXJyb3JzL2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzQztBQUMvQixNQUFNQyxnQ0FBZ0NELCtDQUFTQTtJQUNsREUsYUFBYztRQUNWLEtBQUssQ0FBQztRQUNOQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNQyx1Q0FBdUNULCtDQUFTQTtJQUN6REUsYUFBYztRQUNWLEtBQUssQ0FBQztRQUNOQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNRSxtQ0FBbUNWLCtDQUFTQTtJQUNyREUsYUFBYztRQUNWLEtBQUssQ0FBQztRQUNOQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNRywrQkFBK0JYLCtDQUFTQTtJQUNqREUsYUFBYztRQUNWLEtBQUssQ0FBQztRQUNOQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNSSxzQ0FBc0NaLCtDQUFTQTtJQUN4REUsWUFBWSxFQUFFVyxPQUFPLEVBQUVDLFNBQVMsRUFBRyxDQUFFO1FBQ2pDLEtBQUssQ0FBQyxDQUFDLFNBQVMsRUFBRUQsUUFBUSwyQkFBMkIsRUFBRUMsVUFBVUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN6RVosT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRO1lBQ2hDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPO1FBQ1g7SUFDSjtBQUNKO0FBQ08sTUFBTVEsb0NBQW9DaEIsK0NBQVNBO0lBQ3RERSxZQUFZLEVBQUVlLGlCQUFpQixFQUFFQyxnQkFBZ0IsRUFBRyxDQUFFO1FBQ2xELEtBQUssQ0FBQyxDQUFDLHdDQUF3QyxFQUFFQSxpQkFBaUIsNkNBQTZDLEVBQUVELGtCQUFrQixFQUFFLENBQUMsRUFBRTtZQUNwSUUsY0FBYztnQkFDVixDQUFDLG1CQUFtQixFQUFFRCxpQkFBaUIsQ0FBQztnQkFDeEMsQ0FBQyxtQkFBbUIsRUFBRUQsa0JBQWtCLENBQUM7YUFDNUM7UUFDTDtRQUNBZCxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNWSw4Q0FBOENwQiwrQ0FBU0E7SUFDaEVFLFlBQVksRUFBRVksU0FBUyxFQUFFLENBQUU7UUFDdkIsS0FBSyxDQUFDLENBQUMsV0FBVyxFQUFFQSxVQUFVQyxJQUFJLENBQUMsaUNBQWlDLENBQUMsRUFBRTtZQUNuRU0sU0FBUztnQkFDTDtnQkFDQTtnQkFDQTthQUNILENBQUNDLElBQUksQ0FBQztRQUNYO1FBQ0FuQixPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9lcnJvcnMvY29uZmlnLmpzP2E4M2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUVycm9yIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjbGFzcyBDaGFpbk5vdENvbmZpZ3VyZWRFcnJvciBleHRlbmRzIEJhc2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDaGFpbiBub3QgY29uZmlndXJlZC4nKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0NoYWluTm90Q29uZmlndXJlZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ29ubmVjdG9yQWxyZWFkeUNvbm5lY3RlZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0Nvbm5lY3RvciBhbHJlYWR5IGNvbm5lY3RlZC4nKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0Nvbm5lY3RvckFscmVhZHlDb25uZWN0ZWRFcnJvcidcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIENvbm5lY3Rvck5vdENvbm5lY3RlZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0Nvbm5lY3RvciBub3QgY29ubmVjdGVkLicpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnQ29ubmVjdG9yTm90Q29ubmVjdGVkRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDb25uZWN0b3JOb3RGb3VuZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0Nvbm5lY3RvciBub3QgZm91bmQuJyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdDb25uZWN0b3JOb3RGb3VuZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ29ubmVjdG9yQWNjb3VudE5vdEZvdW5kRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgYWRkcmVzcywgY29ubmVjdG9yLCB9KSB7XG4gICAgICAgIHN1cGVyKGBBY2NvdW50IFwiJHthZGRyZXNzfVwiIG5vdCBmb3VuZCBmb3IgY29ubmVjdG9yIFwiJHtjb25uZWN0b3IubmFtZX1cIi5gKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0Nvbm5lY3RvckFjY291bnROb3RGb3VuZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ29ubmVjdG9yQ2hhaW5NaXNtYXRjaEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGNvbm5lY3Rpb25DaGFpbklkLCBjb25uZWN0b3JDaGFpbklkLCB9KSB7XG4gICAgICAgIHN1cGVyKGBUaGUgY3VycmVudCBjaGFpbiBvZiB0aGUgY29ubmVjdG9yIChpZDogJHtjb25uZWN0b3JDaGFpbklkfSkgZG9lcyBub3QgbWF0Y2ggdGhlIGNvbm5lY3Rpb24ncyBjaGFpbiAoaWQ6ICR7Y29ubmVjdGlvbkNoYWluSWR9KS5gLCB7XG4gICAgICAgICAgICBtZXRhTWVzc2FnZXM6IFtcbiAgICAgICAgICAgICAgICBgQ3VycmVudCBDaGFpbiBJRDogICR7Y29ubmVjdG9yQ2hhaW5JZH1gLFxuICAgICAgICAgICAgICAgIGBFeHBlY3RlZCBDaGFpbiBJRDogJHtjb25uZWN0aW9uQ2hhaW5JZH1gLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdDb25uZWN0b3JDaGFpbk1pc21hdGNoRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDb25uZWN0b3JVbmF2YWlsYWJsZVJlY29ubmVjdGluZ0Vycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGNvbm5lY3RvciB9KSB7XG4gICAgICAgIHN1cGVyKGBDb25uZWN0b3IgXCIke2Nvbm5lY3Rvci5uYW1lfVwiIHVuYXZhaWxhYmxlIHdoaWxlIHJlY29ubmVjdGluZy5gLCB7XG4gICAgICAgICAgICBkZXRhaWxzOiBbXG4gICAgICAgICAgICAgICAgJ0R1cmluZyB0aGUgcmVjb25uZWN0aW9uIHN0ZXAsIHRoZSBvbmx5IGNvbm5lY3RvciBtZXRob2RzIGd1YXJhbnRlZWQgdG8gYmUgYXZhaWxhYmxlIGFyZTogYGlkYCwgYG5hbWVgLCBgdHlwZWAsIGB1aWRgLicsXG4gICAgICAgICAgICAgICAgJ0FsbCBvdGhlciBtZXRob2RzIGFyZSBub3QgZ3VhcmFudGVlZCB0byBiZSBhdmFpbGFibGUgdW50aWwgcmVjb25uZWN0aW9uIGNvbXBsZXRlcyBhbmQgY29ubmVjdG9ycyBhcmUgZnVsbHkgcmVzdG9yZWQuJyxcbiAgICAgICAgICAgICAgICAnVGhpcyBlcnJvciBjb21tb25seSBvY2N1cnMgZm9yIGNvbm5lY3RvcnMgdGhhdCBhc3luY2hyb25vdXNseSBpbmplY3QgYWZ0ZXIgcmVjb25uZWN0aW9uIGhhcyBhbHJlYWR5IHN0YXJ0ZWQuJyxcbiAgICAgICAgICAgIF0uam9pbignICcpLFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0Nvbm5lY3RvclVuYXZhaWxhYmxlUmVjb25uZWN0aW5nRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmZpZy5qcy5tYXAiXSwibmFtZXMiOlsiQmFzZUVycm9yIiwiQ2hhaW5Ob3RDb25maWd1cmVkRXJyb3IiLCJjb25zdHJ1Y3RvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiLCJDb25uZWN0b3JBbHJlYWR5Q29ubmVjdGVkRXJyb3IiLCJDb25uZWN0b3JOb3RDb25uZWN0ZWRFcnJvciIsIkNvbm5lY3Rvck5vdEZvdW5kRXJyb3IiLCJDb25uZWN0b3JBY2NvdW50Tm90Rm91bmRFcnJvciIsImFkZHJlc3MiLCJjb25uZWN0b3IiLCJuYW1lIiwiQ29ubmVjdG9yQ2hhaW5NaXNtYXRjaEVycm9yIiwiY29ubmVjdGlvbkNoYWluSWQiLCJjb25uZWN0b3JDaGFpbklkIiwibWV0YU1lc3NhZ2VzIiwiQ29ubmVjdG9yVW5hdmFpbGFibGVSZWNvbm5lY3RpbmdFcnJvciIsImRldGFpbHMiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/connector.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProviderNotFoundError: () => (/* binding */ ProviderNotFoundError),\n/* harmony export */   SwitchChainNotSupportedError: () => (/* binding */ SwitchChainNotSupportedError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\");\n\nclass ProviderNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Provider not found.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ProviderNotFoundError\"\n        });\n    }\n}\nclass SwitchChainNotSupportedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ connector }){\n        super(`\"${connector.name}\" does not support programmatic chain switching.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"SwitchChainNotSupportedError\"\n        });\n    }\n} //# sourceMappingURL=connector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vZXJyb3JzL2Nvbm5lY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDL0IsTUFBTUMsOEJBQThCRCwrQ0FBU0E7SUFDaERFLGFBQWM7UUFDVixLQUFLLENBQUM7UUFDTkMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRO1lBQ2hDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPO1FBQ1g7SUFDSjtBQUNKO0FBQ08sTUFBTUMscUNBQXFDVCwrQ0FBU0E7SUFDdkRFLFlBQVksRUFBRVEsU0FBUyxFQUFFLENBQUU7UUFDdkIsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFQSxVQUFVQyxJQUFJLENBQUMsZ0RBQWdELENBQUM7UUFDMUVSLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO0lBQ0o7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2Vycm9ycy9jb25uZWN0b3IuanM/OTVlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlRXJyb3IgfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNsYXNzIFByb3ZpZGVyTm90Rm91bmRFcnJvciBleHRlbmRzIEJhc2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdQcm92aWRlciBub3QgZm91bmQuJyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdQcm92aWRlck5vdEZvdW5kRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBTd2l0Y2hDaGFpbk5vdFN1cHBvcnRlZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGNvbm5lY3RvciB9KSB7XG4gICAgICAgIHN1cGVyKGBcIiR7Y29ubmVjdG9yLm5hbWV9XCIgZG9lcyBub3Qgc3VwcG9ydCBwcm9ncmFtbWF0aWMgY2hhaW4gc3dpdGNoaW5nLmApO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnU3dpdGNoQ2hhaW5Ob3RTdXBwb3J0ZWRFcnJvcidcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdG9yLmpzLm1hcCJdLCJuYW1lcyI6WyJCYXNlRXJyb3IiLCJQcm92aWRlck5vdEZvdW5kRXJyb3IiLCJjb25zdHJ1Y3RvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiLCJTd2l0Y2hDaGFpbk5vdFN1cHBvcnRlZEVycm9yIiwiY29ubmVjdG9yIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/hydrate.js":
/*!******************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/hydrate.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hydrate: () => (/* binding */ hydrate)\n/* harmony export */ });\n/* harmony import */ var _actions_reconnect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions/reconnect.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js\");\n\nfunction hydrate(config, parameters) {\n    const { initialState, reconnectOnMount } = parameters;\n    if (initialState && !config._internal.store.persist.hasHydrated()) config.setState({\n        ...initialState,\n        chainId: config.chains.some((x)=>x.id === initialState.chainId) ? initialState.chainId : config.chains[0].id,\n        connections: reconnectOnMount ? initialState.connections : new Map(),\n        status: reconnectOnMount ? \"reconnecting\" : \"disconnected\"\n    });\n    return {\n        async onMount () {\n            if (config._internal.ssr) {\n                await config._internal.store.persist.rehydrate();\n                if (config._internal.mipd) {\n                    config._internal.connectors.setState((connectors)=>{\n                        const rdnsSet = new Set();\n                        for (const connector of connectors ?? []){\n                            if (connector.rdns) {\n                                const rdnsValues = Array.isArray(connector.rdns) ? connector.rdns : [\n                                    connector.rdns\n                                ];\n                                for (const rdns of rdnsValues){\n                                    rdnsSet.add(rdns);\n                                }\n                            }\n                        }\n                        const mipdConnectors = [];\n                        const providers = config._internal.mipd?.getProviders() ?? [];\n                        for (const provider of providers){\n                            if (rdnsSet.has(provider.info.rdns)) continue;\n                            const connectorFn = config._internal.connectors.providerDetailToConnector(provider);\n                            const connector = config._internal.connectors.setup(connectorFn);\n                            mipdConnectors.push(connector);\n                        }\n                        return [\n                            ...connectors,\n                            ...mipdConnectors\n                        ];\n                    });\n                }\n            }\n            if (reconnectOnMount) (0,_actions_reconnect_js__WEBPACK_IMPORTED_MODULE_0__.reconnect)(config);\n            else if (config.storage) // Reset connections that may have been hydrated from storage.\n            config.setState((x)=>({\n                    ...x,\n                    connections: new Map()\n                }));\n        }\n    };\n} //# sourceMappingURL=hydrate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vaHlkcmF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUM1QyxTQUFTQyxRQUFRQyxNQUFNLEVBQUVDLFVBQVU7SUFDdEMsTUFBTSxFQUFFQyxZQUFZLEVBQUVDLGdCQUFnQixFQUFFLEdBQUdGO0lBQzNDLElBQUlDLGdCQUFnQixDQUFDRixPQUFPSSxTQUFTLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDQyxXQUFXLElBQzNEUCxPQUFPUSxRQUFRLENBQUM7UUFDWixHQUFHTixZQUFZO1FBQ2ZPLFNBQVNULE9BQU9VLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUNDLElBQU1BLEVBQUVDLEVBQUUsS0FBS1gsYUFBYU8sT0FBTyxJQUMxRFAsYUFBYU8sT0FBTyxHQUNwQlQsT0FBT1UsTUFBTSxDQUFDLEVBQUUsQ0FBQ0csRUFBRTtRQUN6QkMsYUFBYVgsbUJBQW1CRCxhQUFhWSxXQUFXLEdBQUcsSUFBSUM7UUFDL0RDLFFBQVFiLG1CQUFtQixpQkFBaUI7SUFDaEQ7SUFDSixPQUFPO1FBQ0gsTUFBTWM7WUFDRixJQUFJakIsT0FBT0ksU0FBUyxDQUFDYyxHQUFHLEVBQUU7Z0JBQ3RCLE1BQU1sQixPQUFPSSxTQUFTLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDYSxTQUFTO2dCQUM5QyxJQUFJbkIsT0FBT0ksU0FBUyxDQUFDZ0IsSUFBSSxFQUFFO29CQUN2QnBCLE9BQU9JLFNBQVMsQ0FBQ2lCLFVBQVUsQ0FBQ2IsUUFBUSxDQUFDLENBQUNhO3dCQUNsQyxNQUFNQyxVQUFVLElBQUlDO3dCQUNwQixLQUFLLE1BQU1DLGFBQWFILGNBQWMsRUFBRSxDQUFFOzRCQUN0QyxJQUFJRyxVQUFVQyxJQUFJLEVBQUU7Z0NBQ2hCLE1BQU1DLGFBQWFDLE1BQU1DLE9BQU8sQ0FBQ0osVUFBVUMsSUFBSSxJQUN6Q0QsVUFBVUMsSUFBSSxHQUNkO29DQUFDRCxVQUFVQyxJQUFJO2lDQUFDO2dDQUN0QixLQUFLLE1BQU1BLFFBQVFDLFdBQVk7b0NBQzNCSixRQUFRTyxHQUFHLENBQUNKO2dDQUNoQjs0QkFDSjt3QkFDSjt3QkFDQSxNQUFNSyxpQkFBaUIsRUFBRTt3QkFDekIsTUFBTUMsWUFBWS9CLE9BQU9JLFNBQVMsQ0FBQ2dCLElBQUksRUFBRVksa0JBQWtCLEVBQUU7d0JBQzdELEtBQUssTUFBTUMsWUFBWUYsVUFBVzs0QkFDOUIsSUFBSVQsUUFBUVksR0FBRyxDQUFDRCxTQUFTRSxJQUFJLENBQUNWLElBQUksR0FDOUI7NEJBQ0osTUFBTVcsY0FBY3BDLE9BQU9JLFNBQVMsQ0FBQ2lCLFVBQVUsQ0FBQ2dCLHlCQUF5QixDQUFDSjs0QkFDMUUsTUFBTVQsWUFBWXhCLE9BQU9JLFNBQVMsQ0FBQ2lCLFVBQVUsQ0FBQ2lCLEtBQUssQ0FBQ0Y7NEJBQ3BETixlQUFlUyxJQUFJLENBQUNmO3dCQUN4Qjt3QkFDQSxPQUFPOytCQUFJSDsrQkFBZVM7eUJBQWU7b0JBQzdDO2dCQUNKO1lBQ0o7WUFDQSxJQUFJM0Isa0JBQ0FMLGdFQUFTQSxDQUFDRTtpQkFDVCxJQUFJQSxPQUFPd0MsT0FBTyxFQUNuQiw4REFBOEQ7WUFDOUR4QyxPQUFPUSxRQUFRLENBQUMsQ0FBQ0ksSUFBTztvQkFDcEIsR0FBR0EsQ0FBQztvQkFDSkUsYUFBYSxJQUFJQztnQkFDckI7UUFDUjtJQUNKO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9oeWRyYXRlLmpzPzI3YzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVjb25uZWN0IH0gZnJvbSAnLi9hY3Rpb25zL3JlY29ubmVjdC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gaHlkcmF0ZShjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGluaXRpYWxTdGF0ZSwgcmVjb25uZWN0T25Nb3VudCB9ID0gcGFyYW1ldGVycztcbiAgICBpZiAoaW5pdGlhbFN0YXRlICYmICFjb25maWcuX2ludGVybmFsLnN0b3JlLnBlcnNpc3QuaGFzSHlkcmF0ZWQoKSlcbiAgICAgICAgY29uZmlnLnNldFN0YXRlKHtcbiAgICAgICAgICAgIC4uLmluaXRpYWxTdGF0ZSxcbiAgICAgICAgICAgIGNoYWluSWQ6IGNvbmZpZy5jaGFpbnMuc29tZSgoeCkgPT4geC5pZCA9PT0gaW5pdGlhbFN0YXRlLmNoYWluSWQpXG4gICAgICAgICAgICAgICAgPyBpbml0aWFsU3RhdGUuY2hhaW5JZFxuICAgICAgICAgICAgICAgIDogY29uZmlnLmNoYWluc1swXS5pZCxcbiAgICAgICAgICAgIGNvbm5lY3Rpb25zOiByZWNvbm5lY3RPbk1vdW50ID8gaW5pdGlhbFN0YXRlLmNvbm5lY3Rpb25zIDogbmV3IE1hcCgpLFxuICAgICAgICAgICAgc3RhdHVzOiByZWNvbm5lY3RPbk1vdW50ID8gJ3JlY29ubmVjdGluZycgOiAnZGlzY29ubmVjdGVkJyxcbiAgICAgICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXN5bmMgb25Nb3VudCgpIHtcbiAgICAgICAgICAgIGlmIChjb25maWcuX2ludGVybmFsLnNzcikge1xuICAgICAgICAgICAgICAgIGF3YWl0IGNvbmZpZy5faW50ZXJuYWwuc3RvcmUucGVyc2lzdC5yZWh5ZHJhdGUoKTtcbiAgICAgICAgICAgICAgICBpZiAoY29uZmlnLl9pbnRlcm5hbC5taXBkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZy5faW50ZXJuYWwuY29ubmVjdG9ycy5zZXRTdGF0ZSgoY29ubmVjdG9ycykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmRuc1NldCA9IG5ldyBTZXQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY29ubmVjdG9yIG9mIGNvbm5lY3RvcnMgPz8gW10pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29ubmVjdG9yLnJkbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmRuc1ZhbHVlcyA9IEFycmF5LmlzQXJyYXkoY29ubmVjdG9yLnJkbnMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGNvbm5lY3Rvci5yZG5zXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFtjb25uZWN0b3IucmRuc107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcmRucyBvZiByZG5zVmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZG5zU2V0LmFkZChyZG5zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1pcGRDb25uZWN0b3JzID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm92aWRlcnMgPSBjb25maWcuX2ludGVybmFsLm1pcGQ/LmdldFByb3ZpZGVycygpID8/IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBwcm92aWRlciBvZiBwcm92aWRlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmRuc1NldC5oYXMocHJvdmlkZXIuaW5mby5yZG5zKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29ubmVjdG9yRm4gPSBjb25maWcuX2ludGVybmFsLmNvbm5lY3RvcnMucHJvdmlkZXJEZXRhaWxUb0Nvbm5lY3Rvcihwcm92aWRlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29ubmVjdG9yID0gY29uZmlnLl9pbnRlcm5hbC5jb25uZWN0b3JzLnNldHVwKGNvbm5lY3RvckZuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaXBkQ29ubmVjdG9ycy5wdXNoKGNvbm5lY3Rvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWy4uLmNvbm5lY3RvcnMsIC4uLm1pcGRDb25uZWN0b3JzXTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlY29ubmVjdE9uTW91bnQpXG4gICAgICAgICAgICAgICAgcmVjb25uZWN0KGNvbmZpZyk7XG4gICAgICAgICAgICBlbHNlIGlmIChjb25maWcuc3RvcmFnZSlcbiAgICAgICAgICAgICAgICAvLyBSZXNldCBjb25uZWN0aW9ucyB0aGF0IG1heSBoYXZlIGJlZW4gaHlkcmF0ZWQgZnJvbSBzdG9yYWdlLlxuICAgICAgICAgICAgICAgIGNvbmZpZy5zZXRTdGF0ZSgoeCkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdGlvbnM6IG5ldyBNYXAoKSxcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh5ZHJhdGUuanMubWFwIl0sIm5hbWVzIjpbInJlY29ubmVjdCIsImh5ZHJhdGUiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiaW5pdGlhbFN0YXRlIiwicmVjb25uZWN0T25Nb3VudCIsIl9pbnRlcm5hbCIsInN0b3JlIiwicGVyc2lzdCIsImhhc0h5ZHJhdGVkIiwic2V0U3RhdGUiLCJjaGFpbklkIiwiY2hhaW5zIiwic29tZSIsIngiLCJpZCIsImNvbm5lY3Rpb25zIiwiTWFwIiwic3RhdHVzIiwib25Nb3VudCIsInNzciIsInJlaHlkcmF0ZSIsIm1pcGQiLCJjb25uZWN0b3JzIiwicmRuc1NldCIsIlNldCIsImNvbm5lY3RvciIsInJkbnMiLCJyZG5zVmFsdWVzIiwiQXJyYXkiLCJpc0FycmF5IiwiYWRkIiwibWlwZENvbm5lY3RvcnMiLCJwcm92aWRlcnMiLCJnZXRQcm92aWRlcnMiLCJwcm92aWRlciIsImhhcyIsImluZm8iLCJjb25uZWN0b3JGbiIsInByb3ZpZGVyRGV0YWlsVG9Db25uZWN0b3IiLCJzZXR1cCIsInB1c2giLCJzdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/hydrate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/connect.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/connect.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectMutationOptions: () => (/* binding */ connectMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_connect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/connect.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/connect.js\");\n\nfunction connectMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_connect_js__WEBPACK_IMPORTED_MODULE_0__.connect)(config, variables);\n        },\n        mutationKey: [\n            \"connect\"\n        ]\n    };\n} //# sourceMappingURL=connect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvY29ubmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUMxQyxTQUFTQyx1QkFBdUJDLE1BQU07SUFDekMsT0FBTztRQUNIQyxZQUFXQyxTQUFTO1lBQ2hCLE9BQU9KLDREQUFPQSxDQUFDRSxRQUFRRTtRQUMzQjtRQUNBQyxhQUFhO1lBQUM7U0FBVTtJQUM1QjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvY29ubmVjdC5qcz8wYmE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbm5lY3QsIH0gZnJvbSAnLi4vYWN0aW9ucy9jb25uZWN0LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBjb25uZWN0TXV0YXRpb25PcHRpb25zKGNvbmZpZykge1xuICAgIHJldHVybiB7XG4gICAgICAgIG11dGF0aW9uRm4odmFyaWFibGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gY29ubmVjdChjb25maWcsIHZhcmlhYmxlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIG11dGF0aW9uS2V5OiBbJ2Nvbm5lY3QnXSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29ubmVjdC5qcy5tYXAiXSwibmFtZXMiOlsiY29ubmVjdCIsImNvbm5lY3RNdXRhdGlvbk9wdGlvbnMiLCJjb25maWciLCJtdXRhdGlvbkZuIiwidmFyaWFibGVzIiwibXV0YXRpb25LZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/connect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/disconnect.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/disconnect.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disconnectMutationOptions: () => (/* binding */ disconnectMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_disconnect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/disconnect.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/disconnect.js\");\n\nfunction disconnectMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_disconnect_js__WEBPACK_IMPORTED_MODULE_0__.disconnect)(config, variables);\n        },\n        mutationKey: [\n            \"disconnect\"\n        ]\n    };\n} //# sourceMappingURL=disconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZGlzY29ubmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RDtBQUNoRCxTQUFTQywwQkFBMEJDLE1BQU07SUFDNUMsT0FBTztRQUNIQyxZQUFXQyxTQUFTO1lBQ2hCLE9BQU9KLGtFQUFVQSxDQUFDRSxRQUFRRTtRQUM5QjtRQUNBQyxhQUFhO1lBQUM7U0FBYTtJQUMvQjtBQUNKLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZGlzY29ubmVjdC5qcz8yMTVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRpc2Nvbm5lY3QsIH0gZnJvbSAnLi4vYWN0aW9ucy9kaXNjb25uZWN0LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkaXNjb25uZWN0TXV0YXRpb25PcHRpb25zKGNvbmZpZykge1xuICAgIHJldHVybiB7XG4gICAgICAgIG11dGF0aW9uRm4odmFyaWFibGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gZGlzY29ubmVjdChjb25maWcsIHZhcmlhYmxlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIG11dGF0aW9uS2V5OiBbJ2Rpc2Nvbm5lY3QnXSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlzY29ubmVjdC5qcy5tYXAiXSwibmFtZXMiOlsiZGlzY29ubmVjdCIsImRpc2Nvbm5lY3RNdXRhdGlvbk9wdGlvbnMiLCJjb25maWciLCJtdXRhdGlvbkZuIiwidmFyaWFibGVzIiwibXV0YXRpb25LZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/disconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getBalance.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getBalance.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBalanceQueryKey: () => (/* binding */ getBalanceQueryKey),\n/* harmony export */   getBalanceQueryOptions: () => (/* binding */ getBalanceQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getBalance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getBalance.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBalance.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getBalanceQueryOptions(config, options = {}) {\n    return {\n        async queryFn ({ queryKey }) {\n            const { address, scopeKey: _, ...parameters } = queryKey[1];\n            if (!address) throw new Error(\"address is required\");\n            const balance = await (0,_actions_getBalance_js__WEBPACK_IMPORTED_MODULE_0__.getBalance)(config, {\n                ...parameters,\n                address\n            });\n            return balance ?? null;\n        },\n        queryKey: getBalanceQueryKey(options)\n    };\n}\nfunction getBalanceQueryKey(options = {}) {\n    return [\n        \"balance\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(options)\n    ];\n} //# sourceMappingURL=getBalance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0QmFsYW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVEO0FBQ1A7QUFDekMsU0FBU0UsdUJBQXVCQyxNQUFNLEVBQUVDLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZELE9BQU87UUFDSCxNQUFNQyxTQUFRLEVBQUVDLFFBQVEsRUFBRTtZQUN0QixNQUFNLEVBQUVDLE9BQU8sRUFBRUMsVUFBVUMsQ0FBQyxFQUFFLEdBQUdDLFlBQVksR0FBR0osUUFBUSxDQUFDLEVBQUU7WUFDM0QsSUFBSSxDQUFDQyxTQUNELE1BQU0sSUFBSUksTUFBTTtZQUNwQixNQUFNQyxVQUFVLE1BQU1aLGtFQUFVQSxDQUFDRyxRQUFRO2dCQUNyQyxHQUFHTyxVQUFVO2dCQUNiSDtZQUNKO1lBQ0EsT0FBT0ssV0FBVztRQUN0QjtRQUNBTixVQUFVTyxtQkFBbUJUO0lBQ2pDO0FBQ0o7QUFDTyxTQUFTUyxtQkFBbUJULFVBQVUsQ0FBQyxDQUFDO0lBQzNDLE9BQU87UUFBQztRQUFXSCw2REFBa0JBLENBQUNHO0tBQVM7QUFDbkQsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9xdWVyeS9nZXRCYWxhbmNlLmpzPzQ2YTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QmFsYW5jZSwgfSBmcm9tICcuLi9hY3Rpb25zL2dldEJhbGFuY2UuanMnO1xuaW1wb3J0IHsgZmlsdGVyUXVlcnlPcHRpb25zIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0QmFsYW5jZVF1ZXJ5T3B0aW9ucyhjb25maWcsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFzeW5jIHF1ZXJ5Rm4oeyBxdWVyeUtleSB9KSB7XG4gICAgICAgICAgICBjb25zdCB7IGFkZHJlc3MsIHNjb3BlS2V5OiBfLCAuLi5wYXJhbWV0ZXJzIH0gPSBxdWVyeUtleVsxXTtcbiAgICAgICAgICAgIGlmICghYWRkcmVzcylcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FkZHJlc3MgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgICAgIGNvbnN0IGJhbGFuY2UgPSBhd2FpdCBnZXRCYWxhbmNlKGNvbmZpZywge1xuICAgICAgICAgICAgICAgIC4uLnBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgYWRkcmVzcyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIGJhbGFuY2UgPz8gbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgcXVlcnlLZXk6IGdldEJhbGFuY2VRdWVyeUtleShvcHRpb25zKSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEJhbGFuY2VRdWVyeUtleShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gWydiYWxhbmNlJywgZmlsdGVyUXVlcnlPcHRpb25zKG9wdGlvbnMpXTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEJhbGFuY2UuanMubWFwIl0sIm5hbWVzIjpbImdldEJhbGFuY2UiLCJmaWx0ZXJRdWVyeU9wdGlvbnMiLCJnZXRCYWxhbmNlUXVlcnlPcHRpb25zIiwiY29uZmlnIiwib3B0aW9ucyIsInF1ZXJ5Rm4iLCJxdWVyeUtleSIsImFkZHJlc3MiLCJzY29wZUtleSIsIl8iLCJwYXJhbWV0ZXJzIiwiRXJyb3IiLCJiYWxhbmNlIiwiZ2V0QmFsYW5jZVF1ZXJ5S2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getBalance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsAvatar.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getEnsAvatar.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsAvatarQueryKey: () => (/* binding */ getEnsAvatarQueryKey),\n/* harmony export */   getEnsAvatarQueryOptions: () => (/* binding */ getEnsAvatarQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getEnsAvatar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getEnsAvatar.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getEnsAvatarQueryOptions(config, options = {}) {\n    return {\n        async queryFn ({ queryKey }) {\n            const { name, scopeKey: _, ...parameters } = queryKey[1];\n            if (!name) throw new Error(\"name is required\");\n            return (0,_actions_getEnsAvatar_js__WEBPACK_IMPORTED_MODULE_0__.getEnsAvatar)(config, {\n                ...parameters,\n                name\n            });\n        },\n        queryKey: getEnsAvatarQueryKey(options)\n    };\n}\nfunction getEnsAvatarQueryKey(options = {}) {\n    return [\n        \"ensAvatar\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(options)\n    ];\n} //# sourceMappingURL=getEnsAvatar.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0RW5zQXZhdGFyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDWDtBQUN6QyxTQUFTRSx5QkFBeUJDLE1BQU0sRUFBRUMsVUFBVSxDQUFDLENBQUM7SUFDekQsT0FBTztRQUNILE1BQU1DLFNBQVEsRUFBRUMsUUFBUSxFQUFFO1lBQ3RCLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxVQUFVQyxDQUFDLEVBQUUsR0FBR0MsWUFBWSxHQUFHSixRQUFRLENBQUMsRUFBRTtZQUN4RCxJQUFJLENBQUNDLE1BQ0QsTUFBTSxJQUFJSSxNQUFNO1lBQ3BCLE9BQU9YLHNFQUFZQSxDQUFDRyxRQUFRO2dCQUFFLEdBQUdPLFVBQVU7Z0JBQUVIO1lBQUs7UUFDdEQ7UUFDQUQsVUFBVU0scUJBQXFCUjtJQUNuQztBQUNKO0FBQ08sU0FBU1EscUJBQXFCUixVQUFVLENBQUMsQ0FBQztJQUM3QyxPQUFPO1FBQUM7UUFBYUgsNkRBQWtCQSxDQUFDRztLQUFTO0FBQ3JELEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0RW5zQXZhdGFyLmpzPzNkMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RW5zQXZhdGFyLCB9IGZyb20gJy4uL2FjdGlvbnMvZ2V0RW5zQXZhdGFyLmpzJztcbmltcG9ydCB7IGZpbHRlclF1ZXJ5T3B0aW9ucyB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVuc0F2YXRhclF1ZXJ5T3B0aW9ucyhjb25maWcsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFzeW5jIHF1ZXJ5Rm4oeyBxdWVyeUtleSB9KSB7XG4gICAgICAgICAgICBjb25zdCB7IG5hbWUsIHNjb3BlS2V5OiBfLCAuLi5wYXJhbWV0ZXJzIH0gPSBxdWVyeUtleVsxXTtcbiAgICAgICAgICAgIGlmICghbmFtZSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25hbWUgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgICAgIHJldHVybiBnZXRFbnNBdmF0YXIoY29uZmlnLCB7IC4uLnBhcmFtZXRlcnMsIG5hbWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHF1ZXJ5S2V5OiBnZXRFbnNBdmF0YXJRdWVyeUtleShvcHRpb25zKSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEVuc0F2YXRhclF1ZXJ5S2V5KG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBbJ2Vuc0F2YXRhcicsIGZpbHRlclF1ZXJ5T3B0aW9ucyhvcHRpb25zKV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRFbnNBdmF0YXIuanMubWFwIl0sIm5hbWVzIjpbImdldEVuc0F2YXRhciIsImZpbHRlclF1ZXJ5T3B0aW9ucyIsImdldEVuc0F2YXRhclF1ZXJ5T3B0aW9ucyIsImNvbmZpZyIsIm9wdGlvbnMiLCJxdWVyeUZuIiwicXVlcnlLZXkiLCJuYW1lIiwic2NvcGVLZXkiLCJfIiwicGFyYW1ldGVycyIsIkVycm9yIiwiZ2V0RW5zQXZhdGFyUXVlcnlLZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsAvatar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsName.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getEnsName.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsNameQueryKey: () => (/* binding */ getEnsNameQueryKey),\n/* harmony export */   getEnsNameQueryOptions: () => (/* binding */ getEnsNameQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getEnsName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getEnsName.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getEnsNameQueryOptions(config, options = {}) {\n    return {\n        async queryFn ({ queryKey }) {\n            const { address, scopeKey: _, ...parameters } = queryKey[1];\n            if (!address) throw new Error(\"address is required\");\n            return (0,_actions_getEnsName_js__WEBPACK_IMPORTED_MODULE_0__.getEnsName)(config, {\n                ...parameters,\n                address\n            });\n        },\n        queryKey: getEnsNameQueryKey(options)\n    };\n}\nfunction getEnsNameQueryKey(options = {}) {\n    return [\n        \"ensName\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(options)\n    ];\n} //# sourceMappingURL=getEnsName.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0RW5zTmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVEO0FBQ1A7QUFDekMsU0FBU0UsdUJBQXVCQyxNQUFNLEVBQUVDLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZELE9BQU87UUFDSCxNQUFNQyxTQUFRLEVBQUVDLFFBQVEsRUFBRTtZQUN0QixNQUFNLEVBQUVDLE9BQU8sRUFBRUMsVUFBVUMsQ0FBQyxFQUFFLEdBQUdDLFlBQVksR0FBR0osUUFBUSxDQUFDLEVBQUU7WUFDM0QsSUFBSSxDQUFDQyxTQUNELE1BQU0sSUFBSUksTUFBTTtZQUNwQixPQUFPWCxrRUFBVUEsQ0FBQ0csUUFBUTtnQkFBRSxHQUFHTyxVQUFVO2dCQUFFSDtZQUFRO1FBQ3ZEO1FBQ0FELFVBQVVNLG1CQUFtQlI7SUFDakM7QUFDSjtBQUNPLFNBQVNRLG1CQUFtQlIsVUFBVSxDQUFDLENBQUM7SUFDM0MsT0FBTztRQUFDO1FBQVdILDZEQUFrQkEsQ0FBQ0c7S0FBUztBQUNuRCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L2dldEVuc05hbWUuanM/NTI0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFbnNOYW1lLCB9IGZyb20gJy4uL2FjdGlvbnMvZ2V0RW5zTmFtZS5qcyc7XG5pbXBvcnQgeyBmaWx0ZXJRdWVyeU9wdGlvbnMgfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnNOYW1lUXVlcnlPcHRpb25zKGNvbmZpZywgb3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXN5bmMgcXVlcnlGbih7IHF1ZXJ5S2V5IH0pIHtcbiAgICAgICAgICAgIGNvbnN0IHsgYWRkcmVzcywgc2NvcGVLZXk6IF8sIC4uLnBhcmFtZXRlcnMgfSA9IHF1ZXJ5S2V5WzFdO1xuICAgICAgICAgICAgaWYgKCFhZGRyZXNzKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignYWRkcmVzcyBpcyByZXF1aXJlZCcpO1xuICAgICAgICAgICAgcmV0dXJuIGdldEVuc05hbWUoY29uZmlnLCB7IC4uLnBhcmFtZXRlcnMsIGFkZHJlc3MgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHF1ZXJ5S2V5OiBnZXRFbnNOYW1lUXVlcnlLZXkob3B0aW9ucyksXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnNOYW1lUXVlcnlLZXkob3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIFsnZW5zTmFtZScsIGZpbHRlclF1ZXJ5T3B0aW9ucyhvcHRpb25zKV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRFbnNOYW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRFbnNOYW1lIiwiZmlsdGVyUXVlcnlPcHRpb25zIiwiZ2V0RW5zTmFtZVF1ZXJ5T3B0aW9ucyIsImNvbmZpZyIsIm9wdGlvbnMiLCJxdWVyeUZuIiwicXVlcnlLZXkiLCJhZGRyZXNzIiwic2NvcGVLZXkiLCJfIiwicGFyYW1ldGVycyIsIkVycm9yIiwiZ2V0RW5zTmFtZVF1ZXJ5S2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsName.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/signMessage.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/signMessage.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signMessageMutationOptions: () => (/* binding */ signMessageMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_signMessage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/signMessage.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/signMessage.js\");\n\nfunction signMessageMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_signMessage_js__WEBPACK_IMPORTED_MODULE_0__.signMessage)(config, variables);\n        },\n        mutationKey: [\n            \"signMessage\"\n        ]\n    };\n} //# sourceMappingURL=signMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvc2lnbk1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUQ7QUFDbEQsU0FBU0MsMkJBQTJCQyxNQUFNO0lBQzdDLE9BQU87UUFDSEMsWUFBV0MsU0FBUztZQUNoQixPQUFPSixvRUFBV0EsQ0FBQ0UsUUFBUUU7UUFDL0I7UUFDQUMsYUFBYTtZQUFDO1NBQWM7SUFDaEM7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L3NpZ25NZXNzYWdlLmpzP2UzMjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2lnbk1lc3NhZ2UsIH0gZnJvbSAnLi4vYWN0aW9ucy9zaWduTWVzc2FnZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gc2lnbk1lc3NhZ2VNdXRhdGlvbk9wdGlvbnMoY29uZmlnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbXV0YXRpb25Gbih2YXJpYWJsZXMpIHtcbiAgICAgICAgICAgIHJldHVybiBzaWduTWVzc2FnZShjb25maWcsIHZhcmlhYmxlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIG11dGF0aW9uS2V5OiBbJ3NpZ25NZXNzYWdlJ10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25NZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJzaWduTWVzc2FnZSIsInNpZ25NZXNzYWdlTXV0YXRpb25PcHRpb25zIiwiY29uZmlnIiwibXV0YXRpb25GbiIsInZhcmlhYmxlcyIsIm11dGF0aW9uS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/signMessage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/switchChain.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/switchChain.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   switchChainMutationOptions: () => (/* binding */ switchChainMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_switchChain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/switchChain.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/switchChain.js\");\n\nfunction switchChainMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_switchChain_js__WEBPACK_IMPORTED_MODULE_0__.switchChain)(config, variables);\n        },\n        mutationKey: [\n            \"switchChain\"\n        ]\n    };\n} //# sourceMappingURL=switchChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvc3dpdGNoQ2hhaW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUQ7QUFDbEQsU0FBU0MsMkJBQTJCQyxNQUFNO0lBQzdDLE9BQU87UUFDSEMsWUFBV0MsU0FBUztZQUNoQixPQUFPSixvRUFBV0EsQ0FBQ0UsUUFBUUU7UUFDL0I7UUFDQUMsYUFBYTtZQUFDO1NBQWM7SUFDaEM7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L3N3aXRjaENoYWluLmpzPzNhYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3dpdGNoQ2hhaW4sIH0gZnJvbSAnLi4vYWN0aW9ucy9zd2l0Y2hDaGFpbi5qcyc7XG5leHBvcnQgZnVuY3Rpb24gc3dpdGNoQ2hhaW5NdXRhdGlvbk9wdGlvbnMoY29uZmlnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbXV0YXRpb25Gbih2YXJpYWJsZXMpIHtcbiAgICAgICAgICAgIHJldHVybiBzd2l0Y2hDaGFpbihjb25maWcsIHZhcmlhYmxlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIG11dGF0aW9uS2V5OiBbJ3N3aXRjaENoYWluJ10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN3aXRjaENoYWluLmpzLm1hcCJdLCJuYW1lcyI6WyJzd2l0Y2hDaGFpbiIsInN3aXRjaENoYWluTXV0YXRpb25PcHRpb25zIiwiY29uZmlnIiwibXV0YXRpb25GbiIsInZhcmlhYmxlcyIsIm11dGF0aW9uS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/switchChain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterQueryOptions: () => (/* binding */ filterQueryOptions),\n/* harmony export */   hashFn: () => (/* binding */ hashFn),\n/* harmony export */   structuralSharing: () => (/* binding */ structuralSharing)\n/* harmony export */ });\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n\nfunction structuralSharing(oldData, newData) {\n    return (0,_tanstack_query_core__WEBPACK_IMPORTED_MODULE_0__.replaceEqualDeep)(oldData, newData);\n}\nfunction hashFn(queryKey) {\n    return JSON.stringify(queryKey, (_, value)=>{\n        if (isPlainObject(value)) return Object.keys(value).sort().reduce((result, key)=>{\n            result[key] = value[key];\n            return result;\n        }, {});\n        if (typeof value === \"bigint\") return value.toString();\n        return value;\n    });\n}\n// biome-ignore lint/complexity/noBannedTypes: using\nfunction isPlainObject(value) {\n    if (!hasObjectPrototype(value)) {\n        return false;\n    }\n    // If has modified constructor\n    const ctor = value.constructor;\n    if (typeof ctor === \"undefined\") return true;\n    // If has modified prototype\n    const prot = ctor.prototype;\n    if (!hasObjectPrototype(prot)) return false;\n    // If constructor does not have an Object-specific method\n    // biome-ignore lint/suspicious/noPrototypeBuiltins: using\n    if (!prot.hasOwnProperty(\"isPrototypeOf\")) return false;\n    // Most likely a plain Object\n    return true;\n}\nfunction hasObjectPrototype(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction filterQueryOptions(options) {\n    // destructuring is super fast\n    // biome-ignore format: no formatting\n    const { // import('@tanstack/query-core').QueryOptions\n    // biome-ignore lint/correctness/noUnusedVariables: tossing\n    _defaulted, behavior, gcTime, initialData, initialDataUpdatedAt, maxPages, meta, networkMode, queryFn, queryHash, queryKey, queryKeyHashFn, retry, retryDelay, structuralSharing, // import('@tanstack/query-core').InfiniteQueryObserverOptions\n    // biome-ignore lint/correctness/noUnusedVariables: tossing\n    getPreviousPageParam, getNextPageParam, initialPageParam, // import('@tanstack/react-query').UseQueryOptions\n    // biome-ignore lint/correctness/noUnusedVariables: tossing\n    _optimisticResults, enabled, notifyOnChangeProps, placeholderData, refetchInterval, refetchIntervalInBackground, refetchOnMount, refetchOnReconnect, refetchOnWindowFocus, retryOnMount, select, staleTime, suspense, throwOnError, ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // wagmi\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // biome-ignore lint/correctness/noUnusedVariables: tossing\n    config, connector, query, ...rest } = options;\n    return rest;\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUNqRCxTQUFTQyxrQkFBa0JDLE9BQU8sRUFBRUMsT0FBTztJQUM5QyxPQUFPSCxzRUFBZ0JBLENBQUNFLFNBQVNDO0FBQ3JDO0FBQ08sU0FBU0MsT0FBT0MsUUFBUTtJQUMzQixPQUFPQyxLQUFLQyxTQUFTLENBQUNGLFVBQVUsQ0FBQ0csR0FBR0M7UUFDaEMsSUFBSUMsY0FBY0QsUUFDZCxPQUFPRSxPQUFPQyxJQUFJLENBQUNILE9BQ2RJLElBQUksR0FDSkMsTUFBTSxDQUFDLENBQUNDLFFBQVFDO1lBQ2pCRCxNQUFNLENBQUNDLElBQUksR0FBR1AsS0FBSyxDQUFDTyxJQUFJO1lBQ3hCLE9BQU9EO1FBQ1gsR0FBRyxDQUFDO1FBQ1IsSUFBSSxPQUFPTixVQUFVLFVBQ2pCLE9BQU9BLE1BQU1RLFFBQVE7UUFDekIsT0FBT1I7SUFDWDtBQUNKO0FBQ0Esb0RBQW9EO0FBQ3BELFNBQVNDLGNBQWNELEtBQUs7SUFDeEIsSUFBSSxDQUFDUyxtQkFBbUJULFFBQVE7UUFDNUIsT0FBTztJQUNYO0lBQ0EsOEJBQThCO0lBQzlCLE1BQU1VLE9BQU9WLE1BQU1XLFdBQVc7SUFDOUIsSUFBSSxPQUFPRCxTQUFTLGFBQ2hCLE9BQU87SUFDWCw0QkFBNEI7SUFDNUIsTUFBTUUsT0FBT0YsS0FBS0csU0FBUztJQUMzQixJQUFJLENBQUNKLG1CQUFtQkcsT0FDcEIsT0FBTztJQUNYLHlEQUF5RDtJQUN6RCwwREFBMEQ7SUFDMUQsSUFBSSxDQUFDQSxLQUFLRSxjQUFjLENBQUMsa0JBQ3JCLE9BQU87SUFDWCw2QkFBNkI7SUFDN0IsT0FBTztBQUNYO0FBQ0EsU0FBU0wsbUJBQW1CTSxDQUFDO0lBQ3pCLE9BQU9iLE9BQU9XLFNBQVMsQ0FBQ0wsUUFBUSxDQUFDUSxJQUFJLENBQUNELE9BQU87QUFDakQ7QUFDTyxTQUFTRSxtQkFBbUJDLE9BQU87SUFDdEMsOEJBQThCO0lBQzlCLHFDQUFxQztJQUNyQyxNQUFNLEVBQ04sOENBQThDO0lBQzlDLDJEQUEyRDtJQUMzREMsVUFBVSxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRUMsV0FBVyxFQUFFQyxvQkFBb0IsRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLFdBQVcsRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUVoQyxRQUFRLEVBQUVpQyxjQUFjLEVBQUVDLEtBQUssRUFBRUMsVUFBVSxFQUFFdkMsaUJBQWlCLEVBQ2hMLDhEQUE4RDtJQUM5RCwyREFBMkQ7SUFDM0R3QyxvQkFBb0IsRUFBRUMsZ0JBQWdCLEVBQUVDLGdCQUFnQixFQUN4RCxrREFBa0Q7SUFDbEQsMkRBQTJEO0lBQzNEQyxrQkFBa0IsRUFBRUMsT0FBTyxFQUFFQyxtQkFBbUIsRUFBRUMsZUFBZSxFQUFFQyxlQUFlLEVBQUVDLDJCQUEyQixFQUFFQyxjQUFjLEVBQUVDLGtCQUFrQixFQUFFQyxvQkFBb0IsRUFBRUMsWUFBWSxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFQyxZQUFZLEVBQ2xPLGdJQUFnSTtJQUNoSSxRQUFRO0lBQ1IsZ0lBQWdJO0lBQ2hJLDJEQUEyRDtJQUMzREMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLEtBQUssRUFBRSxHQUFHQyxNQUFNLEdBQUdsQztJQUN0QyxPQUFPa0M7QUFDWCxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L3V0aWxzLmpzP2JiYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVwbGFjZUVxdWFsRGVlcCB9IGZyb20gJ0B0YW5zdGFjay9xdWVyeS1jb3JlJztcbmV4cG9ydCBmdW5jdGlvbiBzdHJ1Y3R1cmFsU2hhcmluZyhvbGREYXRhLCBuZXdEYXRhKSB7XG4gICAgcmV0dXJuIHJlcGxhY2VFcXVhbERlZXAob2xkRGF0YSwgbmV3RGF0YSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzaEZuKHF1ZXJ5S2V5KSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHF1ZXJ5S2V5LCAoXywgdmFsdWUpID0+IHtcbiAgICAgICAgaWYgKGlzUGxhaW5PYmplY3QodmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHZhbHVlKVxuICAgICAgICAgICAgICAgIC5zb3J0KClcbiAgICAgICAgICAgICAgICAucmVkdWNlKChyZXN1bHQsIGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gdmFsdWVba2V5XTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfSwge30pO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnYmlnaW50JylcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG59XG4vLyBiaW9tZS1pZ25vcmUgbGludC9jb21wbGV4aXR5L25vQmFubmVkVHlwZXM6IHVzaW5nXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KHZhbHVlKSB7XG4gICAgaWYgKCFoYXNPYmplY3RQcm90b3R5cGUodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gSWYgaGFzIG1vZGlmaWVkIGNvbnN0cnVjdG9yXG4gICAgY29uc3QgY3RvciA9IHZhbHVlLmNvbnN0cnVjdG9yO1xuICAgIGlmICh0eXBlb2YgY3RvciA9PT0gJ3VuZGVmaW5lZCcpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIC8vIElmIGhhcyBtb2RpZmllZCBwcm90b3R5cGVcbiAgICBjb25zdCBwcm90ID0gY3Rvci5wcm90b3R5cGU7XG4gICAgaWYgKCFoYXNPYmplY3RQcm90b3R5cGUocHJvdCkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAvLyBJZiBjb25zdHJ1Y3RvciBkb2VzIG5vdCBoYXZlIGFuIE9iamVjdC1zcGVjaWZpYyBtZXRob2RcbiAgICAvLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vUHJvdG90eXBlQnVpbHRpbnM6IHVzaW5nXG4gICAgaWYgKCFwcm90Lmhhc093blByb3BlcnR5KCdpc1Byb3RvdHlwZU9mJykpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAvLyBNb3N0IGxpa2VseSBhIHBsYWluIE9iamVjdFxuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaGFzT2JqZWN0UHJvdG90eXBlKG8pIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pID09PSAnW29iamVjdCBPYmplY3RdJztcbn1cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJRdWVyeU9wdGlvbnMob3B0aW9ucykge1xuICAgIC8vIGRlc3RydWN0dXJpbmcgaXMgc3VwZXIgZmFzdFxuICAgIC8vIGJpb21lLWlnbm9yZSBmb3JtYXQ6IG5vIGZvcm1hdHRpbmdcbiAgICBjb25zdCB7IFxuICAgIC8vIGltcG9ydCgnQHRhbnN0YWNrL3F1ZXJ5LWNvcmUnKS5RdWVyeU9wdGlvbnNcbiAgICAvLyBiaW9tZS1pZ25vcmUgbGludC9jb3JyZWN0bmVzcy9ub1VudXNlZFZhcmlhYmxlczogdG9zc2luZ1xuICAgIF9kZWZhdWx0ZWQsIGJlaGF2aW9yLCBnY1RpbWUsIGluaXRpYWxEYXRhLCBpbml0aWFsRGF0YVVwZGF0ZWRBdCwgbWF4UGFnZXMsIG1ldGEsIG5ldHdvcmtNb2RlLCBxdWVyeUZuLCBxdWVyeUhhc2gsIHF1ZXJ5S2V5LCBxdWVyeUtleUhhc2hGbiwgcmV0cnksIHJldHJ5RGVsYXksIHN0cnVjdHVyYWxTaGFyaW5nLCBcbiAgICAvLyBpbXBvcnQoJ0B0YW5zdGFjay9xdWVyeS1jb3JlJykuSW5maW5pdGVRdWVyeU9ic2VydmVyT3B0aW9uc1xuICAgIC8vIGJpb21lLWlnbm9yZSBsaW50L2NvcnJlY3RuZXNzL25vVW51c2VkVmFyaWFibGVzOiB0b3NzaW5nXG4gICAgZ2V0UHJldmlvdXNQYWdlUGFyYW0sIGdldE5leHRQYWdlUGFyYW0sIGluaXRpYWxQYWdlUGFyYW0sIFxuICAgIC8vIGltcG9ydCgnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JykuVXNlUXVlcnlPcHRpb25zXG4gICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvY29ycmVjdG5lc3Mvbm9VbnVzZWRWYXJpYWJsZXM6IHRvc3NpbmdcbiAgICBfb3B0aW1pc3RpY1Jlc3VsdHMsIGVuYWJsZWQsIG5vdGlmeU9uQ2hhbmdlUHJvcHMsIHBsYWNlaG9sZGVyRGF0YSwgcmVmZXRjaEludGVydmFsLCByZWZldGNoSW50ZXJ2YWxJbkJhY2tncm91bmQsIHJlZmV0Y2hPbk1vdW50LCByZWZldGNoT25SZWNvbm5lY3QsIHJlZmV0Y2hPbldpbmRvd0ZvY3VzLCByZXRyeU9uTW91bnQsIHNlbGVjdCwgc3RhbGVUaW1lLCBzdXNwZW5zZSwgdGhyb3dPbkVycm9yLCBcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgIC8vIHdhZ21pXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAvLyBiaW9tZS1pZ25vcmUgbGludC9jb3JyZWN0bmVzcy9ub1VudXNlZFZhcmlhYmxlczogdG9zc2luZ1xuICAgIGNvbmZpZywgY29ubmVjdG9yLCBxdWVyeSwgLi4ucmVzdCB9ID0gb3B0aW9ucztcbiAgICByZXR1cm4gcmVzdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJyZXBsYWNlRXF1YWxEZWVwIiwic3RydWN0dXJhbFNoYXJpbmciLCJvbGREYXRhIiwibmV3RGF0YSIsImhhc2hGbiIsInF1ZXJ5S2V5IiwiSlNPTiIsInN0cmluZ2lmeSIsIl8iLCJ2YWx1ZSIsImlzUGxhaW5PYmplY3QiLCJPYmplY3QiLCJrZXlzIiwic29ydCIsInJlZHVjZSIsInJlc3VsdCIsImtleSIsInRvU3RyaW5nIiwiaGFzT2JqZWN0UHJvdG90eXBlIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwibyIsImNhbGwiLCJmaWx0ZXJRdWVyeU9wdGlvbnMiLCJvcHRpb25zIiwiX2RlZmF1bHRlZCIsImJlaGF2aW9yIiwiZ2NUaW1lIiwiaW5pdGlhbERhdGEiLCJpbml0aWFsRGF0YVVwZGF0ZWRBdCIsIm1heFBhZ2VzIiwibWV0YSIsIm5ldHdvcmtNb2RlIiwicXVlcnlGbiIsInF1ZXJ5SGFzaCIsInF1ZXJ5S2V5SGFzaEZuIiwicmV0cnkiLCJyZXRyeURlbGF5IiwiZ2V0UHJldmlvdXNQYWdlUGFyYW0iLCJnZXROZXh0UGFnZVBhcmFtIiwiaW5pdGlhbFBhZ2VQYXJhbSIsIl9vcHRpbWlzdGljUmVzdWx0cyIsImVuYWJsZWQiLCJub3RpZnlPbkNoYW5nZVByb3BzIiwicGxhY2Vob2xkZXJEYXRhIiwicmVmZXRjaEludGVydmFsIiwicmVmZXRjaEludGVydmFsSW5CYWNrZ3JvdW5kIiwicmVmZXRjaE9uTW91bnQiLCJyZWZldGNoT25SZWNvbm5lY3QiLCJyZWZldGNoT25XaW5kb3dGb2N1cyIsInJldHJ5T25Nb3VudCIsInNlbGVjdCIsInN0YWxlVGltZSIsInN1c3BlbnNlIiwidGhyb3dPbkVycm9yIiwiY29uZmlnIiwiY29ubmVjdG9yIiwicXVlcnkiLCJyZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepEqual: () => (/* binding */ deepEqual)\n/* harmony export */ });\n/** Forked from https://github.com/epoberezkin/fast-deep-equal */ function deepEqual(a, b) {\n    if (a === b) return true;\n    if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n        if (a.constructor !== b.constructor) return false;\n        let length;\n        let i;\n        if (Array.isArray(a) && Array.isArray(b)) {\n            length = a.length;\n            if (length !== b.length) return false;\n            for(i = length; i-- !== 0;)if (!deepEqual(a[i], b[i])) return false;\n            return true;\n        }\n        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n        const keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length) return false;\n        for(i = length; i-- !== 0;)if (!Object.hasOwn(b, keys[i])) return false;\n        for(i = length; i-- !== 0;){\n            const key = keys[i];\n            if (key && !deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    // true if both NaN, false otherwise\n    // biome-ignore lint/suspicious/noSelfCompare: using\n    return a !== a && b !== b;\n} //# sourceMappingURL=deepEqual.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVlcEVxdWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSwrREFBK0QsR0FDeEQsU0FBU0EsVUFBVUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzFCLElBQUlELE1BQU1DLEdBQ04sT0FBTztJQUNYLElBQUlELEtBQUtDLEtBQUssT0FBT0QsTUFBTSxZQUFZLE9BQU9DLE1BQU0sVUFBVTtRQUMxRCxJQUFJRCxFQUFFRSxXQUFXLEtBQUtELEVBQUVDLFdBQVcsRUFDL0IsT0FBTztRQUNYLElBQUlDO1FBQ0osSUFBSUM7UUFDSixJQUFJQyxNQUFNQyxPQUFPLENBQUNOLE1BQU1LLE1BQU1DLE9BQU8sQ0FBQ0wsSUFBSTtZQUN0Q0UsU0FBU0gsRUFBRUcsTUFBTTtZQUNqQixJQUFJQSxXQUFXRixFQUFFRSxNQUFNLEVBQ25CLE9BQU87WUFDWCxJQUFLQyxJQUFJRCxRQUFRQyxRQUFRLEdBQ3JCLElBQUksQ0FBQ0wsVUFBVUMsQ0FBQyxDQUFDSSxFQUFFLEVBQUVILENBQUMsQ0FBQ0csRUFBRSxHQUNyQixPQUFPO1lBQ2YsT0FBTztRQUNYO1FBQ0EsSUFBSUosRUFBRU8sT0FBTyxLQUFLQyxPQUFPQyxTQUFTLENBQUNGLE9BQU8sRUFDdEMsT0FBT1AsRUFBRU8sT0FBTyxPQUFPTixFQUFFTSxPQUFPO1FBQ3BDLElBQUlQLEVBQUVVLFFBQVEsS0FBS0YsT0FBT0MsU0FBUyxDQUFDQyxRQUFRLEVBQ3hDLE9BQU9WLEVBQUVVLFFBQVEsT0FBT1QsRUFBRVMsUUFBUTtRQUN0QyxNQUFNQyxPQUFPSCxPQUFPRyxJQUFJLENBQUNYO1FBQ3pCRyxTQUFTUSxLQUFLUixNQUFNO1FBQ3BCLElBQUlBLFdBQVdLLE9BQU9HLElBQUksQ0FBQ1YsR0FBR0UsTUFBTSxFQUNoQyxPQUFPO1FBQ1gsSUFBS0MsSUFBSUQsUUFBUUMsUUFBUSxHQUNyQixJQUFJLENBQUNJLE9BQU9JLE1BQU0sQ0FBQ1gsR0FBR1UsSUFBSSxDQUFDUCxFQUFFLEdBQ3pCLE9BQU87UUFDZixJQUFLQSxJQUFJRCxRQUFRQyxRQUFRLEdBQUk7WUFDekIsTUFBTVMsTUFBTUYsSUFBSSxDQUFDUCxFQUFFO1lBQ25CLElBQUlTLE9BQU8sQ0FBQ2QsVUFBVUMsQ0FBQyxDQUFDYSxJQUFJLEVBQUVaLENBQUMsQ0FBQ1ksSUFBSSxHQUNoQyxPQUFPO1FBQ2Y7UUFDQSxPQUFPO0lBQ1g7SUFDQSxvQ0FBb0M7SUFDcEMsb0RBQW9EO0lBQ3BELE9BQU9iLE1BQU1BLEtBQUtDLE1BQU1BO0FBQzVCLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVlcEVxdWFsLmpzPzYwOWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEZvcmtlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9lcG9iZXJlemtpbi9mYXN0LWRlZXAtZXF1YWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWVwRXF1YWwoYSwgYikge1xuICAgIGlmIChhID09PSBiKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKGEuY29uc3RydWN0b3IgIT09IGIuY29uc3RydWN0b3IpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGxldCBsZW5ndGg7XG4gICAgICAgIGxldCBpO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhKSAmJiBBcnJheS5pc0FycmF5KGIpKSB7XG4gICAgICAgICAgICBsZW5ndGggPSBhLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChsZW5ndGggIT09IGIubGVuZ3RoKVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOylcbiAgICAgICAgICAgICAgICBpZiAoIWRlZXBFcXVhbChhW2ldLCBiW2ldKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGEudmFsdWVPZiAhPT0gT2JqZWN0LnByb3RvdHlwZS52YWx1ZU9mKVxuICAgICAgICAgICAgcmV0dXJuIGEudmFsdWVPZigpID09PSBiLnZhbHVlT2YoKTtcbiAgICAgICAgaWYgKGEudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpXG4gICAgICAgICAgICByZXR1cm4gYS50b1N0cmluZygpID09PSBiLnRvU3RyaW5nKCk7XG4gICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICAgICAgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgICAgIGlmIChsZW5ndGggIT09IE9iamVjdC5rZXlzKGIpLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICAgICAgaWYgKCFPYmplY3QuaGFzT3duKGIsIGtleXNbaV0pKVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KSB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xuICAgICAgICAgICAgaWYgKGtleSAmJiAhZGVlcEVxdWFsKGFba2V5XSwgYltrZXldKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8vIHRydWUgaWYgYm90aCBOYU4sIGZhbHNlIG90aGVyd2lzZVxuICAgIC8vIGJpb21lLWlnbm9yZSBsaW50L3N1c3BpY2lvdXMvbm9TZWxmQ29tcGFyZTogdXNpbmdcbiAgICByZXR1cm4gYSAhPT0gYSAmJiBiICE9PSBiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVlcEVxdWFsLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWVwRXF1YWwiLCJhIiwiYiIsImNvbnN0cnVjdG9yIiwibGVuZ3RoIiwiaSIsIkFycmF5IiwiaXNBcnJheSIsInZhbHVlT2YiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImtleXMiLCJoYXNPd24iLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/deserialize.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserialize: () => (/* binding */ deserialize)\n/* harmony export */ });\nfunction deserialize(value, reviver) {\n    return JSON.parse(value, (key, value_)=>{\n        let value = value_;\n        if (value?.__type === \"bigint\") value = BigInt(value.value);\n        if (value?.__type === \"Map\") value = new Map(value.value);\n        return reviver?.(key, value) ?? value;\n    });\n} //# sourceMappingURL=deserialize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVzZXJpYWxpemUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLFlBQVlDLEtBQUssRUFBRUMsT0FBTztJQUN0QyxPQUFPQyxLQUFLQyxLQUFLLENBQUNILE9BQU8sQ0FBQ0ksS0FBS0M7UUFDM0IsSUFBSUwsUUFBUUs7UUFDWixJQUFJTCxPQUFPTSxXQUFXLFVBQ2xCTixRQUFRTyxPQUFPUCxNQUFNQSxLQUFLO1FBQzlCLElBQUlBLE9BQU9NLFdBQVcsT0FDbEJOLFFBQVEsSUFBSVEsSUFBSVIsTUFBTUEsS0FBSztRQUMvQixPQUFPQyxVQUFVRyxLQUFLSixVQUFVQTtJQUNwQztBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVzZXJpYWxpemUuanM/OTYxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZGVzZXJpYWxpemUodmFsdWUsIHJldml2ZXIpIHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZSh2YWx1ZSwgKGtleSwgdmFsdWVfKSA9PiB7XG4gICAgICAgIGxldCB2YWx1ZSA9IHZhbHVlXztcbiAgICAgICAgaWYgKHZhbHVlPy5fX3R5cGUgPT09ICdiaWdpbnQnKVxuICAgICAgICAgICAgdmFsdWUgPSBCaWdJbnQodmFsdWUudmFsdWUpO1xuICAgICAgICBpZiAodmFsdWU/Ll9fdHlwZSA9PT0gJ01hcCcpXG4gICAgICAgICAgICB2YWx1ZSA9IG5ldyBNYXAodmFsdWUudmFsdWUpO1xuICAgICAgICByZXR1cm4gcmV2aXZlcj8uKGtleSwgdmFsdWUpID8/IHZhbHVlO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVzZXJpYWxpemUuanMubWFwIl0sIm5hbWVzIjpbImRlc2VyaWFsaXplIiwidmFsdWUiLCJyZXZpdmVyIiwiSlNPTiIsInBhcnNlIiwia2V5IiwidmFsdWVfIiwiX190eXBlIiwiQmlnSW50IiwiTWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/extractRpcUrls.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/extractRpcUrls.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractRpcUrls: () => (/* binding */ extractRpcUrls)\n/* harmony export */ });\nfunction extractRpcUrls(parameters) {\n    const { chain } = parameters;\n    const fallbackUrl = chain.rpcUrls.default.http[0];\n    if (!parameters.transports) return [\n        fallbackUrl\n    ];\n    const transport = parameters.transports?.[chain.id]?.({\n        chain\n    });\n    const transports = transport?.value?.transports || [\n        transport\n    ];\n    return transports.map(({ value })=>value?.url || fallbackUrl);\n} //# sourceMappingURL=extractRpcUrls.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZXh0cmFjdFJwY1VybHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGVBQWVDLFVBQVU7SUFDckMsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBR0Q7SUFDbEIsTUFBTUUsY0FBY0QsTUFBTUUsT0FBTyxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxFQUFFO0lBQ2pELElBQUksQ0FBQ0wsV0FBV00sVUFBVSxFQUN0QixPQUFPO1FBQUNKO0tBQVk7SUFDeEIsTUFBTUssWUFBWVAsV0FBV00sVUFBVSxFQUFFLENBQUNMLE1BQU1PLEVBQUUsQ0FBQyxHQUFHO1FBQUVQO0lBQU07SUFDOUQsTUFBTUssYUFBYUMsV0FBV0UsT0FBT0gsY0FBYztRQUFDQztLQUFVO0lBQzlELE9BQU9ELFdBQVdJLEdBQUcsQ0FBQyxDQUFDLEVBQUVELEtBQUssRUFBRSxHQUFLQSxPQUFPRSxPQUFPVDtBQUN2RCxFQUNBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3V0aWxzL2V4dHJhY3RScGNVcmxzLmpzP2E1OGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RScGNVcmxzKHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGNoYWluIH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGZhbGxiYWNrVXJsID0gY2hhaW4ucnBjVXJscy5kZWZhdWx0Lmh0dHBbMF07XG4gICAgaWYgKCFwYXJhbWV0ZXJzLnRyYW5zcG9ydHMpXG4gICAgICAgIHJldHVybiBbZmFsbGJhY2tVcmxdO1xuICAgIGNvbnN0IHRyYW5zcG9ydCA9IHBhcmFtZXRlcnMudHJhbnNwb3J0cz8uW2NoYWluLmlkXT8uKHsgY2hhaW4gfSk7XG4gICAgY29uc3QgdHJhbnNwb3J0cyA9IHRyYW5zcG9ydD8udmFsdWU/LnRyYW5zcG9ydHMgfHwgW3RyYW5zcG9ydF07XG4gICAgcmV0dXJuIHRyYW5zcG9ydHMubWFwKCh7IHZhbHVlIH0pID0+IHZhbHVlPy51cmwgfHwgZmFsbGJhY2tVcmwpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXh0cmFjdFJwY1VybHMuanMubWFwIl0sIm5hbWVzIjpbImV4dHJhY3RScGNVcmxzIiwicGFyYW1ldGVycyIsImNoYWluIiwiZmFsbGJhY2tVcmwiLCJycGNVcmxzIiwiZGVmYXVsdCIsImh0dHAiLCJ0cmFuc3BvcnRzIiwidHJhbnNwb3J0IiwiaWQiLCJ2YWx1ZSIsIm1hcCIsInVybCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/extractRpcUrls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getAction.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAction: () => (/* binding */ getAction)\n/* harmony export */ });\n/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */ function getAction(client, actionFn, // Some minifiers drop `Function.prototype.name`, or replace it with short letters,\n// meaning that `actionFn.name` will not always work. For that case, the consumer\n// needs to pass the name explicitly.\nname) {\n    const action_implicit = client[actionFn.name];\n    if (typeof action_implicit === \"function\") return action_implicit;\n    const action_explicit = client[name];\n    if (typeof action_explicit === \"function\") return action_explicit;\n    return (params)=>actionFn(client, params);\n} //# sourceMappingURL=getAction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0QWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDTSxTQUFTQSxVQUFVQyxNQUFNLEVBQUVDLFFBQVEsRUFDMUMsbUZBQW1GO0FBQ25GLGlGQUFpRjtBQUNqRixxQ0FBcUM7QUFDckNDLElBQUk7SUFDQSxNQUFNQyxrQkFBa0JILE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxDQUFDO0lBQzdDLElBQUksT0FBT0Msb0JBQW9CLFlBQzNCLE9BQU9BO0lBQ1gsTUFBTUMsa0JBQWtCSixNQUFNLENBQUNFLEtBQUs7SUFDcEMsSUFBSSxPQUFPRSxvQkFBb0IsWUFDM0IsT0FBT0E7SUFDWCxPQUFPLENBQUNDLFNBQVdKLFNBQVNELFFBQVFLO0FBQ3hDLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0QWN0aW9uLmpzP2I4MWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXRyaWV2ZXMgYW5kIHJldHVybnMgYW4gYWN0aW9uIGZyb20gdGhlIGNsaWVudCAoaWYgZXhpc3RzKSwgYW5kIGZhbGxzXG4gKiBiYWNrIHRvIHRoZSB0cmVlLXNoYWthYmxlIGFjdGlvbi5cbiAqXG4gKiBVc2VmdWwgZm9yIGV4dHJhY3Rpbmcgb3ZlcnJpZGRlbiBhY3Rpb25zIGZyb20gYSBjbGllbnQgKGllLiBpZiBhIGNvbnN1bWVyXG4gKiB3YW50cyB0byBvdmVycmlkZSB0aGUgYHNlbmRUcmFuc2FjdGlvbmAgaW1wbGVtZW50YXRpb24pLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWN0aW9uKGNsaWVudCwgYWN0aW9uRm4sIFxuLy8gU29tZSBtaW5pZmllcnMgZHJvcCBgRnVuY3Rpb24ucHJvdG90eXBlLm5hbWVgLCBvciByZXBsYWNlIGl0IHdpdGggc2hvcnQgbGV0dGVycyxcbi8vIG1lYW5pbmcgdGhhdCBgYWN0aW9uRm4ubmFtZWAgd2lsbCBub3QgYWx3YXlzIHdvcmsuIEZvciB0aGF0IGNhc2UsIHRoZSBjb25zdW1lclxuLy8gbmVlZHMgdG8gcGFzcyB0aGUgbmFtZSBleHBsaWNpdGx5LlxubmFtZSkge1xuICAgIGNvbnN0IGFjdGlvbl9pbXBsaWNpdCA9IGNsaWVudFthY3Rpb25Gbi5uYW1lXTtcbiAgICBpZiAodHlwZW9mIGFjdGlvbl9pbXBsaWNpdCA9PT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgcmV0dXJuIGFjdGlvbl9pbXBsaWNpdDtcbiAgICBjb25zdCBhY3Rpb25fZXhwbGljaXQgPSBjbGllbnRbbmFtZV07XG4gICAgaWYgKHR5cGVvZiBhY3Rpb25fZXhwbGljaXQgPT09ICdmdW5jdGlvbicpXG4gICAgICAgIHJldHVybiBhY3Rpb25fZXhwbGljaXQ7XG4gICAgcmV0dXJuIChwYXJhbXMpID0+IGFjdGlvbkZuKGNsaWVudCwgcGFyYW1zKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEFjdGlvbi5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0QWN0aW9uIiwiY2xpZW50IiwiYWN0aW9uRm4iLCJuYW1lIiwiYWN0aW9uX2ltcGxpY2l0IiwiYWN0aW9uX2V4cGxpY2l0IiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getUnit.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUnit: () => (/* binding */ getUnit)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/constants/unit.js\");\n\nfunction getUnit(unit) {\n    if (typeof unit === \"number\") return unit;\n    if (unit === \"wei\") return 0;\n    return Math.abs(viem__WEBPACK_IMPORTED_MODULE_0__.weiUnits[unit]);\n} //# sourceMappingURL=getUnit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0VW5pdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnQztBQUN6QixTQUFTQyxRQUFRQyxJQUFJO0lBQ3hCLElBQUksT0FBT0EsU0FBUyxVQUNoQixPQUFPQTtJQUNYLElBQUlBLFNBQVMsT0FDVCxPQUFPO0lBQ1gsT0FBT0MsS0FBS0MsR0FBRyxDQUFDSiwwQ0FBUSxDQUFDRSxLQUFLO0FBQ2xDLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0VW5pdC5qcz9iMzEzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdlaVVuaXRzIH0gZnJvbSAndmllbSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0VW5pdCh1bml0KSB7XG4gICAgaWYgKHR5cGVvZiB1bml0ID09PSAnbnVtYmVyJylcbiAgICAgICAgcmV0dXJuIHVuaXQ7XG4gICAgaWYgKHVuaXQgPT09ICd3ZWknKVxuICAgICAgICByZXR1cm4gMDtcbiAgICByZXR1cm4gTWF0aC5hYnMod2VpVW5pdHNbdW5pdF0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0VW5pdC5qcy5tYXAiXSwibmFtZXMiOlsid2VpVW5pdHMiLCJnZXRVbml0IiwidW5pdCIsIk1hdGgiLCJhYnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getVersion.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVersion: () => (/* binding */ getVersion)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\");\n\nconst getVersion = ()=>`@wagmi/core@${_version_js__WEBPACK_IMPORTED_MODULE_0__.version}`; //# sourceMappingURL=getVersion.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0VmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUNqQyxNQUFNQyxhQUFhLElBQU0sQ0FBQyxZQUFZLEVBQUVELGdEQUFPQSxDQUFDLENBQUMsQ0FBQyxDQUN6RCxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS91dGlscy9nZXRWZXJzaW9uLmpzP2VlNTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4uL3ZlcnNpb24uanMnO1xuZXhwb3J0IGNvbnN0IGdldFZlcnNpb24gPSAoKSA9PiBgQHdhZ21pL2NvcmVAJHt2ZXJzaW9ufWA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRWZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwiZ2V0VmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/serialize.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serialize: () => (/* binding */ serialize)\n/* harmony export */ });\n/**\n * Get the reference key for the circular value\n *\n * @param keys the keys to build the reference key from\n * @param cutoff the maximum number of keys to include\n * @returns the reference key\n */ function getReferenceKey(keys, cutoff) {\n    return keys.slice(0, cutoff).join(\".\") || \".\";\n}\n/**\n * Faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */ function getCutoff(array, value) {\n    const { length } = array;\n    for(let index = 0; index < length; ++index){\n        if (array[index] === value) {\n            return index + 1;\n        }\n    }\n    return 0;\n}\n/**\n * Create a replacer method that handles circular values\n *\n * @param [replacer] a custom replacer to use for non-circular values\n * @param [circularReplacer] a custom replacer to use for circular methods\n * @returns the value to stringify\n */ function createReplacer(replacer, circularReplacer) {\n    const hasReplacer = typeof replacer === \"function\";\n    const hasCircularReplacer = typeof circularReplacer === \"function\";\n    const cache = [];\n    const keys = [];\n    return function replace(key, value) {\n        if (typeof value === \"object\") {\n            if (cache.length) {\n                const thisCutoff = getCutoff(cache, this);\n                if (thisCutoff === 0) {\n                    cache[cache.length] = this;\n                } else {\n                    cache.splice(thisCutoff);\n                    keys.splice(thisCutoff);\n                }\n                keys[keys.length] = key;\n                const valueCutoff = getCutoff(cache, value);\n                if (valueCutoff !== 0) {\n                    return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n                }\n            } else {\n                cache[0] = value;\n                keys[0] = key;\n            }\n        }\n        return hasReplacer ? replacer.call(this, key, value) : value;\n    };\n}\n/**\n * Stringifier that handles circular values\n *\n * Forked from https://github.com/planttheidea/fast-stringify\n *\n * @param value to stringify\n * @param [replacer] a custom replacer function for handling standard values\n * @param [indent] the number of spaces to indent the output by\n * @param [circularReplacer] a custom replacer function for handling circular values\n * @returns the stringified output\n */ function serialize(value, replacer, indent, circularReplacer) {\n    return JSON.stringify(value, createReplacer((key, value_)=>{\n        let value = value_;\n        if (typeof value === \"bigint\") value = {\n            __type: \"bigint\",\n            value: value_.toString()\n        };\n        if (value instanceof Map) value = {\n            __type: \"Map\",\n            value: Array.from(value_.entries())\n        };\n        return replacer?.(key, value) ?? value;\n    }, circularReplacer), indent ?? undefined);\n} //# sourceMappingURL=serialize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvc2VyaWFsaXplLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQSxnQkFBZ0JDLElBQUksRUFBRUMsTUFBTTtJQUNqQyxPQUFPRCxLQUFLRSxLQUFLLENBQUMsR0FBR0QsUUFBUUUsSUFBSSxDQUFDLFFBQVE7QUFDOUM7QUFDQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxVQUFVQyxLQUFLLEVBQUVDLEtBQUs7SUFDM0IsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR0Y7SUFDbkIsSUFBSyxJQUFJRyxRQUFRLEdBQUdBLFFBQVFELFFBQVEsRUFBRUMsTUFBTztRQUN6QyxJQUFJSCxLQUFLLENBQUNHLE1BQU0sS0FBS0YsT0FBTztZQUN4QixPQUFPRSxRQUFRO1FBQ25CO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxlQUFlQyxRQUFRLEVBQUVDLGdCQUFnQjtJQUM5QyxNQUFNQyxjQUFjLE9BQU9GLGFBQWE7SUFDeEMsTUFBTUcsc0JBQXNCLE9BQU9GLHFCQUFxQjtJQUN4RCxNQUFNRyxRQUFRLEVBQUU7SUFDaEIsTUFBTWQsT0FBTyxFQUFFO0lBQ2YsT0FBTyxTQUFTZSxRQUFRQyxHQUFHLEVBQUVWLEtBQUs7UUFDOUIsSUFBSSxPQUFPQSxVQUFVLFVBQVU7WUFDM0IsSUFBSVEsTUFBTVAsTUFBTSxFQUFFO2dCQUNkLE1BQU1VLGFBQWFiLFVBQVVVLE9BQU8sSUFBSTtnQkFDeEMsSUFBSUcsZUFBZSxHQUFHO29CQUNsQkgsS0FBSyxDQUFDQSxNQUFNUCxNQUFNLENBQUMsR0FBRyxJQUFJO2dCQUM5QixPQUNLO29CQUNETyxNQUFNSSxNQUFNLENBQUNEO29CQUNiakIsS0FBS2tCLE1BQU0sQ0FBQ0Q7Z0JBQ2hCO2dCQUNBakIsSUFBSSxDQUFDQSxLQUFLTyxNQUFNLENBQUMsR0FBR1M7Z0JBQ3BCLE1BQU1HLGNBQWNmLFVBQVVVLE9BQU9SO2dCQUNyQyxJQUFJYSxnQkFBZ0IsR0FBRztvQkFDbkIsT0FBT04sc0JBQ0RGLGlCQUFpQlMsSUFBSSxDQUFDLElBQUksRUFBRUosS0FBS1YsT0FBT1AsZ0JBQWdCQyxNQUFNbUIsZ0JBQzlELENBQUMsS0FBSyxFQUFFcEIsZ0JBQWdCQyxNQUFNbUIsYUFBYSxDQUFDLENBQUM7Z0JBQ3ZEO1lBQ0osT0FDSztnQkFDREwsS0FBSyxDQUFDLEVBQUUsR0FBR1I7Z0JBQ1hOLElBQUksQ0FBQyxFQUFFLEdBQUdnQjtZQUNkO1FBQ0o7UUFDQSxPQUFPSixjQUFjRixTQUFTVSxJQUFJLENBQUMsSUFBSSxFQUFFSixLQUFLVixTQUFTQTtJQUMzRDtBQUNKO0FBQ0E7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLFNBQVNlLFVBQVVmLEtBQUssRUFBRUksUUFBUSxFQUFFWSxNQUFNLEVBQUVYLGdCQUFnQjtJQUMvRCxPQUFPWSxLQUFLQyxTQUFTLENBQUNsQixPQUFPRyxlQUFlLENBQUNPLEtBQUtTO1FBQzlDLElBQUluQixRQUFRbUI7UUFDWixJQUFJLE9BQU9uQixVQUFVLFVBQ2pCQSxRQUFRO1lBQUVvQixRQUFRO1lBQVVwQixPQUFPbUIsT0FBT0UsUUFBUTtRQUFHO1FBQ3pELElBQUlyQixpQkFBaUJzQixLQUNqQnRCLFFBQVE7WUFBRW9CLFFBQVE7WUFBT3BCLE9BQU91QixNQUFNQyxJQUFJLENBQUNMLE9BQU9NLE9BQU87UUFBSTtRQUNqRSxPQUFPckIsV0FBV00sS0FBS1YsVUFBVUE7SUFDckMsR0FBR0ssbUJBQW1CVyxVQUFVVTtBQUNwQyxFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3V0aWxzL3NlcmlhbGl6ZS5qcz9mMmEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IHRoZSByZWZlcmVuY2Uga2V5IGZvciB0aGUgY2lyY3VsYXIgdmFsdWVcbiAqXG4gKiBAcGFyYW0ga2V5cyB0aGUga2V5cyB0byBidWlsZCB0aGUgcmVmZXJlbmNlIGtleSBmcm9tXG4gKiBAcGFyYW0gY3V0b2ZmIHRoZSBtYXhpbXVtIG51bWJlciBvZiBrZXlzIHRvIGluY2x1ZGVcbiAqIEByZXR1cm5zIHRoZSByZWZlcmVuY2Uga2V5XG4gKi9cbmZ1bmN0aW9uIGdldFJlZmVyZW5jZUtleShrZXlzLCBjdXRvZmYpIHtcbiAgICByZXR1cm4ga2V5cy5zbGljZSgwLCBjdXRvZmYpLmpvaW4oJy4nKSB8fCAnLic7XG59XG4vKipcbiAqIEZhc3RlciBgQXJyYXkucHJvdG90eXBlLmluZGV4T2ZgIGltcGxlbWVudGF0aW9uIGJ1aWxkIGZvciBzbGljaW5nIC8gc3BsaWNpbmdcbiAqXG4gKiBAcGFyYW0gYXJyYXkgdGhlIGFycmF5IHRvIG1hdGNoIHRoZSB2YWx1ZSBpblxuICogQHBhcmFtIHZhbHVlIHRoZSB2YWx1ZSB0byBtYXRjaFxuICogQHJldHVybnMgdGhlIG1hdGNoaW5nIGluZGV4LCBvciAtMVxuICovXG5mdW5jdGlvbiBnZXRDdXRvZmYoYXJyYXksIHZhbHVlKSB7XG4gICAgY29uc3QgeyBsZW5ndGggfSA9IGFycmF5O1xuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7ICsraW5kZXgpIHtcbiAgICAgICAgaWYgKGFycmF5W2luZGV4XSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBpbmRleCArIDE7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIDA7XG59XG4vKipcbiAqIENyZWF0ZSBhIHJlcGxhY2VyIG1ldGhvZCB0aGF0IGhhbmRsZXMgY2lyY3VsYXIgdmFsdWVzXG4gKlxuICogQHBhcmFtIFtyZXBsYWNlcl0gYSBjdXN0b20gcmVwbGFjZXIgdG8gdXNlIGZvciBub24tY2lyY3VsYXIgdmFsdWVzXG4gKiBAcGFyYW0gW2NpcmN1bGFyUmVwbGFjZXJdIGEgY3VzdG9tIHJlcGxhY2VyIHRvIHVzZSBmb3IgY2lyY3VsYXIgbWV0aG9kc1xuICogQHJldHVybnMgdGhlIHZhbHVlIHRvIHN0cmluZ2lmeVxuICovXG5mdW5jdGlvbiBjcmVhdGVSZXBsYWNlcihyZXBsYWNlciwgY2lyY3VsYXJSZXBsYWNlcikge1xuICAgIGNvbnN0IGhhc1JlcGxhY2VyID0gdHlwZW9mIHJlcGxhY2VyID09PSAnZnVuY3Rpb24nO1xuICAgIGNvbnN0IGhhc0NpcmN1bGFyUmVwbGFjZXIgPSB0eXBlb2YgY2lyY3VsYXJSZXBsYWNlciA9PT0gJ2Z1bmN0aW9uJztcbiAgICBjb25zdCBjYWNoZSA9IFtdO1xuICAgIGNvbnN0IGtleXMgPSBbXTtcbiAgICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShrZXksIHZhbHVlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBpZiAoY2FjaGUubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGhpc0N1dG9mZiA9IGdldEN1dG9mZihjYWNoZSwgdGhpcyk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXNDdXRvZmYgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGVbY2FjaGUubGVuZ3RoXSA9IHRoaXM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZS5zcGxpY2UodGhpc0N1dG9mZik7XG4gICAgICAgICAgICAgICAgICAgIGtleXMuc3BsaWNlKHRoaXNDdXRvZmYpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBrZXlzW2tleXMubGVuZ3RoXSA9IGtleTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZUN1dG9mZiA9IGdldEN1dG9mZihjYWNoZSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmICh2YWx1ZUN1dG9mZiAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGFzQ2lyY3VsYXJSZXBsYWNlclxuICAgICAgICAgICAgICAgICAgICAgICAgPyBjaXJjdWxhclJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSwgZ2V0UmVmZXJlbmNlS2V5KGtleXMsIHZhbHVlQ3V0b2ZmKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIDogYFtyZWY9JHtnZXRSZWZlcmVuY2VLZXkoa2V5cywgdmFsdWVDdXRvZmYpfV1gO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhY2hlWzBdID0gdmFsdWU7XG4gICAgICAgICAgICAgICAga2V5c1swXSA9IGtleTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGFzUmVwbGFjZXIgPyByZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpIDogdmFsdWU7XG4gICAgfTtcbn1cbi8qKlxuICogU3RyaW5naWZpZXIgdGhhdCBoYW5kbGVzIGNpcmN1bGFyIHZhbHVlc1xuICpcbiAqIEZvcmtlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9wbGFudHRoZWlkZWEvZmFzdC1zdHJpbmdpZnlcbiAqXG4gKiBAcGFyYW0gdmFsdWUgdG8gc3RyaW5naWZ5XG4gKiBAcGFyYW0gW3JlcGxhY2VyXSBhIGN1c3RvbSByZXBsYWNlciBmdW5jdGlvbiBmb3IgaGFuZGxpbmcgc3RhbmRhcmQgdmFsdWVzXG4gKiBAcGFyYW0gW2luZGVudF0gdGhlIG51bWJlciBvZiBzcGFjZXMgdG8gaW5kZW50IHRoZSBvdXRwdXQgYnlcbiAqIEBwYXJhbSBbY2lyY3VsYXJSZXBsYWNlcl0gYSBjdXN0b20gcmVwbGFjZXIgZnVuY3Rpb24gZm9yIGhhbmRsaW5nIGNpcmN1bGFyIHZhbHVlc1xuICogQHJldHVybnMgdGhlIHN0cmluZ2lmaWVkIG91dHB1dFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplKHZhbHVlLCByZXBsYWNlciwgaW5kZW50LCBjaXJjdWxhclJlcGxhY2VyKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBjcmVhdGVSZXBsYWNlcigoa2V5LCB2YWx1ZV8pID0+IHtcbiAgICAgICAgbGV0IHZhbHVlID0gdmFsdWVfO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnYmlnaW50JylcbiAgICAgICAgICAgIHZhbHVlID0geyBfX3R5cGU6ICdiaWdpbnQnLCB2YWx1ZTogdmFsdWVfLnRvU3RyaW5nKCkgfTtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgTWFwKVxuICAgICAgICAgICAgdmFsdWUgPSB7IF9fdHlwZTogJ01hcCcsIHZhbHVlOiBBcnJheS5mcm9tKHZhbHVlXy5lbnRyaWVzKCkpIH07XG4gICAgICAgIHJldHVybiByZXBsYWNlcj8uKGtleSwgdmFsdWUpID8/IHZhbHVlO1xuICAgIH0sIGNpcmN1bGFyUmVwbGFjZXIpLCBpbmRlbnQgPz8gdW5kZWZpbmVkKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6ZS5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0UmVmZXJlbmNlS2V5Iiwia2V5cyIsImN1dG9mZiIsInNsaWNlIiwiam9pbiIsImdldEN1dG9mZiIsImFycmF5IiwidmFsdWUiLCJsZW5ndGgiLCJpbmRleCIsImNyZWF0ZVJlcGxhY2VyIiwicmVwbGFjZXIiLCJjaXJjdWxhclJlcGxhY2VyIiwiaGFzUmVwbGFjZXIiLCJoYXNDaXJjdWxhclJlcGxhY2VyIiwiY2FjaGUiLCJyZXBsYWNlIiwia2V5IiwidGhpc0N1dG9mZiIsInNwbGljZSIsInZhbHVlQ3V0b2ZmIiwiY2FsbCIsInNlcmlhbGl6ZSIsImluZGVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ2YWx1ZV8iLCJfX3R5cGUiLCJ0b1N0cmluZyIsIk1hcCIsIkFycmF5IiwiZnJvbSIsImVudHJpZXMiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js":
/*!********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/uid.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uid: () => (/* binding */ uid)\n/* harmony export */ });\nconst size = 256;\nlet index = size;\nlet buffer;\nfunction uid(length = 11) {\n    if (!buffer || index + length > size * 2) {\n        buffer = \"\";\n        index = 0;\n        for(let i = 0; i < size; i++){\n            buffer += (256 + Math.random() * 256 | 0).toString(16).substring(1);\n        }\n    }\n    return buffer.substring(index, index++ + length);\n} //# sourceMappingURL=uid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvdWlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxPQUFPO0FBQ2IsSUFBSUMsUUFBUUQ7QUFDWixJQUFJRTtBQUNHLFNBQVNDLElBQUlDLFNBQVMsRUFBRTtJQUMzQixJQUFJLENBQUNGLFVBQVVELFFBQVFHLFNBQVNKLE9BQU8sR0FBRztRQUN0Q0UsU0FBUztRQUNURCxRQUFRO1FBQ1IsSUFBSyxJQUFJSSxJQUFJLEdBQUdBLElBQUlMLE1BQU1LLElBQUs7WUFDM0JILFVBQVUsQ0FBQyxNQUFPSSxLQUFLQyxNQUFNLEtBQUssTUFBTyxHQUFHQyxRQUFRLENBQUMsSUFBSUMsU0FBUyxDQUFDO1FBQ3ZFO0lBQ0o7SUFDQSxPQUFPUCxPQUFPTyxTQUFTLENBQUNSLE9BQU9BLFVBQVVHO0FBQzdDLEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhYmxlLXJvdXRlci13ZWIvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvdWlkLmpzP2EzOWUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2l6ZSA9IDI1NjtcbmxldCBpbmRleCA9IHNpemU7XG5sZXQgYnVmZmVyO1xuZXhwb3J0IGZ1bmN0aW9uIHVpZChsZW5ndGggPSAxMSkge1xuICAgIGlmICghYnVmZmVyIHx8IGluZGV4ICsgbGVuZ3RoID4gc2l6ZSAqIDIpIHtcbiAgICAgICAgYnVmZmVyID0gJyc7XG4gICAgICAgIGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpKyspIHtcbiAgICAgICAgICAgIGJ1ZmZlciArPSAoKDI1NiArIE1hdGgucmFuZG9tKCkgKiAyNTYpIHwgMCkudG9TdHJpbmcoMTYpLnN1YnN0cmluZygxKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYnVmZmVyLnN1YnN0cmluZyhpbmRleCwgaW5kZXgrKyArIGxlbmd0aCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11aWQuanMubWFwIl0sIm5hbWVzIjpbInNpemUiLCJpbmRleCIsImJ1ZmZlciIsInVpZCIsImxlbmd0aCIsImkiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/version.js":
/*!******************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/version.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"2.19.0\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsVUFBVSxTQUFTLENBQ2hDLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YWJsZS1yb3V0ZXItd2ViLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3ZlcnNpb24uanM/OGE5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjE5LjAnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   createJSONStorage: () => (/* binding */ createJSONStorage),\n/* harmony export */   devtools: () => (/* binding */ devtools),\n/* harmony export */   persist: () => (/* binding */ persist),\n/* harmony export */   redux: () => (/* binding */ redux),\n/* harmony export */   subscribeWithSelector: () => (/* binding */ subscribeWithSelector)\n/* harmony export */ });\nconst reduxImpl = (reducer, initial)=>(set, _get, api)=>{\n        api.dispatch = (action)=>{\n            set((state)=>reducer(state, action), false, action);\n            return action;\n        };\n        api.dispatchFromDevtools = true;\n        return {\n            dispatch: (...a)=>api.dispatch(...a),\n            ...initial\n        };\n    };\nconst redux = reduxImpl;\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name)=>{\n    const api = trackedConnections.get(name);\n    if (!api) return {};\n    return Object.fromEntries(Object.entries(api.stores).map(([key, api2])=>[\n            key,\n            api2.getState()\n        ]));\n};\nconst extractConnectionInformation = (store, extensionConnector, options)=>{\n    if (store === void 0) {\n        return {\n            type: \"untracked\",\n            connection: extensionConnector.connect(options)\n        };\n    }\n    const existingConnection = trackedConnections.get(options.name);\n    if (existingConnection) {\n        return {\n            type: \"tracked\",\n            store,\n            ...existingConnection\n        };\n    }\n    const newConnection = {\n        connection: extensionConnector.connect(options),\n        stores: {}\n    };\n    trackedConnections.set(options.name, newConnection);\n    return {\n        type: \"tracked\",\n        store,\n        ...newConnection\n    };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {})=>(set, get, api)=>{\n        const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n        let extensionConnector;\n        try {\n            extensionConnector = (enabled != null ? enabled : ( false ? 0 : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n        } catch (e) {}\n        if (!extensionConnector) {\n            return fn(set, get, api);\n        }\n        const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n        let isRecording = true;\n        api.setState = (state, replace, nameOrAction)=>{\n            const r = set(state, replace);\n            if (!isRecording) return r;\n            const action = nameOrAction === void 0 ? {\n                type: anonymousActionType || \"anonymous\"\n            } : typeof nameOrAction === \"string\" ? {\n                type: nameOrAction\n            } : nameOrAction;\n            if (store === void 0) {\n                connection == null ? void 0 : connection.send(action, get());\n                return r;\n            }\n            connection == null ? void 0 : connection.send({\n                ...action,\n                type: `${store}/${action.type}`\n            }, {\n                ...getTrackedConnectionState(options.name),\n                [store]: api.getState()\n            });\n            return r;\n        };\n        const setStateFromDevtools = (...a)=>{\n            const originalIsRecording = isRecording;\n            isRecording = false;\n            set(...a);\n            isRecording = originalIsRecording;\n        };\n        const initialState = fn(api.setState, get, api);\n        if (connectionInformation.type === \"untracked\") {\n            connection == null ? void 0 : connection.init(initialState);\n        } else {\n            connectionInformation.stores[connectionInformation.store] = api;\n            connection == null ? void 0 : connection.init(Object.fromEntries(Object.entries(connectionInformation.stores).map(([key, store2])=>[\n                    key,\n                    key === connectionInformation.store ? initialState : store2.getState()\n                ])));\n        }\n        if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n            let didWarnAboutReservedActionType = false;\n            const originalDispatch = api.dispatch;\n            api.dispatch = (...a)=>{\n                if (( false ? 0 : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n                    console.warn('[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.');\n                    didWarnAboutReservedActionType = true;\n                }\n                originalDispatch(...a);\n            };\n        }\n        connection.subscribe((message)=>{\n            var _a;\n            switch(message.type){\n                case \"ACTION\":\n                    if (typeof message.payload !== \"string\") {\n                        console.error(\"[zustand devtools middleware] Unsupported action format\");\n                        return;\n                    }\n                    return parseJsonThen(message.payload, (action)=>{\n                        if (action.type === \"__setState\") {\n                            if (store === void 0) {\n                                setStateFromDevtools(action.state);\n                                return;\n                            }\n                            if (Object.keys(action.state).length !== 1) {\n                                console.error(`\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `);\n                            }\n                            const stateFromDevtools = action.state[store];\n                            if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                                return;\n                            }\n                            if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                                setStateFromDevtools(stateFromDevtools);\n                            }\n                            return;\n                        }\n                        if (!api.dispatchFromDevtools) return;\n                        if (typeof api.dispatch !== \"function\") return;\n                        api.dispatch(action);\n                    });\n                case \"DISPATCH\":\n                    switch(message.payload.type){\n                        case \"RESET\":\n                            setStateFromDevtools(initialState);\n                            if (store === void 0) {\n                                return connection == null ? void 0 : connection.init(api.getState());\n                            }\n                            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                        case \"COMMIT\":\n                            if (store === void 0) {\n                                connection == null ? void 0 : connection.init(api.getState());\n                                return;\n                            }\n                            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                        case \"ROLLBACK\":\n                            return parseJsonThen(message.state, (state)=>{\n                                if (store === void 0) {\n                                    setStateFromDevtools(state);\n                                    connection == null ? void 0 : connection.init(api.getState());\n                                    return;\n                                }\n                                setStateFromDevtools(state[store]);\n                                connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                            });\n                        case \"JUMP_TO_STATE\":\n                        case \"JUMP_TO_ACTION\":\n                            return parseJsonThen(message.state, (state)=>{\n                                if (store === void 0) {\n                                    setStateFromDevtools(state);\n                                    return;\n                                }\n                                if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                                    setStateFromDevtools(state[store]);\n                                }\n                            });\n                        case \"IMPORT_STATE\":\n                            {\n                                const { nextLiftedState } = message.payload;\n                                const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n                                if (!lastComputedState) return;\n                                if (store === void 0) {\n                                    setStateFromDevtools(lastComputedState);\n                                } else {\n                                    setStateFromDevtools(lastComputedState[store]);\n                                }\n                                connection == null ? void 0 : connection.send(null, // FIXME no-any\n                                nextLiftedState);\n                                return;\n                            }\n                        case \"PAUSE_RECORDING\":\n                            return isRecording = !isRecording;\n                    }\n                    return;\n            }\n        });\n        return initialState;\n    };\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f)=>{\n    let parsed;\n    try {\n        parsed = JSON.parse(stringified);\n    } catch (e) {\n        console.error(\"[zustand devtools middleware] Could not parse the received json\", e);\n    }\n    if (parsed !== void 0) f(parsed);\n};\nconst subscribeWithSelectorImpl = (fn)=>(set, get, api)=>{\n        const origSubscribe = api.subscribe;\n        api.subscribe = (selector, optListener, options)=>{\n            let listener = selector;\n            if (optListener) {\n                const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n                let currentSlice = selector(api.getState());\n                listener = (state)=>{\n                    const nextSlice = selector(state);\n                    if (!equalityFn(currentSlice, nextSlice)) {\n                        const previousSlice = currentSlice;\n                        optListener(currentSlice = nextSlice, previousSlice);\n                    }\n                };\n                if (options == null ? void 0 : options.fireImmediately) {\n                    optListener(currentSlice, currentSlice);\n                }\n            }\n            return origSubscribe(listener);\n        };\n        const initialState = fn(set, get, api);\n        return initialState;\n    };\nconst subscribeWithSelector = subscribeWithSelectorImpl;\nconst combine = (initialState, create)=>(...a)=>Object.assign({}, initialState, create(...a));\nfunction createJSONStorage(getStorage, options) {\n    let storage;\n    try {\n        storage = getStorage();\n    } catch (e) {\n        return;\n    }\n    const persistStorage = {\n        getItem: (name)=>{\n            var _a;\n            const parse = (str2)=>{\n                if (str2 === null) {\n                    return null;\n                }\n                return JSON.parse(str2, options == null ? void 0 : options.reviver);\n            };\n            const str = (_a = storage.getItem(name)) != null ? _a : null;\n            if (str instanceof Promise) {\n                return str.then(parse);\n            }\n            return parse(str);\n        },\n        setItem: (name, newValue)=>storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n        removeItem: (name)=>storage.removeItem(name)\n    };\n    return persistStorage;\n}\nconst toThenable = (fn)=>(input)=>{\n        try {\n            const result = fn(input);\n            if (result instanceof Promise) {\n                return result;\n            }\n            return {\n                then (onFulfilled) {\n                    return toThenable(onFulfilled)(result);\n                },\n                catch (_onRejected) {\n                    return this;\n                }\n            };\n        } catch (e) {\n            return {\n                then (_onFulfilled) {\n                    return this;\n                },\n                catch (onRejected) {\n                    return toThenable(onRejected)(e);\n                }\n            };\n        }\n    };\nconst persistImpl = (config, baseOptions)=>(set, get, api)=>{\n        let options = {\n            storage: createJSONStorage(()=>localStorage),\n            partialize: (state)=>state,\n            version: 0,\n            merge: (persistedState, currentState)=>({\n                    ...currentState,\n                    ...persistedState\n                }),\n            ...baseOptions\n        };\n        let hasHydrated = false;\n        const hydrationListeners = /* @__PURE__ */ new Set();\n        const finishHydrationListeners = /* @__PURE__ */ new Set();\n        let storage = options.storage;\n        if (!storage) {\n            return config((...args)=>{\n                console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);\n                set(...args);\n            }, get, api);\n        }\n        const setItem = ()=>{\n            const state = options.partialize({\n                ...get()\n            });\n            return storage.setItem(options.name, {\n                state,\n                version: options.version\n            });\n        };\n        const savedSetState = api.setState;\n        api.setState = (state, replace)=>{\n            savedSetState(state, replace);\n            void setItem();\n        };\n        const configResult = config((...args)=>{\n            set(...args);\n            void setItem();\n        }, get, api);\n        api.getInitialState = ()=>configResult;\n        let stateFromStorage;\n        const hydrate = ()=>{\n            var _a, _b;\n            if (!storage) return;\n            hasHydrated = false;\n            hydrationListeners.forEach((cb)=>{\n                var _a2;\n                return cb((_a2 = get()) != null ? _a2 : configResult);\n            });\n            const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n            return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue)=>{\n                if (deserializedStorageValue) {\n                    if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n                        if (options.migrate) {\n                            return [\n                                true,\n                                options.migrate(deserializedStorageValue.state, deserializedStorageValue.version)\n                            ];\n                        }\n                        console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);\n                    } else {\n                        return [\n                            false,\n                            deserializedStorageValue.state\n                        ];\n                    }\n                }\n                return [\n                    false,\n                    void 0\n                ];\n            }).then((migrationResult)=>{\n                var _a2;\n                const [migrated, migratedState] = migrationResult;\n                stateFromStorage = options.merge(migratedState, (_a2 = get()) != null ? _a2 : configResult);\n                set(stateFromStorage, true);\n                if (migrated) {\n                    return setItem();\n                }\n            }).then(()=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n                stateFromStorage = get();\n                hasHydrated = true;\n                finishHydrationListeners.forEach((cb)=>cb(stateFromStorage));\n            }).catch((e)=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n            });\n        };\n        api.persist = {\n            setOptions: (newOptions)=>{\n                options = {\n                    ...options,\n                    ...newOptions\n                };\n                if (newOptions.storage) {\n                    storage = newOptions.storage;\n                }\n            },\n            clearStorage: ()=>{\n                storage == null ? void 0 : storage.removeItem(options.name);\n            },\n            getOptions: ()=>options,\n            rehydrate: ()=>hydrate(),\n            hasHydrated: ()=>hasHydrated,\n            onHydrate: (cb)=>{\n                hydrationListeners.add(cb);\n                return ()=>{\n                    hydrationListeners.delete(cb);\n                };\n            },\n            onFinishHydration: (cb)=>{\n                finishHydrationListeners.add(cb);\n                return ()=>{\n                    finishHydrationListeners.delete(cb);\n                };\n            }\n        };\n        if (!options.skipHydration) {\n            hydrate();\n        }\n        return stateFromStorage || configResult;\n    };\nconst persist = persistImpl;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: () => (/* binding */ createStore)\n/* harmony export */ });\nconst createStoreImpl = (createState)=>{\n    let state;\n    const listeners = /* @__PURE__ */ new Set();\n    const setState = (partial, replace)=>{\n        const nextState = typeof partial === \"function\" ? partial(state) : partial;\n        if (!Object.is(nextState, state)) {\n            const previousState = state;\n            state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n            listeners.forEach((listener)=>listener(state, previousState));\n        }\n    };\n    const getState = ()=>state;\n    const getInitialState = ()=>initialState;\n    const subscribe = (listener)=>{\n        listeners.add(listener);\n        return ()=>listeners.delete(listener);\n    };\n    const api = {\n        setState,\n        getState,\n        getInitialState,\n        subscribe\n    };\n    const initialState = state = createState(setState, getState, api);\n    return api;\n};\nconst createStore = (createState)=>createState ? createStoreImpl(createState) : createStoreImpl;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL3ZhbmlsbGEubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxrQkFBa0IsQ0FBQ0M7SUFDdkIsSUFBSUM7SUFDSixNQUFNQyxZQUFZLGFBQWEsR0FBRyxJQUFJQztJQUN0QyxNQUFNQyxXQUFXLENBQUNDLFNBQVNDO1FBQ3pCLE1BQU1DLFlBQVksT0FBT0YsWUFBWSxhQUFhQSxRQUFRSixTQUFTSTtRQUNuRSxJQUFJLENBQUNHLE9BQU9DLEVBQUUsQ0FBQ0YsV0FBV04sUUFBUTtZQUNoQyxNQUFNUyxnQkFBZ0JUO1lBQ3RCQSxRQUFRLENBQUNLLFdBQVcsT0FBT0EsVUFBVSxPQUFPQyxjQUFjLFlBQVlBLGNBQWMsSUFBRyxJQUFLQSxZQUFZQyxPQUFPRyxNQUFNLENBQUMsQ0FBQyxHQUFHVixPQUFPTTtZQUNqSUwsVUFBVVUsT0FBTyxDQUFDLENBQUNDLFdBQWFBLFNBQVNaLE9BQU9TO1FBQ2xEO0lBQ0Y7SUFDQSxNQUFNSSxXQUFXLElBQU1iO0lBQ3ZCLE1BQU1jLGtCQUFrQixJQUFNQztJQUM5QixNQUFNQyxZQUFZLENBQUNKO1FBQ2pCWCxVQUFVZ0IsR0FBRyxDQUFDTDtRQUNkLE9BQU8sSUFBTVgsVUFBVWlCLE1BQU0sQ0FBQ047SUFDaEM7SUFDQSxNQUFNTyxNQUFNO1FBQUVoQjtRQUFVVTtRQUFVQztRQUFpQkU7SUFBVTtJQUM3RCxNQUFNRCxlQUFlZixRQUFRRCxZQUFZSSxVQUFVVSxVQUFVTTtJQUM3RCxPQUFPQTtBQUNUO0FBQ0EsTUFBTUMsY0FBYyxDQUFDckIsY0FBZ0JBLGNBQWNELGdCQUFnQkMsZUFBZUQ7QUFFM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFibGUtcm91dGVyLXdlYi8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9ub2RlX21vZHVsZXMvenVzdGFuZC9lc20vdmFuaWxsYS5tanM/NGJhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjcmVhdGVTdG9yZUltcGwgPSAoY3JlYXRlU3RhdGUpID0+IHtcbiAgbGV0IHN0YXRlO1xuICBjb25zdCBsaXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBjb25zdCBzZXRTdGF0ZSA9IChwYXJ0aWFsLCByZXBsYWNlKSA9PiB7XG4gICAgY29uc3QgbmV4dFN0YXRlID0gdHlwZW9mIHBhcnRpYWwgPT09IFwiZnVuY3Rpb25cIiA/IHBhcnRpYWwoc3RhdGUpIDogcGFydGlhbDtcbiAgICBpZiAoIU9iamVjdC5pcyhuZXh0U3RhdGUsIHN0YXRlKSkge1xuICAgICAgY29uc3QgcHJldmlvdXNTdGF0ZSA9IHN0YXRlO1xuICAgICAgc3RhdGUgPSAocmVwbGFjZSAhPSBudWxsID8gcmVwbGFjZSA6IHR5cGVvZiBuZXh0U3RhdGUgIT09IFwib2JqZWN0XCIgfHwgbmV4dFN0YXRlID09PSBudWxsKSA/IG5leHRTdGF0ZSA6IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXh0U3RhdGUpO1xuICAgICAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiBsaXN0ZW5lcihzdGF0ZSwgcHJldmlvdXNTdGF0ZSkpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgZ2V0U3RhdGUgPSAoKSA9PiBzdGF0ZTtcbiAgY29uc3QgZ2V0SW5pdGlhbFN0YXRlID0gKCkgPT4gaW5pdGlhbFN0YXRlO1xuICBjb25zdCBzdWJzY3JpYmUgPSAobGlzdGVuZXIpID0+IHtcbiAgICBsaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gKCkgPT4gbGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcik7XG4gIH07XG4gIGNvbnN0IGFwaSA9IHsgc2V0U3RhdGUsIGdldFN0YXRlLCBnZXRJbml0aWFsU3RhdGUsIHN1YnNjcmliZSB9O1xuICBjb25zdCBpbml0aWFsU3RhdGUgPSBzdGF0ZSA9IGNyZWF0ZVN0YXRlKHNldFN0YXRlLCBnZXRTdGF0ZSwgYXBpKTtcbiAgcmV0dXJuIGFwaTtcbn07XG5jb25zdCBjcmVhdGVTdG9yZSA9IChjcmVhdGVTdGF0ZSkgPT4gY3JlYXRlU3RhdGUgPyBjcmVhdGVTdG9yZUltcGwoY3JlYXRlU3RhdGUpIDogY3JlYXRlU3RvcmVJbXBsO1xuXG5leHBvcnQgeyBjcmVhdGVTdG9yZSB9O1xuIl0sIm5hbWVzIjpbImNyZWF0ZVN0b3JlSW1wbCIsImNyZWF0ZVN0YXRlIiwic3RhdGUiLCJsaXN0ZW5lcnMiLCJTZXQiLCJzZXRTdGF0ZSIsInBhcnRpYWwiLCJyZXBsYWNlIiwibmV4dFN0YXRlIiwiT2JqZWN0IiwiaXMiLCJwcmV2aW91c1N0YXRlIiwiYXNzaWduIiwiZm9yRWFjaCIsImxpc3RlbmVyIiwiZ2V0U3RhdGUiLCJnZXRJbml0aWFsU3RhdGUiLCJpbml0aWFsU3RhdGUiLCJzdWJzY3JpYmUiLCJhZGQiLCJkZWxldGUiLCJhcGkiLCJjcmVhdGVTdG9yZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs\n");

/***/ })

};
;